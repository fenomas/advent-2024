{"version":3,"file":"index-CSVazVzX.js","sources":["../../node_modules/.pnpm/solid-js@1.9.3/node_modules/solid-js/dist/solid.js","../../node_modules/.pnpm/solid-js@1.9.3/node_modules/solid-js/web/dist/web.js","../../src/advent/day01/solution.ts","../../src/advent/day02/solution.ts","../../src/advent/day03/solution.ts","../../src/advent/day04/solution.ts","../../src/advent/day05/solution.ts","../../src/advent/day06/solution.ts","../../src/advent/day07/solution.ts","../../src/advent/day01/input-test.md?raw","../../src/advent/day01/input.md?raw","../../src/advent/day02/input-test.md?raw","../../src/advent/day02/input.md?raw","../../src/advent/day03/input-test.md?raw","../../src/advent/day03/input-test2.md?raw","../../src/advent/day03/input.md?raw","../../src/advent/day04/input-test.md?raw","../../src/advent/day04/input.md?raw","../../src/advent/day05/input-test.md?raw","../../src/advent/day05/input.md?raw","../../src/advent/day06/input-test.md?raw","../../src/advent/day06/input.md?raw","../../src/advent/day07/input-test.md?raw","../../src/advent/day07/input.md?raw","../../src/advent/day08/input-test.md?raw","../../src/advent/day08/input.md?raw","../../src/advent/day09/input-test.md?raw","../../src/advent/day09/input.md?raw","../../src/advent/day10/input-test.md?raw","../../src/advent/day10/input.md?raw","../../src/advent/day11/input-test.md?raw","../../src/advent/day11/input.md?raw","../../src/advent/day12/input-test.md?raw","../../src/advent/day12/input.md?raw","../../src/advent/day13/input-test.md?raw","../../src/advent/day13/input.md?raw","../../src/advent/day14/input-test.md?raw","../../src/advent/day14/input.md?raw","../../src/advent/day15/input-test.md?raw","../../src/advent/day15/input.md?raw","../../src/advent/day16/input-test.md?raw","../../src/advent/day16/input.md?raw","../../src/advent/day17/input-test.md?raw","../../src/advent/day17/input.md?raw","../../src/advent/day18/input-test.md?raw","../../src/advent/day18/input.md?raw","../../src/advent/day19/input-test.md?raw","../../src/advent/day19/input.md?raw","../../src/advent/day20/input-test.md?raw","../../src/advent/day20/input.md?raw","../../src/advent/day21/input-test.md?raw","../../src/advent/day21/input.md?raw","../../src/advent/day22/input-test.md?raw","../../src/advent/day22/input.md?raw","../../src/advent/day23/input-test.md?raw","../../src/advent/day23/input.md?raw","../../src/advent/day24/input-test.md?raw","../../src/advent/day24/input.md?raw","../../src/advent/day25/input-test.md?raw","../../src/advent/day25/input.md?raw","../../src/App/importer.ts","../../src/App/state.ts","../../src/App/components/PartOutput.tsx","../../src/App/components/ToggleButton.tsx","../../src/App/components/InputsNav.tsx","../../src/App/components/DayButtons.tsx","../../src/App/components/InputArea.tsx","../../src/App/components/CatchButton.tsx","../../src/App/components/RunAllButton.tsx","../../src/App/App.tsx","../../src/index.ts"],"sourcesContent":["let taskIdCounter = 1,\n  isCallbackScheduled = false,\n  isPerformingWork = false,\n  taskQueue = [],\n  currentTask = null,\n  shouldYieldToHost = null,\n  yieldInterval = 5,\n  deadline = 0,\n  maxYieldInterval = 300,\n  scheduleCallback = null,\n  scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n    port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = (n + m) >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;\n      else if (cmp < 0) n = k - 1;\n      else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n    timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {\n  context: undefined,\n  registry: undefined,\n  effects: undefined,\n  done: false,\n  getContextId() {\n    return getContextId(this.context.count);\n  },\n  getNextContextId() {\n    return getContextId(this.context.count++);\n  }\n};\nfunction getContextId(count) {\n  const num = String(count),\n    len = num.length - 1;\n  return sharedConfig.context.id + (len ? String.fromCharCode(96 + len) : \"\") + num;\n}\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return {\n    ...sharedConfig.context,\n    id: sharedConfig.getNextContextId(),\n    count: 0\n  };\n}\n\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst SUPPORTS_PROXY = typeof Proxy === \"function\";\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst NO_INIT = {};\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceConfig = null;\nlet Listener = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n    owner = Owner,\n    unowned = fn.length === 0,\n    current = detachedOwner === undefined ? owner : detachedOwner,\n    root = unowned\n      ? UNOWNED\n      : {\n          owned: null,\n          cleanups: null,\n          context: current ? current.context : null,\n          owner: current\n        },\n    updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    comparator: options.equals || undefined\n  };\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.tValue);\n      else value = value(s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);\n  else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);\n  else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  if (!options || !options.render) c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(\n      () => {\n        fn ? fn() : untrack(onInvalidate);\n        fn = undefined;\n      },\n      undefined,\n      false,\n      0\n    ),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0);\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction isPromise(v) {\n  return v && typeof v === \"object\" && \"then\" in v;\n}\nfunction createResource(pSource, pFetcher, pOptions) {\n  let source;\n  let fetcher;\n  let options;\n  if ((arguments.length === 2 && typeof pFetcher === \"object\") || arguments.length === 1) {\n    source = true;\n    fetcher = pSource;\n    options = pFetcher || {};\n  } else {\n    source = pSource;\n    fetcher = pFetcher;\n    options = pOptions || {};\n  }\n  let pr = null,\n    initP = NO_INIT,\n    id = null,\n    loadedUnderTransition = false,\n    scheduled = false,\n    resolved = \"initialValue\" in options,\n    dynamic = typeof source === \"function\" && createMemo(source);\n  const contexts = new Set(),\n    [value, setValue] = (options.storage || createSignal)(options.initialValue),\n    [error, setError] = createSignal(undefined),\n    [track, trigger] = createSignal(undefined, {\n      equals: false\n    }),\n    [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\n  if (sharedConfig.context) {\n    id = sharedConfig.getNextContextId();\n    if (options.ssrLoadFrom === \"initial\") initP = options.initialValue;\n    else if (sharedConfig.load && sharedConfig.has(id)) initP = sharedConfig.load(id);\n  }\n  function loadEnd(p, v, error, key) {\n    if (pr === p) {\n      pr = null;\n      key !== undefined && (resolved = true);\n      if ((p === initP || v === initP) && options.onHydrated)\n        queueMicrotask(() =>\n          options.onHydrated(key, {\n            value: v\n          })\n        );\n      initP = NO_INIT;\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          completeLoad(v, error);\n        }, false);\n      } else completeLoad(v, error);\n    }\n    return v;\n  }\n  function completeLoad(v, err) {\n    runUpdates(() => {\n      if (err === undefined) setValue(() => v);\n      setState(err !== undefined ? \"errored\" : resolved ? \"ready\" : \"unresolved\");\n      setError(err);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    }, false);\n  }\n  function read() {\n    const c = SuspenseContext && useContext(SuspenseContext),\n      v = value(),\n      err = error();\n    if (err !== undefined && !pr) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);\n          else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching !== false && scheduled) return;\n    scheduled = false;\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p =\n      initP !== NO_INIT\n        ? initP\n        : untrack(() =>\n            fetcher(lookup, {\n              value: value(),\n              refetching\n            })\n          );\n    if (!isPromise(p)) {\n      loadEnd(pr, p, undefined, lookup);\n      return p;\n    }\n    pr = p;\n    if (\"value\" in p) {\n      if (p.status === \"success\") loadEnd(pr, p.value, undefined, lookup);\n      else loadEnd(pr, undefined, castError(p.value), lookup);\n      return p;\n    }\n    scheduled = true;\n    queueMicrotask(() => (scheduled = false));\n    runUpdates(() => {\n      setState(resolved ? \"refreshing\" : \"pending\");\n      trigger();\n    }, false);\n    return p.then(\n      v => loadEnd(p, v, undefined, lookup),\n      e => loadEnd(p, undefined, castError(e), lookup)\n    );\n  }\n  Object.defineProperties(read, {\n    state: {\n      get: () => state()\n    },\n    error: {\n      get: () => error()\n    },\n    loading: {\n      get() {\n        const s = state();\n        return s === \"pending\" || s === \"refreshing\";\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        const err = error();\n        if (err && !pr) throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic) createComputed(() => load(false));\n  else load(false);\n  return [\n    read,\n    {\n      refetch: load,\n      mutate: setValue\n    }\n  ];\n}\nfunction createDeferred(source, options) {\n  let t,\n    timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(\n    () => {\n      if (!t || !t.fn)\n        t = requestCallback(\n          () => setDeferred(() => node.value),\n          timeout !== undefined\n            ? {\n                timeout\n              }\n            : undefined\n        );\n      return source();\n    },\n    undefined,\n    true\n  );\n  const [deferred, setDeferred] = createSignal(\n    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value,\n    options\n  );\n  updateComputation(node);\n  setDeferred(() =>\n    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value\n  );\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn, options) {\n  const subs = new Map();\n  const node = createComputation(\n    p => {\n      const v = source();\n      for (const [key, val] of subs.entries())\n        if (fn(key, v) !== fn(key, p)) {\n          for (const c of val.values()) {\n            c.state = STALE;\n            if (c.pure) Updates.push(c);\n            else Effects.push(c);\n          }\n        }\n      return v;\n    },\n    undefined,\n    true,\n    STALE\n  );\n  updateComputation(node);\n  return key => {\n    const listener = Listener;\n    if (listener) {\n      let l;\n      if ((l = subs.get(key))) l.add(listener);\n      else subs.set(key, (l = new Set([listener])));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(\n      key,\n      Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value\n    );\n  };\n}\nfunction batch(fn) {\n  return runUpdates(fn, false);\n}\nfunction untrack(fn) {\n  if (!ExternalSourceConfig && Listener === null) return fn();\n  const listener = Listener;\n  Listener = null;\n  try {\n    if (ExternalSourceConfig) return ExternalSourceConfig.untrack(fn);\n    return fn();\n  } finally {\n    Listener = listener;\n  }\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return prevValue;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null);\n  else if (Owner.cleanups === null) Owner.cleanups = [fn];\n  else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction catchError(fn, handler) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  Owner = createComputation(undefined, undefined, true);\n  Owner.context = {\n    ...Owner.context,\n    [ERROR]: [handler]\n  };\n  if (Transition && Transition.running) Transition.sources.add(Owner);\n  try {\n    return fn();\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = Owner.owner;\n  }\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  const prevListener = Listener;\n  Owner = o;\n  Listener = null;\n  try {\n    return runUpdates(fn, true);\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = prev;\n    Listener = prevListener;\n  }\n}\nfunction enableScheduling(scheduler = requestCallback) {\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t =\n        Transition ||\n        (Transition = {\n          sources: new Set(),\n          effects: [],\n          promises: new Set(),\n          disposed: new Set(),\n          queue: new Set(),\n          running: true\n        });\n      t.done || (t.done = new Promise(res => (t.resolve = res)));\n      t.running = true;\n    }\n    runUpdates(fn, false);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nconst [transPending, setTransPending] = /*@__PURE__*/ createSignal(false);\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createContext(defaultValue, options) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let value;\n  return Owner && Owner.context && (value = Owner.context[context.id]) !== undefined\n    ? value\n    : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  const memo = createMemo(() => resolveChildren(children()));\n  memo.toArray = () => {\n    const c = memo();\n    return Array.isArray(c) ? c : c != null ? [c] : [];\n  };\n  return memo;\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext());\n}\nfunction enableExternalSource(factory, untrack = fn => fn()) {\n  if (ExternalSourceConfig) {\n    const { factory: oldFactory, untrack: oldUntrack } = ExternalSourceConfig;\n    ExternalSourceConfig = {\n      factory: (fn, trigger) => {\n        const oldSource = oldFactory(fn, trigger);\n        const source = factory(x => oldSource.track(x), trigger);\n        return {\n          track: x => source.track(x),\n          dispose() {\n            source.dispose();\n            oldSource.dispose();\n          }\n        };\n      },\n      untrack: fn => oldUntrack(() => untrack(fn))\n    };\n  } else {\n    ExternalSourceConfig = {\n      factory,\n      untrack\n    };\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (runningTransition ? this.tState : this.state)) {\n    if ((runningTransition ? this.tState : this.state) === STALE) updateComputation(this);\n    else {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(this), false);\n      Updates = updates;\n    }\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  let current =\n    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;\n  if (!node.comparator || !node.comparator(current, value)) {\n    if (Transition) {\n      const TransitionRunning = Transition.running;\n      if (TransitionRunning || (!isComp && Transition.sources.has(node))) {\n        Transition.sources.add(node);\n        node.tValue = value;\n      }\n      if (!TransitionRunning) node.value = value;\n    } else node.value = value;\n    if (node.observers && node.observers.length) {\n      runUpdates(() => {\n        for (let i = 0; i < node.observers.length; i += 1) {\n          const o = node.observers[i];\n          const TransitionRunning = Transition && Transition.running;\n          if (TransitionRunning && Transition.disposed.has(o)) continue;\n          if (TransitionRunning ? !o.tState : !o.state) {\n            if (o.pure) Updates.push(o);\n            else Effects.push(o);\n            if (o.observers) markDownstream(o);\n          }\n          if (!TransitionRunning) o.state = STALE;\n          else o.tState = STALE;\n        }\n        if (Updates.length > 10e5) {\n          Updates = [];\n          if (false);\n          throw new Error();\n        }\n      }, false);\n    }\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const time = ExecCount;\n  runComputation(\n    node,\n    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value,\n    time\n  );\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        Listener = Owner = node;\n        runComputation(node, node.tValue, time);\n        Listener = Owner = null;\n      }, false);\n    });\n  }\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  const owner = Owner,\n    listener = Listener;\n  Listener = Owner = node;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    if (node.pure) {\n      if (Transition && Transition.running) {\n        node.tState = STALE;\n        node.tOwned && node.tOwned.forEach(cleanNode);\n        node.tOwned = undefined;\n      } else {\n        node.state = STALE;\n        node.owned && node.owned.forEach(cleanNode);\n        node.owned = null;\n      }\n    }\n    node.updatedAt = time + 1;\n    return handleError(err);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.updatedAt != null && \"observers\" in node) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: Owner ? Owner.context : null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null);\n  else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];\n      else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];\n      else Owner.owned.push(c);\n    }\n  }\n  if (ExternalSourceConfig && c.fn) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceConfig.factory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceConfig.factory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if ((runningTransition ? node.tState : node.state) === 0) return;\n  if ((runningTransition ? node.tState : node.state) === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (runningTransition ? node.tState : node.state) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n        prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if ((runningTransition ? node.tState : node.state) === STALE) {\n      updateComputation(node);\n    } else if ((runningTransition ? node.tState : node.state) === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;\n  else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!wait) Effects = null;\n    Updates = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);\n    else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition) {\n    if (!Transition.promises.size && !Transition.queue.size) {\n      const sources = Transition.sources;\n      const disposed = Transition.disposed;\n      Effects.push.apply(Effects, Transition.effects);\n      res = Transition.resolve;\n      for (const e of Effects) {\n        \"tState\" in e && (e.state = e.tState);\n        delete e.tState;\n      }\n      Transition = null;\n      runUpdates(() => {\n        for (const d of disposed) cleanNode(d);\n        for (const v of sources) {\n          v.value = v.tValue;\n          if (v.owned) {\n            for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n          }\n          if (v.tOwned) v.owned = v.tOwned;\n          delete v.tValue;\n          delete v.tOwned;\n          v.tState = 0;\n        }\n        setTransPending(false);\n      }, false);\n    } else if (Transition.running) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n  }\n  const e = Effects;\n  Effects = null;\n  if (e.length) runUpdates(() => runEffects(e), false);\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n    userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);\n    else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) {\n    if (sharedConfig.count) {\n      sharedConfig.effects || (sharedConfig.effects = []);\n      sharedConfig.effects.push(...queue.slice(0, userLength));\n      return;\n    }\n    setHydrateContext();\n  }\n  if (sharedConfig.effects && (sharedConfig.done || !sharedConfig.count)) {\n    queue = [...sharedConfig.effects, ...queue];\n    userLength += sharedConfig.effects.length;\n    delete sharedConfig.effects;\n  }\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;\n  else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      const state = runningTransition ? source.tState : source.state;\n      if (state === STALE) {\n        if (source !== ignore && (!source.updatedAt || source.updatedAt < ExecCount))\n          runTop(source);\n      } else if (state === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (runningTransition ? !o.tState : !o.state) {\n      if (runningTransition) o.tState = PENDING;\n      else o.state = PENDING;\n      if (o.pure) Updates.push(o);\n      else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n        index = node.sourceSlots.pop(),\n        obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n          s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (node.tOwned) {\n    for (i = node.tOwned.length - 1; i >= 0; i--) cleanNode(node.tOwned[i]);\n    delete node.tOwned;\n  }\n  if (Transition && Transition.running && node.pure) {\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = node.owned.length - 1; i >= 0; i--) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = node.cleanups.length - 1; i >= 0; i--) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;\n  else node.state = 0;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction castError(err) {\n  if (err instanceof Error) return err;\n  return new Error(typeof err === \"string\" ? err : \"Unknown error\", {\n    cause: err\n  });\n}\nfunction runErrors(err, fns, owner) {\n  try {\n    for (const f of fns) f(err);\n  } catch (e) {\n    handleError(e, (owner && owner.owner) || null);\n  }\n}\nfunction handleError(err, owner = Owner) {\n  const fns = ERROR && owner && owner.context && owner.context[ERROR];\n  const error = castError(err);\n  if (!fns) throw error;\n  if (Effects)\n    Effects.push({\n      fn() {\n        runErrors(error, fns, owner);\n      },\n      state: STALE\n    });\n  else runErrors(error, fns, owner);\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id, options) {\n  return function provider(props) {\n    let res;\n    createRenderEffect(\n      () =>\n        (res = untrack(() => {\n          Owner.context = {\n            ...Owner.context,\n            [id]: props.value\n          };\n          return children(() => props.children);\n        })),\n      undefined\n    );\n    return res;\n  };\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null);\n  else if (Owner.context === null || !Owner.context[ERROR]) {\n    Owner.context = {\n      ...Owner.context,\n      [ERROR]: [fn]\n    };\n    mutateContext(Owner, ERROR, [fn]);\n  } else Owner.context[ERROR].push(fn);\n}\nfunction mutateContext(o, key, value) {\n  if (o.owned) {\n    for (let i = 0; i < o.owned.length; i++) {\n      if (o.owned[i].context === o.context) mutateContext(o.owned[i], key, value);\n      if (!o.owned[i].context) {\n        o.owned[i].context = o.context;\n        mutateContext(o.owned[i], key, value);\n      } else if (!o.owned[i].context[key]) {\n        o.owned[i].context[key] = value;\n        mutateContext(o.owned[i], key, value);\n      }\n    }\n  }\n}\n\nfunction observable(input) {\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler =\n        typeof observer === \"function\" ? observer : observer.next && observer.next.bind(observer);\n      if (!handler) {\n        return {\n          unsubscribe() {}\n        };\n      }\n      const dispose = createRoot(disposer => {\n        createEffect(() => {\n          const v = input();\n          untrack(() => handler(v));\n        });\n        return disposer;\n      });\n      if (getOwner()) onCleanup(dispose);\n      return {\n        unsubscribe() {\n          dispose();\n        }\n      };\n    },\n    [Symbol.observable || \"@@observable\"]() {\n      return this;\n    }\n  };\n}\nfunction from(producer) {\n  const [s, set] = createSignal(undefined, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => (\"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub()));\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    len = 0,\n    indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n      newLen = newItems.length,\n      i,\n      j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newIndices, newIndicesNext, temp, tempdisposers, tempIndexes, start, end, newEnd, item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      } else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (\n          start = 0, end = Math.min(len, newLen);\n          start < end && items[start] === newItems[start];\n          start++\n        );\n        for (\n          end = len - 1, newEnd = newLen - 1;\n          end >= start && newEnd >= start && items[end] === newItems[newEnd];\n          end--, newEnd--\n        ) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, (len = newLen));\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    signals = [],\n    len = 0,\n    i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [],\n      newLen = newItems.length;\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newLen; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newLen;\n      items = newItems.slice(0);\n      return (mapped = mapped.slice(0, len));\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i]);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = untrack(() => Comp(props || {}));\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    if (property === $PROXY) return true;\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return !(s = typeof s === \"function\" ? s() : s) ? {} : s;\n}\nfunction resolveSources() {\n  for (let i = 0, length = this.length; i < length; ++i) {\n    const v = this[i]();\n    if (v !== undefined) return v;\n  }\n}\nfunction mergeProps(...sources) {\n  let proxy = false;\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    proxy = proxy || (!!s && $PROXY in s);\n    sources[i] = typeof s === \"function\" ? ((proxy = true), createMemo(s)) : s;\n  }\n  if (SUPPORTS_PROXY && proxy) {\n    return new Proxy(\n      {\n        get(property) {\n          for (let i = sources.length - 1; i >= 0; i--) {\n            const v = resolveSource(sources[i])[property];\n            if (v !== undefined) return v;\n          }\n        },\n        has(property) {\n          for (let i = sources.length - 1; i >= 0; i--) {\n            if (property in resolveSource(sources[i])) return true;\n          }\n          return false;\n        },\n        keys() {\n          const keys = [];\n          for (let i = 0; i < sources.length; i++)\n            keys.push(...Object.keys(resolveSource(sources[i])));\n          return [...new Set(keys)];\n        }\n      },\n      propTraps\n    );\n  }\n  const sourcesMap = {};\n  const defined = Object.create(null);\n  for (let i = sources.length - 1; i >= 0; i--) {\n    const source = sources[i];\n    if (!source) continue;\n    const sourceKeys = Object.getOwnPropertyNames(source);\n    for (let i = sourceKeys.length - 1; i >= 0; i--) {\n      const key = sourceKeys[i];\n      if (key === \"__proto__\" || key === \"constructor\") continue;\n      const desc = Object.getOwnPropertyDescriptor(source, key);\n      if (!defined[key]) {\n        defined[key] = desc.get\n          ? {\n              enumerable: true,\n              configurable: true,\n              get: resolveSources.bind((sourcesMap[key] = [desc.get.bind(source)]))\n            }\n          : desc.value !== undefined\n          ? desc\n          : undefined;\n      } else {\n        const sources = sourcesMap[key];\n        if (sources) {\n          if (desc.get) sources.push(desc.get.bind(source));\n          else if (desc.value !== undefined) sources.push(() => desc.value);\n        }\n      }\n    }\n  }\n  const target = {};\n  const definedKeys = Object.keys(defined);\n  for (let i = definedKeys.length - 1; i >= 0; i--) {\n    const key = definedKeys[i],\n      desc = defined[key];\n    if (desc && desc.get) Object.defineProperty(target, key, desc);\n    else target[key] = desc ? desc.value : undefined;\n  }\n  return target;\n}\nfunction splitProps(props, ...keys) {\n  if (SUPPORTS_PROXY && $PROXY in props) {\n    const blocked = new Set(keys.length > 1 ? keys.flat() : keys[0]);\n    const res = keys.map(k => {\n      return new Proxy(\n        {\n          get(property) {\n            return k.includes(property) ? props[property] : undefined;\n          },\n          has(property) {\n            return k.includes(property) && property in props;\n          },\n          keys() {\n            return k.filter(property => property in props);\n          }\n        },\n        propTraps\n      );\n    });\n    res.push(\n      new Proxy(\n        {\n          get(property) {\n            return blocked.has(property) ? undefined : props[property];\n          },\n          has(property) {\n            return blocked.has(property) ? false : property in props;\n          },\n          keys() {\n            return Object.keys(props).filter(k => !blocked.has(k));\n          }\n        },\n        propTraps\n      )\n    );\n    return res;\n  }\n  const otherObject = {};\n  const objects = keys.map(() => ({}));\n  for (const propName of Object.getOwnPropertyNames(props)) {\n    const desc = Object.getOwnPropertyDescriptor(props, propName);\n    const isDefaultDesc =\n      !desc.get && !desc.set && desc.enumerable && desc.writable && desc.configurable;\n    let blocked = false;\n    let objectIndex = 0;\n    for (const k of keys) {\n      if (k.includes(propName)) {\n        blocked = true;\n        isDefaultDesc\n          ? (objects[objectIndex][propName] = desc.value)\n          : Object.defineProperty(objects[objectIndex], propName, desc);\n      }\n      ++objectIndex;\n    }\n    if (!blocked) {\n      isDefaultDesc\n        ? (otherObject[propName] = desc.value)\n        : Object.defineProperty(otherObject, propName, desc);\n    }\n  }\n  return [...objects, otherObject];\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      sharedConfig.count || (sharedConfig.count = 0);\n      sharedConfig.count++;\n      (p || (p = fn())).then(mod => {\n        !sharedConfig.done && setHydrateContext(ctx);\n        sharedConfig.count--;\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    }\n    let Comp;\n    return createMemo(() =>\n      (Comp = comp())\n        ? untrack(() => {\n            if (false);\n            if (!ctx || sharedConfig.done) return Comp(props);\n            const c = sharedConfig.context;\n            setHydrateContext(ctx);\n            const r = Comp(props);\n            setHydrateContext(c);\n            return r;\n          })\n        : \"\"\n    );\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => (comp = () => mod.default)), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? sharedConfig.getNextContextId() : `cl-${counter++}`;\n}\n\nconst narrowedError = name => `Stale read from <${name}>.`;\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Show(props) {\n  const keyed = props.keyed;\n  const condition = createMemo(() => props.when, undefined, {\n    equals: (a, b) => (keyed ? a === b : !a === !b)\n  });\n  return createMemo(\n    () => {\n      const c = condition();\n      if (c) {\n        const child = props.children;\n        const fn = typeof child === \"function\" && child.length > 0;\n        return fn\n          ? untrack(() =>\n              child(\n                keyed\n                  ? c\n                  : () => {\n                      if (!untrack(condition)) throw narrowedError(\"Show\");\n                      return props.when;\n                    }\n              )\n            )\n          : child;\n      }\n      return props.fallback;\n    },\n    undefined,\n    undefined\n  );\n}\nfunction Switch(props) {\n  let keyed = false;\n  const equals = (a, b) => (keyed ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2];\n  const conditions = children(() => props.children),\n    evalConditions = createMemo(\n      () => {\n        let conds = conditions();\n        if (!Array.isArray(conds)) conds = [conds];\n        for (let i = 0; i < conds.length; i++) {\n          const c = conds[i].when;\n          if (c) {\n            keyed = !!conds[i].keyed;\n            return [i, c, conds[i]];\n          }\n        }\n        return [-1];\n      },\n      undefined,\n      {\n        equals\n      }\n    );\n  return createMemo(\n    () => {\n      const [index, when, cond] = evalConditions();\n      if (index < 0) return props.fallback;\n      const c = cond.children;\n      const fn = typeof c === \"function\" && c.length > 0;\n      return fn\n        ? untrack(() =>\n            c(\n              keyed\n                ? when\n                : () => {\n                    if (untrack(evalConditions)[0] !== index) throw narrowedError(\"Match\");\n                    return cond.when;\n                  }\n            )\n          )\n        : c;\n    },\n    undefined,\n    undefined\n  );\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn());\n}\nfunction ErrorBoundary(props) {\n  let err;\n  if (sharedConfig.context && sharedConfig.load)\n    err = sharedConfig.load(sharedConfig.getContextId());\n  const [errored, setErrored] = createSignal(err, undefined);\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(\n    () => {\n      let e;\n      if ((e = errored())) {\n        const f = props.fallback;\n        return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored())) : f;\n      }\n      return catchError(() => props.children, setErrored);\n    },\n    undefined,\n    undefined\n  );\n}\n\nconst suspenseListEquals = (a, b) =>\n  a.showContent === b.showContent && a.showFallback === b.showFallback;\nconst SuspenseListContext = /* #__PURE__ */ createContext();\nfunction SuspenseList(props) {\n  let [wrapper, setWrapper] = createSignal(() => ({\n      inFallback: false\n    })),\n    show;\n  const listContext = useContext(SuspenseListContext);\n  const [registry, setRegistry] = createSignal([]);\n  if (listContext) {\n    show = listContext.register(createMemo(() => wrapper()().inFallback));\n  }\n  const resolved = createMemo(\n    prev => {\n      const reveal = props.revealOrder,\n        tail = props.tail,\n        { showContent = true, showFallback = true } = show ? show() : {},\n        reg = registry(),\n        reverse = reveal === \"backwards\";\n      if (reveal === \"together\") {\n        const all = reg.every(inFallback => !inFallback());\n        const res = reg.map(() => ({\n          showContent: all && showContent,\n          showFallback\n        }));\n        res.inFallback = !all;\n        return res;\n      }\n      let stop = false;\n      let inFallback = prev.inFallback;\n      const res = [];\n      for (let i = 0, len = reg.length; i < len; i++) {\n        const n = reverse ? len - i - 1 : i,\n          s = reg[n]();\n        if (!stop && !s) {\n          res[n] = {\n            showContent,\n            showFallback\n          };\n        } else {\n          const next = !stop;\n          if (next) inFallback = true;\n          res[n] = {\n            showContent: next,\n            showFallback: !tail || (next && tail === \"collapsed\") ? showFallback : false\n          };\n          stop = true;\n        }\n      }\n      if (!stop) inFallback = false;\n      res.inFallback = inFallback;\n      return res;\n    },\n    {\n      inFallback: false\n    }\n  );\n  setWrapper(() => resolved);\n  return createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        let index;\n        setRegistry(registry => {\n          index = registry.length;\n          return [...registry, inFallback];\n        });\n        return createMemo(() => resolved()[index], undefined, {\n          equals: suspenseListEquals\n        });\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n}\nfunction Suspense(props) {\n  let counter = 0,\n    show,\n    ctx,\n    p,\n    flicker,\n    error;\n  const [inFallback, setFallback] = createSignal(false),\n    SuspenseContext = getSuspenseContext(),\n    store = {\n      increment: () => {\n        if (++counter === 1) setFallback(true);\n      },\n      decrement: () => {\n        if (--counter === 0) setFallback(false);\n      },\n      inFallback,\n      effects: [],\n      resolved: false\n    },\n    owner = getOwner();\n  if (sharedConfig.context && sharedConfig.load) {\n    const key = sharedConfig.getContextId();\n    let ref = sharedConfig.load(key);\n    if (ref) {\n      if (typeof ref !== \"object\" || ref.status !== \"success\") p = ref;\n      else sharedConfig.gather(key);\n    }\n    if (p && p !== \"$$f\") {\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(\n        () => {\n          if (sharedConfig.done) return set();\n          sharedConfig.gather(key);\n          setHydrateContext(ctx);\n          set();\n          setHydrateContext();\n        },\n        err => {\n          error = err;\n          set();\n        }\n      );\n    }\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) show = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return (flicker = undefined);\n        }\n        if (ctx && p === \"$$f\") setHydrateContext();\n        const rendered = createMemo(() => props.children);\n        return createMemo(prev => {\n          const inFallback = store.inFallback(),\n            { showContent = true, showFallback = true } = show ? show() : {};\n          if ((!inFallback || (p && p !== \"$$f\")) && showContent) {\n            store.resolved = true;\n            dispose && dispose();\n            dispose = ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered();\n          }\n          if (!showFallback) return;\n          if (dispose) return prev;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"F\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\n\nconst DEV = undefined;\n\nexport {\n  $DEVCOMP,\n  $PROXY,\n  $TRACK,\n  DEV,\n  ErrorBoundary,\n  For,\n  Index,\n  Match,\n  Show,\n  Suspense,\n  SuspenseList,\n  Switch,\n  batch,\n  cancelCallback,\n  catchError,\n  children,\n  createComponent,\n  createComputed,\n  createContext,\n  createDeferred,\n  createEffect,\n  createMemo,\n  createReaction,\n  createRenderEffect,\n  createResource,\n  createRoot,\n  createSelector,\n  createSignal,\n  createUniqueId,\n  enableExternalSource,\n  enableHydration,\n  enableScheduling,\n  equalFn,\n  from,\n  getListener,\n  getOwner,\n  indexArray,\n  lazy,\n  mapArray,\n  mergeProps,\n  observable,\n  on,\n  onCleanup,\n  onError,\n  onMount,\n  requestCallback,\n  resetErrorBoundaries,\n  runWithOwner,\n  sharedConfig,\n  splitProps,\n  startTransition,\n  untrack,\n  useContext,\n  useTransition\n};\n","import {\n  createRoot,\n  createRenderEffect,\n  untrack,\n  sharedConfig,\n  enableHydration,\n  getOwner,\n  createEffect,\n  runWithOwner,\n  createMemo,\n  createSignal,\n  onCleanup,\n  splitProps\n} from \"solid-js\";\nexport {\n  ErrorBoundary,\n  For,\n  Index,\n  Match,\n  Show,\n  Suspense,\n  SuspenseList,\n  Switch,\n  createComponent,\n  createRenderEffect as effect,\n  getOwner,\n  createMemo as memo,\n  mergeProps,\n  untrack\n} from \"solid-js\";\n\nconst booleans = [\n  \"allowfullscreen\",\n  \"async\",\n  \"autofocus\",\n  \"autoplay\",\n  \"checked\",\n  \"controls\",\n  \"default\",\n  \"disabled\",\n  \"formnovalidate\",\n  \"hidden\",\n  \"indeterminate\",\n  \"inert\",\n  \"ismap\",\n  \"loop\",\n  \"multiple\",\n  \"muted\",\n  \"nomodule\",\n  \"novalidate\",\n  \"open\",\n  \"playsinline\",\n  \"readonly\",\n  \"required\",\n  \"reversed\",\n  \"seamless\",\n  \"selected\"\n];\nconst Properties = /*#__PURE__*/ new Set([\n  \"className\",\n  \"value\",\n  \"readOnly\",\n  \"formNoValidate\",\n  \"isMap\",\n  \"noModule\",\n  \"playsInline\",\n  ...booleans\n]);\nconst ChildProperties = /*#__PURE__*/ new Set([\n  \"innerHTML\",\n  \"textContent\",\n  \"innerText\",\n  \"children\"\n]);\nconst Aliases = /*#__PURE__*/ Object.assign(Object.create(null), {\n  className: \"class\",\n  htmlFor: \"for\"\n});\nconst PropAliases = /*#__PURE__*/ Object.assign(Object.create(null), {\n  class: \"className\",\n  formnovalidate: {\n    $: \"formNoValidate\",\n    BUTTON: 1,\n    INPUT: 1\n  },\n  ismap: {\n    $: \"isMap\",\n    IMG: 1\n  },\n  nomodule: {\n    $: \"noModule\",\n    SCRIPT: 1\n  },\n  playsinline: {\n    $: \"playsInline\",\n    VIDEO: 1\n  },\n  readonly: {\n    $: \"readOnly\",\n    INPUT: 1,\n    TEXTAREA: 1\n  }\n});\nfunction getPropAlias(prop, tagName) {\n  const a = PropAliases[prop];\n  return typeof a === \"object\" ? (a[tagName] ? a[\"$\"] : undefined) : a;\n}\nconst DelegatedEvents = /*#__PURE__*/ new Set([\n  \"beforeinput\",\n  \"click\",\n  \"dblclick\",\n  \"contextmenu\",\n  \"focusin\",\n  \"focusout\",\n  \"input\",\n  \"keydown\",\n  \"keyup\",\n  \"mousedown\",\n  \"mousemove\",\n  \"mouseout\",\n  \"mouseover\",\n  \"mouseup\",\n  \"pointerdown\",\n  \"pointermove\",\n  \"pointerout\",\n  \"pointerover\",\n  \"pointerup\",\n  \"touchend\",\n  \"touchmove\",\n  \"touchstart\"\n]);\nconst SVGElements = /*#__PURE__*/ new Set([\n  \"altGlyph\",\n  \"altGlyphDef\",\n  \"altGlyphItem\",\n  \"animate\",\n  \"animateColor\",\n  \"animateMotion\",\n  \"animateTransform\",\n  \"circle\",\n  \"clipPath\",\n  \"color-profile\",\n  \"cursor\",\n  \"defs\",\n  \"desc\",\n  \"ellipse\",\n  \"feBlend\",\n  \"feColorMatrix\",\n  \"feComponentTransfer\",\n  \"feComposite\",\n  \"feConvolveMatrix\",\n  \"feDiffuseLighting\",\n  \"feDisplacementMap\",\n  \"feDistantLight\",\n  \"feDropShadow\",\n  \"feFlood\",\n  \"feFuncA\",\n  \"feFuncB\",\n  \"feFuncG\",\n  \"feFuncR\",\n  \"feGaussianBlur\",\n  \"feImage\",\n  \"feMerge\",\n  \"feMergeNode\",\n  \"feMorphology\",\n  \"feOffset\",\n  \"fePointLight\",\n  \"feSpecularLighting\",\n  \"feSpotLight\",\n  \"feTile\",\n  \"feTurbulence\",\n  \"filter\",\n  \"font\",\n  \"font-face\",\n  \"font-face-format\",\n  \"font-face-name\",\n  \"font-face-src\",\n  \"font-face-uri\",\n  \"foreignObject\",\n  \"g\",\n  \"glyph\",\n  \"glyphRef\",\n  \"hkern\",\n  \"image\",\n  \"line\",\n  \"linearGradient\",\n  \"marker\",\n  \"mask\",\n  \"metadata\",\n  \"missing-glyph\",\n  \"mpath\",\n  \"path\",\n  \"pattern\",\n  \"polygon\",\n  \"polyline\",\n  \"radialGradient\",\n  \"rect\",\n  \"set\",\n  \"stop\",\n  \"svg\",\n  \"switch\",\n  \"symbol\",\n  \"text\",\n  \"textPath\",\n  \"tref\",\n  \"tspan\",\n  \"use\",\n  \"view\",\n  \"vkern\"\n]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nconst DOMElements = /*#__PURE__*/ new Set([\n  \"html\",\n  \"base\",\n  \"head\",\n  \"link\",\n  \"meta\",\n  \"style\",\n  \"title\",\n  \"body\",\n  \"address\",\n  \"article\",\n  \"aside\",\n  \"footer\",\n  \"header\",\n  \"main\",\n  \"nav\",\n  \"section\",\n  \"body\",\n  \"blockquote\",\n  \"dd\",\n  \"div\",\n  \"dl\",\n  \"dt\",\n  \"figcaption\",\n  \"figure\",\n  \"hr\",\n  \"li\",\n  \"ol\",\n  \"p\",\n  \"pre\",\n  \"ul\",\n  \"a\",\n  \"abbr\",\n  \"b\",\n  \"bdi\",\n  \"bdo\",\n  \"br\",\n  \"cite\",\n  \"code\",\n  \"data\",\n  \"dfn\",\n  \"em\",\n  \"i\",\n  \"kbd\",\n  \"mark\",\n  \"q\",\n  \"rp\",\n  \"rt\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"small\",\n  \"span\",\n  \"strong\",\n  \"sub\",\n  \"sup\",\n  \"time\",\n  \"u\",\n  \"var\",\n  \"wbr\",\n  \"area\",\n  \"audio\",\n  \"img\",\n  \"map\",\n  \"track\",\n  \"video\",\n  \"embed\",\n  \"iframe\",\n  \"object\",\n  \"param\",\n  \"picture\",\n  \"portal\",\n  \"source\",\n  \"svg\",\n  \"math\",\n  \"canvas\",\n  \"noscript\",\n  \"script\",\n  \"del\",\n  \"ins\",\n  \"caption\",\n  \"col\",\n  \"colgroup\",\n  \"table\",\n  \"tbody\",\n  \"td\",\n  \"tfoot\",\n  \"th\",\n  \"thead\",\n  \"tr\",\n  \"button\",\n  \"datalist\",\n  \"fieldset\",\n  \"form\",\n  \"input\",\n  \"label\",\n  \"legend\",\n  \"meter\",\n  \"optgroup\",\n  \"option\",\n  \"output\",\n  \"progress\",\n  \"select\",\n  \"textarea\",\n  \"details\",\n  \"dialog\",\n  \"menu\",\n  \"summary\",\n  \"details\",\n  \"slot\",\n  \"template\",\n  \"acronym\",\n  \"applet\",\n  \"basefont\",\n  \"bgsound\",\n  \"big\",\n  \"blink\",\n  \"center\",\n  \"content\",\n  \"dir\",\n  \"font\",\n  \"frame\",\n  \"frameset\",\n  \"hgroup\",\n  \"image\",\n  \"keygen\",\n  \"marquee\",\n  \"menuitem\",\n  \"nobr\",\n  \"noembed\",\n  \"noframes\",\n  \"plaintext\",\n  \"rb\",\n  \"rtc\",\n  \"shadow\",\n  \"spacer\",\n  \"strike\",\n  \"tt\",\n  \"xmp\",\n  \"a\",\n  \"abbr\",\n  \"acronym\",\n  \"address\",\n  \"applet\",\n  \"area\",\n  \"article\",\n  \"aside\",\n  \"audio\",\n  \"b\",\n  \"base\",\n  \"basefont\",\n  \"bdi\",\n  \"bdo\",\n  \"bgsound\",\n  \"big\",\n  \"blink\",\n  \"blockquote\",\n  \"body\",\n  \"br\",\n  \"button\",\n  \"canvas\",\n  \"caption\",\n  \"center\",\n  \"cite\",\n  \"code\",\n  \"col\",\n  \"colgroup\",\n  \"content\",\n  \"data\",\n  \"datalist\",\n  \"dd\",\n  \"del\",\n  \"details\",\n  \"dfn\",\n  \"dialog\",\n  \"dir\",\n  \"div\",\n  \"dl\",\n  \"dt\",\n  \"em\",\n  \"embed\",\n  \"fieldset\",\n  \"figcaption\",\n  \"figure\",\n  \"font\",\n  \"footer\",\n  \"form\",\n  \"frame\",\n  \"frameset\",\n  \"head\",\n  \"header\",\n  \"hgroup\",\n  \"hr\",\n  \"html\",\n  \"i\",\n  \"iframe\",\n  \"image\",\n  \"img\",\n  \"input\",\n  \"ins\",\n  \"kbd\",\n  \"keygen\",\n  \"label\",\n  \"legend\",\n  \"li\",\n  \"link\",\n  \"main\",\n  \"map\",\n  \"mark\",\n  \"marquee\",\n  \"menu\",\n  \"menuitem\",\n  \"meta\",\n  \"meter\",\n  \"nav\",\n  \"nobr\",\n  \"noembed\",\n  \"noframes\",\n  \"noscript\",\n  \"object\",\n  \"ol\",\n  \"optgroup\",\n  \"option\",\n  \"output\",\n  \"p\",\n  \"param\",\n  \"picture\",\n  \"plaintext\",\n  \"portal\",\n  \"pre\",\n  \"progress\",\n  \"q\",\n  \"rb\",\n  \"rp\",\n  \"rt\",\n  \"rtc\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"script\",\n  \"section\",\n  \"select\",\n  \"shadow\",\n  \"slot\",\n  \"small\",\n  \"source\",\n  \"spacer\",\n  \"span\",\n  \"strike\",\n  \"strong\",\n  \"style\",\n  \"sub\",\n  \"summary\",\n  \"sup\",\n  \"table\",\n  \"tbody\",\n  \"td\",\n  \"template\",\n  \"textarea\",\n  \"tfoot\",\n  \"th\",\n  \"thead\",\n  \"time\",\n  \"title\",\n  \"tr\",\n  \"track\",\n  \"tt\",\n  \"u\",\n  \"ul\",\n  \"var\",\n  \"video\",\n  \"wbr\",\n  \"xmp\",\n  \"input\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\"\n]);\n\nfunction reconcileArrays(parentNode, a, b) {\n  let bLength = b.length,\n    aEnd = a.length,\n    bEnd = bLength,\n    aStart = 0,\n    bStart = 0,\n    after = a[aEnd - 1].nextSibling,\n    map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n      continue;\n    }\n    while (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? (bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart]) : after;\n      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a[aStart])) a[aStart].remove();\n        aStart++;\n      }\n    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      const node = a[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      const index = map.get(a[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i = aStart,\n            sequence = 1,\n            t;\n          while (++i < aEnd && i < bEnd) {\n            if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a[aStart];\n            while (bStart < index) parentNode.insertBefore(b[bStart++], node);\n          } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n        } else aStart++;\n      } else a[aStart++].remove();\n    }\n  }\n}\n\nconst $$EVENTS = \"_$DX_DELEGATE\";\nfunction render(code, element, init, options = {}) {\n  let disposer;\n  createRoot(dispose => {\n    disposer = dispose;\n    element === document\n      ? code()\n      : insert(element, code(), element.firstChild ? null : undefined, init);\n  }, options.owner);\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template(html, isImportNode, isSVG) {\n  let node;\n  const create = () => {\n    const t = document.createElement(\"template\");\n    t.innerHTML = html;\n    return isSVG ? t.content.firstChild.firstChild : t.content.firstChild;\n  };\n  const fn = isImportNode\n    ? () => untrack(() => document.importNode(node || (node = create()), true))\n    : () => (node || (node = create())).cloneNode(true);\n  fn.cloneNode = fn;\n  return fn;\n}\nfunction delegateEvents(eventNames, document = window.document) {\n  const e = document[$$EVENTS] || (document[$$EVENTS] = new Set());\n  for (let i = 0, l = eventNames.length; i < l; i++) {\n    const name = eventNames[i];\n    if (!e.has(name)) {\n      e.add(name);\n      document.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction clearDelegatedEvents(document = window.document) {\n  if (document[$$EVENTS]) {\n    for (let name of document[$$EVENTS].keys()) document.removeEventListener(name, eventHandler);\n    delete document[$$EVENTS];\n  }\n}\nfunction setProperty(node, name, value) {\n  if (isHydrating(node)) return;\n  node[name] = value;\n}\nfunction setAttribute(node, name, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttribute(name);\n  else node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttributeNS(namespace, name);\n  else node.setAttributeNS(namespace, name, value);\n}\nfunction setBoolAttribute(node, name, value) {\n  if (isHydrating(node)) return;\n  value ? node.setAttribute(name, \"\") : node.removeAttribute(name);\n}\nfunction className(node, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttribute(\"class\");\n  else node.className = value;\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    const handlerFn = handler[0];\n    node.addEventListener(name, (handler[0] = e => handlerFn.call(node, handler[1], e)));\n  } else node.addEventListener(name, handler, typeof handler !== \"function\" && handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value || {}),\n    prevKeys = Object.keys(prev);\n  let i, len;\n  for (i = 0, len = prevKeys.length; i < len; i++) {\n    const key = prevKeys[i];\n    if (!key || key === \"undefined\" || value[key]) continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i = 0, len = classKeys.length; i < len; i++) {\n    const key = classKeys[i],\n      classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue || !classValue) continue;\n    toggleClassKey(node, key, true);\n    prev[key] = classValue;\n  }\n  return prev;\n}\nfunction style(node, value, prev) {\n  if (!value) return prev ? setAttribute(node, \"style\") : value;\n  const nodeStyle = node.style;\n  if (typeof value === \"string\") return (nodeStyle.cssText = value);\n  typeof prev === \"string\" && (nodeStyle.cssText = prev = undefined);\n  prev || (prev = {});\n  value || (value = {});\n  let v, s;\n  for (s in prev) {\n    value[s] == null && nodeStyle.removeProperty(s);\n    delete prev[s];\n  }\n  for (s in value) {\n    v = value[s];\n    if (v !== prev[s]) {\n      nodeStyle.setProperty(s, v);\n      prev[s] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, props = {}, isSVG, skipChildren) {\n  const prevProps = {};\n  if (!skipChildren) {\n    createRenderEffect(\n      () => (prevProps.children = insertExpression(node, props.children, prevProps.children))\n    );\n  }\n  createRenderEffect(() => typeof props.ref === \"function\" && use(props.ref, node));\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));\n  return prevProps;\n}\nfunction dynamicProperty(props, key) {\n  const src = props[key];\n  Object.defineProperty(props, key, {\n    get() {\n      return src();\n    },\n    enumerable: true\n  });\n  return props;\n}\nfunction use(fn, element, arg) {\n  return untrack(() => fn(element, arg));\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== undefined && !initial) initial = [];\n  if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {\n  props || (props = {});\n  for (const prop in prevProps) {\n    if (!(prop in props)) {\n      if (prop === \"children\") continue;\n      prevProps[prop] = assignProp(node, prop, null, prevProps[prop], isSVG, skipRef, props);\n    }\n  }\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren) insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef, props);\n  }\n}\nfunction hydrate$1(code, element, options = {}) {\n  if (globalThis._$HY.done) return render(code, element, [...element.childNodes], options);\n  sharedConfig.completed = globalThis._$HY.completed;\n  sharedConfig.events = globalThis._$HY.events;\n  sharedConfig.load = id => globalThis._$HY.r[id];\n  sharedConfig.has = id => id in globalThis._$HY.r;\n  sharedConfig.gather = root => gatherHydratable(element, root);\n  sharedConfig.registry = new Map();\n  sharedConfig.context = {\n    id: options.renderId || \"\",\n    count: 0\n  };\n  try {\n    gatherHydratable(element, options.renderId);\n    return render(code, element, [...element.childNodes], options);\n  } finally {\n    sharedConfig.context = null;\n  }\n}\nfunction getNextElement(template) {\n  let node,\n    key,\n    hydrating = isHydrating();\n  if (!hydrating || !(node = sharedConfig.registry.get((key = getHydrationKey())))) {\n    return template();\n  }\n  if (sharedConfig.completed) sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction getNextMatch(el, nodeName) {\n  while (el && el.localName !== nodeName) el = el.nextSibling;\n  return el;\n}\nfunction getNextMarker(start) {\n  let end = start,\n    count = 0,\n    current = [];\n  if (isHydrating(start)) {\n    while (end) {\n      if (end.nodeType === 8) {\n        const v = end.nodeValue;\n        if (v === \"$\") count++;\n        else if (v === \"/\") {\n          if (count === 0) return [end, current];\n          count--;\n        }\n      }\n      current.push(end);\n      end = end.nextSibling;\n    }\n  }\n  return [end, current];\n}\nfunction runHydrationEvents() {\n  if (sharedConfig.events && !sharedConfig.events.queued) {\n    queueMicrotask(() => {\n      const { completed, events } = sharedConfig;\n      if (!events) return;\n      events.queued = false;\n      while (events.length) {\n        const [el, e] = events[0];\n        if (!completed.has(el)) return;\n        events.shift();\n        eventHandler(e);\n      }\n      if (sharedConfig.done) {\n        sharedConfig.events = _$HY.events = null;\n        sharedConfig.completed = _$HY.completed = null;\n      }\n    });\n    sharedConfig.events.queued = true;\n  }\n}\nfunction isHydrating(node) {\n  return !!sharedConfig.context && !sharedConfig.done && (!node || node.isConnected);\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.trim().split(/\\s+/);\n  for (let i = 0, nameLen = classNames.length; i < nameLen; i++)\n    node.classList.toggle(classNames[i], value);\n}\nfunction assignProp(node, prop, value, prev, isSVG, skipRef, props) {\n  let isCE, isProp, isChildProp, propAlias, forceProp;\n  if (prop === \"style\") return style(node, value, prev);\n  if (prop === \"classList\") return classList(node, value, prev);\n  if (value === prev) return prev;\n  if (prop === \"ref\") {\n    if (!skipRef) value(node);\n  } else if (prop.slice(0, 3) === \"on:\") {\n    const e = prop.slice(3);\n    prev && node.removeEventListener(e, prev, typeof prev !== \"function\" && prev);\n    value && node.addEventListener(e, value, typeof value !== \"function\" && value);\n  } else if (prop.slice(0, 10) === \"oncapture:\") {\n    const e = prop.slice(10);\n    prev && node.removeEventListener(e, prev, true);\n    value && node.addEventListener(e, value, true);\n  } else if (prop.slice(0, 2) === \"on\") {\n    const name = prop.slice(2).toLowerCase();\n    const delegate = DelegatedEvents.has(name);\n    if (!delegate && prev) {\n      const h = Array.isArray(prev) ? prev[0] : prev;\n      node.removeEventListener(name, h);\n    }\n    if (delegate || value) {\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    }\n  } else if (prop.slice(0, 5) === \"attr:\") {\n    setAttribute(node, prop.slice(5), value);\n  } else if (prop.slice(0, 5) === \"bool:\") {\n    setBoolAttribute(node, prop.slice(5), value);\n  } else if (\n    (forceProp = prop.slice(0, 5) === \"prop:\") ||\n    (isChildProp = ChildProperties.has(prop)) ||\n    (!isSVG &&\n      ((propAlias = getPropAlias(prop, node.tagName)) || (isProp = Properties.has(prop)))) ||\n    (isCE = node.nodeName.includes(\"-\") || \"is\" in props)\n  ) {\n    if (forceProp) {\n      prop = prop.slice(5);\n      isProp = true;\n    } else if (isHydrating(node)) return value;\n    if (prop === \"class\" || prop === \"className\") className(node, value);\n    else if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;\n    else node[propAlias || prop] = value;\n  } else {\n    const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n    if (ns) setAttributeNS(node, ns, prop, value);\n    else setAttribute(node, Aliases[prop] || prop, value);\n  }\n  return value;\n}\nfunction eventHandler(e) {\n  if (sharedConfig.registry && sharedConfig.events) {\n    if (sharedConfig.events.find(([el, ev]) => ev === e)) return;\n  }\n  let node = e.target;\n  const key = `$$${e.type}`;\n  const oriTarget = e.target;\n  const oriCurrentTarget = e.currentTarget;\n  const retarget = value =>\n    Object.defineProperty(e, \"target\", {\n      configurable: true,\n      value\n    });\n  const handleNode = () => {\n    const handler = node[key];\n    if (handler && !node.disabled) {\n      const data = node[`${key}Data`];\n      data !== undefined ? handler.call(node, data, e) : handler.call(node, e);\n      if (e.cancelBubble) return;\n    }\n    node.host &&\n      typeof node.host !== \"string\" &&\n      !node.host._$host &&\n      node.contains(e.target) &&\n      retarget(node.host);\n    return true;\n  };\n  const walkUpTree = () => {\n    while (handleNode() && (node = node._$host || node.parentNode || node.host));\n  };\n  Object.defineProperty(e, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node || document;\n    }\n  });\n  if (sharedConfig.registry && !sharedConfig.done) sharedConfig.done = _$HY.done = true;\n  if (e.composedPath) {\n    const path = e.composedPath();\n    retarget(path[0]);\n    for (let i = 0; i < path.length - 2; i++) {\n      node = path[i];\n      if (!handleNode()) break;\n      if (node._$host) {\n        node = node._$host;\n        walkUpTree();\n        break;\n      }\n      if (node.parentNode === oriCurrentTarget) {\n        break;\n      }\n    }\n  } else walkUpTree();\n  retarget(oriTarget);\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  const hydrating = isHydrating(parent);\n  if (hydrating) {\n    !current && (current = [...parent.childNodes]);\n    let cleaned = [];\n    for (let i = 0; i < current.length; i++) {\n      const node = current[i];\n      if (node.nodeType === 8 && node.data.slice(0, 2) === \"!$\") node.remove();\n      else cleaned.push(node);\n    }\n    current = cleaned;\n  }\n  while (typeof current === \"function\") current = current();\n  if (value === current) return current;\n  const t = typeof value,\n    multi = marker !== undefined;\n  parent = (multi && current[0] && current[0].parentNode) || parent;\n  if (t === \"string\" || t === \"number\") {\n    if (hydrating) return current;\n    if (t === \"number\") {\n      value = value.toString();\n      if (value === current) return current;\n    }\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data !== value && (node.data = value);\n      } else node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else current = parent.textContent = value;\n    }\n  } else if (value == null || t === \"boolean\") {\n    if (hydrating) return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\") v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    const currentArray = current && Array.isArray(current);\n    if (normalizeIncomingArray(array, value, current, unwrapArray)) {\n      createRenderEffect(() => (current = insertExpression(parent, array, current, marker, true)));\n      return () => current;\n    }\n    if (hydrating) {\n      if (!array.length) return current;\n      if (marker === undefined) return (current = [...parent.childNodes]);\n      let node = array[0];\n      if (node.parentNode !== parent) return current;\n      const nodes = [node];\n      while ((node = node.nextSibling) !== marker) nodes.push(node);\n      return (current = nodes);\n    }\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi) return current;\n    } else if (currentArray) {\n      if (current.length === 0) {\n        appendNodes(parent, array, marker);\n      } else reconcileArrays(parent, current, array);\n    } else {\n      current && cleanChildren(parent);\n      appendNodes(parent, array);\n    }\n    current = array;\n  } else if (value.nodeType) {\n    if (hydrating && value.parentNode) return (current = multi ? [value] : value);\n    if (Array.isArray(current)) {\n      if (multi) return (current = cleanChildren(parent, current, marker, value));\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else;\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, current, unwrap) {\n  let dynamic = false;\n  for (let i = 0, len = array.length; i < len; i++) {\n    let item = array[i],\n      prev = current && current[normalized.length],\n      t;\n    if (item == null || item === true || item === false);\n    else if ((t = typeof item) === \"object\" && item.nodeType) {\n      normalized.push(item);\n    } else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item, prev) || dynamic;\n    } else if (t === \"function\") {\n      if (unwrap) {\n        while (typeof item === \"function\") item = item();\n        dynamic =\n          normalizeIncomingArray(\n            normalized,\n            Array.isArray(item) ? item : [item],\n            Array.isArray(prev) ? prev : [prev]\n          ) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else {\n      const value = String(item);\n      if (prev && prev.nodeType === 3 && prev.data === value) normalized.push(prev);\n      else normalized.push(document.createTextNode(value));\n    }\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker = null) {\n  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === undefined) return (parent.textContent = \"\");\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i = current.length - 1; i >= 0; i--) {\n      const el = current[i];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i)\n          isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);\n        else isParent && el.remove();\n      } else inserted = true;\n    }\n  } else parent.insertBefore(node, marker);\n  return [node];\n}\nfunction gatherHydratable(element, root) {\n  const templates = element.querySelectorAll(`*[data-hk]`);\n  for (let i = 0; i < templates.length; i++) {\n    const node = templates[i];\n    const key = node.getAttribute(\"data-hk\");\n    if ((!root || key.startsWith(root)) && !sharedConfig.registry.has(key))\n      sharedConfig.registry.set(key, node);\n  }\n}\nfunction getHydrationKey() {\n  return sharedConfig.getNextContextId();\n}\nfunction NoHydration(props) {\n  return sharedConfig.context ? undefined : props.children;\n}\nfunction Hydration(props) {\n  return props.children;\n}\nconst voidFn = () => undefined;\nconst RequestContext = Symbol();\nfunction innerHTML(parent, content) {\n  !sharedConfig.context && (parent.innerHTML = content);\n}\n\nfunction throwInBrowser(func) {\n  const err = new Error(`${func.name} is not supported in the browser, returning undefined`);\n  console.error(err);\n}\nfunction renderToString(fn, options) {\n  throwInBrowser(renderToString);\n}\nfunction renderToStringAsync(fn, options) {\n  throwInBrowser(renderToStringAsync);\n}\nfunction renderToStream(fn, options) {\n  throwInBrowser(renderToStream);\n}\nfunction ssr(template, ...nodes) {}\nfunction ssrElement(name, props, children, needsId) {}\nfunction ssrClassList(value) {}\nfunction ssrStyle(value) {}\nfunction ssrAttribute(key, value) {}\nfunction ssrHydrationKey() {}\nfunction resolveSSRNode(node) {}\nfunction escape(html) {}\nfunction ssrSpread(props, isSVG, skipChildren) {}\n\nconst isServer = false;\nconst isDev = false;\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nconst hydrate = (...args) => {\n  enableHydration();\n  return hydrate$1(...args);\n};\nfunction Portal(props) {\n  const { useShadow } = props,\n    marker = document.createTextNode(\"\"),\n    mount = () => props.mount || document.body,\n    owner = getOwner();\n  let content;\n  let hydrating = !!sharedConfig.context;\n  createEffect(\n    () => {\n      if (hydrating) getOwner().user = hydrating = false;\n      content || (content = runWithOwner(owner, () => createMemo(() => props.children)));\n      const el = mount();\n      if (el instanceof HTMLHeadElement) {\n        const [clean, setClean] = createSignal(false);\n        const cleanup = () => setClean(true);\n        createRoot(dispose => insert(el, () => (!clean() ? content() : dispose()), null));\n        onCleanup(cleanup);\n      } else {\n        const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG),\n          renderRoot =\n            useShadow && container.attachShadow\n              ? container.attachShadow({\n                  mode: \"open\"\n                })\n              : container;\n        Object.defineProperty(container, \"_$host\", {\n          get() {\n            return marker.parentNode;\n          },\n          configurable: true\n        });\n        insert(renderRoot, content);\n        el.appendChild(container);\n        props.ref && props.ref(container);\n        onCleanup(() => el.removeChild(container));\n      }\n    },\n    undefined,\n    {\n      render: !hydrating\n    }\n  );\n  return marker;\n}\nfunction Dynamic(props) {\n  const [p, others] = splitProps(props, [\"component\"]);\n  const cached = createMemo(() => p.component);\n  return createMemo(() => {\n    const component = cached();\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(others));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = sharedConfig.context ? getNextElement() : createElement(component, isSvg);\n        spread(el, others, isSvg);\n        return el;\n    }\n  });\n}\n\nexport {\n  Aliases,\n  voidFn as Assets,\n  ChildProperties,\n  DOMElements,\n  DelegatedEvents,\n  Dynamic,\n  Hydration,\n  voidFn as HydrationScript,\n  NoHydration,\n  Portal,\n  Properties,\n  RequestContext,\n  SVGElements,\n  SVGNamespace,\n  addEventListener,\n  assign,\n  classList,\n  className,\n  clearDelegatedEvents,\n  delegateEvents,\n  dynamicProperty,\n  escape,\n  voidFn as generateHydrationScript,\n  voidFn as getAssets,\n  getHydrationKey,\n  getNextElement,\n  getNextMarker,\n  getNextMatch,\n  getPropAlias,\n  voidFn as getRequestEvent,\n  hydrate,\n  innerHTML,\n  insert,\n  isDev,\n  isServer,\n  render,\n  renderToStream,\n  renderToString,\n  renderToStringAsync,\n  resolveSSRNode,\n  runHydrationEvents,\n  setAttribute,\n  setAttributeNS,\n  setBoolAttribute,\n  setProperty,\n  spread,\n  ssr,\n  ssrAttribute,\n  ssrClassList,\n  ssrElement,\n  ssrHydrationKey,\n  ssrSpread,\n  ssrStyle,\n  style,\n  template,\n  use,\n  voidFn as useAssets\n};\n","export const answers = [\n  ['1580061', '23046913'], // real\n  ['11', '31'],\n]\n\n//\n//\n\nexport const part1 = (input = '') => {\n  const pairs = input //\n    .split('\\n')\n    .map((line) => line.split(/\\s+/))\n\n  const l = pairs.map(([a]) => +a).sort()\n  const r = pairs.map(([, b]) => +b).sort()\n\n  return l.reduce((acc, a, i) => acc + Math.abs(a - r[i]), 0)\n}\n\n//\n\nexport const part2 = (input = '') => {\n  const pairs = input //\n    .split('\\n')\n    .map((line) => line.split(/\\s+/))\n\n  const l = pairs.map(([a]) => +a)\n  const r = pairs.map(([, b]) => +b)\n\n  const cts = { ...[0] }\n  r.forEach((n) => (cts[n] = (cts[n] || 0) + 1))\n\n  return l.reduce((acc, a) => acc + a * (cts[a] || 0), 0)\n}\n","export const answers = [\n  ['341', '404'], // real\n  ['2', '4'],\n]\n\n//\n//\n\nexport const part1 = (input = '') => {\n  return input.split('\\n').reduce((total, line) => {\n    const nums = line.split(/ +/).map((s) => +s)\n    const sign = (nums.at(-1) || 0) > nums[0] ? 1 : -1\n    const ok = [1, 2, 3].map((n) => n * sign)\n\n    const safe = nums.every((num, i, arr) => {\n      if (i === 0) return true\n      return ok.includes(num - arr[i - 1])\n    })\n    return safe ? total + 1 : total\n  }, 0)\n}\n\n//\n\nexport const part2 = (input = '') => {\n  const check = (nums: number[], ok: number[]) =>\n    nums.every((num, i, arr) => {\n      if (i === 0) return true\n      return ok.includes(num - arr[i - 1])\n    })\n\n  return input.split('\\n').reduce((total, line) => {\n    const nums = line.split(/ +/).map((s) => +s)\n    const sign = (nums.at(-1) || 0) > nums[0] ? 1 : -1\n    const ok = [1, 2, 3].map((n) => n * sign)\n\n    const safe =\n      check(nums, ok) ||\n      nums.find((num, i, arr) => {\n        const copy = [...arr]\n        copy.splice(i, 1)\n        return check(copy, ok)\n      })\n\n    return safe ? total + 1 : total\n  }, 0)\n}\n","export const answers = [\n  ['187833789', '94455185'], // real\n  ['161', '161'],\n  ['161', '48'],\n]\n\n//\n//\n\nexport const part1 = (input = '') => {\n  let total = 0\n\n  input.matchAll(/mul\\((\\d{1,3},\\d{1,3})\\)/g)?.forEach(([, nums]) => {\n    const [a, b] = nums.split(',').map((s) => +s)\n    total += a * b\n  })\n\n  return total\n}\n\n//\n\nexport const part2 = (input = '') => {\n  let total = 0\n  input = 'do()' + input\n\n  input.split(\"don't()\").forEach((part) => {\n    const [, ...doPart] = part.split('do()')\n    total += part1(doPart.join(''))\n  })\n\n  return total\n}\n","export const answers = [\n  ['2575', '2041'], // real\n  ['18', '9'],\n]\n\n//\n//\n\nexport const part1 = (input = '') => {\n  const lines = input.split('\\n').map((line) => line.split(''))\n  const get = (i = 0, j = 0) => (lines[i] && lines[i][j]) || '-'\n\n  const dirs = [\n    [1, 0],\n    [-1, 0],\n    [0, 1],\n    [0, -1],\n    [1, 1],\n    [1, -1],\n    [-1, 1],\n    [-1, -1],\n  ]\n\n  let total = 0\n  lines.forEach((row, i) => {\n    row.forEach((char, j) => {\n      if (char !== 'X') return\n      dirs.forEach(([di, dj]) => {\n        const hit = 'XMAS'.split('').every((c, k) => get(i + k * di, j + k * dj) === c)\n        if (hit) total++\n      })\n    })\n  })\n  return total\n}\n\n//\n\nexport const part2 = (input = '') => {\n  const lines = input.split('\\n').map((line) => line.split(''))\n  const get = (i = 0, j = 0) => (lines[i] && lines[i][j]) || '-'\n\n  const dirs = [\n    [1, 1],\n    [-1, -1],\n    [1, -1],\n    [-1, 1],\n  ]\n\n  let total = 0\n  lines.forEach((row, i) => {\n    row.forEach((char, j) => {\n      if (char !== 'A') return\n      const word = dirs.map(([dx, dy]) => get(i + dx, j + dy))\n      if (word[0] === word[1]) return\n      if (word.sort().join('') !== 'MMSS') return\n      total++\n    })\n  })\n\n  return total\n}\n","export const answers = [\n  ['5964', '4719'], // real\n  ['143', '123'],\n]\n\n//\n//\n\nexport const part1 = (input = '') => part1_impl(input).total\n\nexport const part1_impl = (input = '') => {\n  const [rulePairs, data] = input.split('\\n\\n')\n\n  const follows = new Map()\n  rulePairs.split('\\n').forEach((line) => {\n    const [a, b] = line.split('|')\n    if (!follows.has(a)) follows.set(a, [])\n    follows.get(a).push(b)\n  })\n\n  let total = 0\n  const wrongSets = data\n    .split('\\n')\n    .map((line) => line.split(',').reverse())\n    .filter((nums) => {\n      const ng = new Set()\n      const ok = nums.every((a) => {\n        if (ng.has(a)) return false\n        ;(follows.get(a) || []).forEach((b = '') => ng.add(b))\n        return true\n      })\n      if (ok) total += +nums[nums.length >> 1]\n      return !ok\n    })\n  return { total, wrongSets, follows }\n}\n\nexport const part2 = (input = '') => {\n  const { wrongSets, follows } = part1_impl(input)\n\n  return wrongSets.reduce((sum, nums) => {\n    nums.sort((a, b) => {\n      if (follows.has(a) && follows.get(a).includes(b)) return -1\n      return 1\n    })\n    return sum + +nums[nums.length >> 1]\n  }, 0)\n}\n","export const answers = [\n  ['4789', '1304'], // real\n  ['41', '6'],\n]\n\n//\n//\n\nconst dirs = [\n  [-1, 0],\n  [0, 1],\n  [1, 0],\n  [0, -1],\n]\n\nconst part1_impl = (input = '') => {\n  const lines = input.split('\\n').map((line) => line.split(''))\n  const get = (i = 0, j = 0) => (lines[i] && lines[i][j]) || '-'\n\n  let start = [0, 0]\n  lines.find((row, i) => row.find((char, j) => char === '^' && (start = [i, j])))\n\n  const seen = new Set()\n  const visited = []\n  let dir = 0\n  let [i, j] = start\n  while (true) {\n    const [di, dj] = dirs[dir]\n    const x = i * lines.length + j\n    if (!seen.has(x)) visited.push([i, j])\n    seen.add(x)\n    const next = get(i + di, j + dj)\n    if (next === '-') break\n    if (next === '#') {\n      dir = (dir + 1) % 4\n    } else {\n      ;[i, j] = [i + di, j + dj]\n    }\n  }\n\n  return { visited, lines, start }\n}\n\nexport const part1 = (input = '') => part1_impl(input).visited.length\n\n//\n\nexport const part2 = (input = '') => {\n  const { visited, lines, start } = part1_impl(input)\n\n  const barriersByAxis: number[][][] = [\n    Array.from({ length: lines.length }, () => []),\n    Array.from({ length: lines.length }, () => []),\n  ]\n  const addBarrier = (i: number, j: number) => {\n    barriersByAxis[0][i].push(j)\n    barriersByAxis[1][j].push(i)\n  }\n  const removeBarrier = (i: number, j: number) => {\n    barriersByAxis[0][i] = barriersByAxis[0][i].filter((x) => x !== j)\n    barriersByAxis[1][j] = barriersByAxis[1][j].filter((x) => x !== i)\n  }\n  const getDistToBarrier = (i: number, j: number, dir: number) => {\n    const [di, dj] = dirs[dir]\n    const axis = di ? 1 : 0\n    const [x, y] = axis === 0 ? [i, j] : [j, i]\n    const barriers = barriersByAxis[axis][x]\n    const step = Math.sign(di || dj)\n    const barrierY =\n      step > 0\n        ? barriers.reduce((acc, by) => (by > y && by < acc ? by : acc), Infinity)\n        : barriers.reduce((acc, by) => (by < y && by > acc ? by : acc), -Infinity)\n    return isFinite(barrierY) ? Math.abs(barrierY - y) - 1 : -1\n  }\n\n  lines.forEach((row, i) => {\n    row.forEach((char, j) => {\n      if (char === '#') addBarrier(i, j)\n    })\n  })\n\n  const checkForLoop = () => {\n    let [i, j] = start\n    let dir = 0\n    const seens = dirs.map(() => new Set())\n    while (true) {\n      const [di, dj] = dirs[dir]\n      const seen = seens[dir]\n      const x = i * lines.length + j\n      if (seen.has(x)) return true\n      seen.add(x)\n      const dist = getDistToBarrier(i, j, dir)\n      if (dist === -1) return false\n      ;[i, j] = [i + di * dist, j + dj * dist]\n      dir = (dir + 1) % 4\n    }\n  }\n\n  let total = 0\n  if (checkForLoop()) total++\n\n  visited.shift() // starting loc\n  visited.forEach(([i, j]) => {\n    addBarrier(i, j)\n    if (checkForLoop()) total++\n    removeBarrier(i, j)\n  })\n  return total\n}\n","export const answers = [\n  ['1298103531759', '140575048428831'], // real\n  ['3749', '11387'],\n]\n\n//\n//\n\nexport const part1 = (input = '') => {\n  const check = (acc = 0, nums = [0], ix = 0): boolean => {\n    if (ix === 0) return acc === nums[0]\n    if (acc < 0 || acc !== Math.floor(acc)) return false\n    return check(acc - nums[ix], nums, ix - 1) || check(acc / nums[ix], nums, ix - 1)\n  }\n\n  return input.split('\\n').reduce((total, line) => {\n    const [res, b] = line.split(':').map((s) => s.trim())\n    const nums = b.split(/ +/).map((n) => +n)\n    const ok1 = check(+res, nums, nums.length - 1)\n    return ok1 ? total + +res : total\n  }, 0)\n}\n\nexport const part2 = (input = '') => {\n  const check = (acc = 0, nums = [0], ix = 0): boolean => {\n    if (ix === 0) return acc === nums[0]\n    if (acc < 0 || acc !== Math.floor(acc)) return false\n    const [sacc, snum] = ['' + acc, '' + nums[ix]]\n    if (sacc.endsWith(snum)) {\n      if (check(+sacc.slice(0, -snum.length), nums, ix - 1)) return true\n    }\n    return check(acc - nums[ix], nums, ix - 1) || check(acc / nums[ix], nums, ix - 1)\n  }\n\n  return input.split('\\n').reduce((total, line) => {\n    const [res, b] = line.split(':').map((s) => s.trim())\n    const nums = b.split(/ +/).map((n) => +n)\n    const ok1 = check(+res, nums, nums.length - 1)\n    return ok1 ? total + +res : total\n  }, 0)\n}\n","export default \"3   4\\n4   3\\n2   5\\n1   3\\n3   9\\n3   3\"","export default \"77221   93653\\n61169   27995\\n49546   69782\\n11688   41563\\n15820   48282\\n63235   37517\\n28850   68189\\n80735   25255\\n42616   65322\\n55068   99897\\n30851   35509\\n14907   49013\\n64732   92011\\n16709   68830\\n67643   36207\\n44080   23559\\n96480   58330\\n99450   40186\\n21169   63410\\n58096   21671\\n53828   79572\\n47026   44529\\n90101   28656\\n45773   73412\\n71303   85991\\n45304   78294\\n96528   23559\\n19794   17882\\n74831   17211\\n88912   11644\\n98961   80435\\n15788   96101\\n16350   86995\\n96806   19028\\n99959   77868\\n58887   90255\\n42568   25255\\n29278   88912\\n94028   63269\\n42810   21548\\n97490   71747\\n89051   24477\\n73916   31808\\n97751   88912\\n73608   77868\\n62426   13754\\n29429   36177\\n11070   10894\\n78656   85185\\n31308   60500\\n96166   91114\\n36906   85134\\n99662   77868\\n66402   41563\\n37085   14475\\n80907   53324\\n61650   53324\\n84223   63753\\n83891   47827\\n15973   77536\\n68843   40593\\n98854   31274\\n42426   97404\\n25255   67531\\n44559   50141\\n93909   50674\\n28070   32858\\n24880   24813\\n29338   89795\\n64883   77868\\n66924   57646\\n32984   66502\\n32238   39062\\n38816   23559\\n58770   65322\\n74953   91636\\n70592   19028\\n93111   11644\\n31065   23537\\n67370   19028\\n18314   47412\\n71075   74334\\n21544   44529\\n59137   50980\\n20440   80749\\n14393   38495\\n72130   90255\\n43828   68830\\n23262   73660\\n11923   50980\\n47754   14164\\n96043   34362\\n27162   28090\\n20838   50713\\n75009   11121\\n92099   31274\\n22054   38248\\n43518   80106\\n68189   13153\\n50520   12727\\n51425   40674\\n42998   31053\\n52443   33051\\n37256   54436\\n16648   95555\\n81123   17329\\n46974   79835\\n36328   77868\\n76373   23559\\n82592   70046\\n70600   22417\\n27116   89690\\n28090   34969\\n86348   23559\\n53145   50980\\n30203   83301\\n23347   77681\\n76433   26236\\n28046   92869\\n58920   50980\\n25518   28090\\n12791   44529\\n61967   31808\\n98022   53056\\n24326   12263\\n41095   13121\\n24045   82448\\n31274   16530\\n78021   21589\\n63029   19658\\n75684   14475\\n31258   36493\\n40561   48589\\n20457   54974\\n14783   88465\\n39433   23537\\n34774   53324\\n10455   14329\\n26338   74416\\n55227   37003\\n36963   40380\\n31910   68189\\n94894   18220\\n23166   44111\\n48884   46787\\n73036   89795\\n83519   25205\\n50205   93653\\n85926   50141\\n69194   23559\\n25529   11642\\n10182   31274\\n13638   61987\\n83588   19028\\n75911   20768\\n44692   24325\\n43278   94888\\n48148   24394\\n86205   99327\\n82605   58818\\n52770   68189\\n89068   84917\\n66452   83679\\n50217   85099\\n64914   52073\\n76460   78294\\n43026   24410\\n44179   50980\\n47653   90255\\n78061   50980\\n14475   71478\\n77868   37150\\n99645   28090\\n86267   70055\\n58072   68830\\n96428   66585\\n77501   50141\\n52344   93653\\n49534   35509\\n46925   12437\\n40005   87987\\n17329   86995\\n17585   89795\\n32296   59660\\n81836   11644\\n89435   65322\\n55149   59423\\n56971   50141\\n26342   95142\\n57894   56227\\n49762   33007\\n48949   65641\\n40453   53505\\n67613   23537\\n27110   87987\\n25231   63910\\n92546   50713\\n70074   27554\\n39649   93653\\n93231   30520\\n60008   79179\\n18449   47209\\n68828   36207\\n18908   72254\\n55426   44661\\n62522   87987\\n60923   25255\\n85721   68107\\n35153   71814\\n20053   24813\\n24233   22904\\n36237   92731\\n92077   68189\\n30105   50674\\n37032   90255\\n12745   54116\\n41563   53324\\n24700   29145\\n60226   85335\\n50713   64775\\n29972   51790\\n79176   19794\\n40017   96101\\n90724   41345\\n51608   39176\\n46178   50141\\n26151   23489\\n19569   44529\\n34368   86052\\n18948   50801\\n62091   17329\\n89749   38984\\n68315   37514\\n52396   19794\\n14981   14475\\n36038   69571\\n50048   50980\\n60796   41563\\n69942   72877\\n80976   25234\\n56722   90255\\n49489   28090\\n60768   65557\\n70753   85065\\n15233   23522\\n94697   87600\\n40958   41532\\n91709   40116\\n83586   19028\\n88140   24977\\n56993   50980\\n17980   53324\\n12421   97982\\n30183   40884\\n50452   53324\\n91314   90651\\n69995   19028\\n16588   28090\\n22432   98658\\n86088   77868\\n46361   65322\\n97178   75705\\n37444   79320\\n12275   96101\\n47016   16942\\n36822   87327\\n62082   31274\\n68265   64314\\n87344   24603\\n40642   23559\\n87254   38755\\n62372   50713\\n89026   68830\\n88519   96101\\n53514   31808\\n24686   41563\\n23817   68705\\n26704   89031\\n37908   65322\\n22665   35601\\n75378   59200\\n16797   86995\\n55847   68189\\n55932   72688\\n41470   96101\\n43557   17329\\n45439   77868\\n41230   76226\\n25104   92869\\n43736   93653\\n85938   93653\\n74153   54726\\n73956   70350\\n70419   37102\\n81275   64160\\n30656   32684\\n46218   32617\\n67969   31808\\n61544   81806\\n39376   56568\\n14769   60336\\n10199   97703\\n61064   40091\\n75531   30486\\n17211   31808\\n75184   74633\\n24565   61765\\n83922   44529\\n11644   25255\\n71836   14393\\n53030   19028\\n83437   33190\\n33687   54998\\n92054   82083\\n48250   68533\\n10977   34363\\n51050   19028\\n80898   68276\\n26442   68830\\n39875   65514\\n24976   76417\\n31946   23537\\n95278   90255\\n71678   26450\\n49641   28580\\n12962   13674\\n13598   30362\\n40620   21256\\n49062   92869\\n88449   79529\\n80153   94081\\n36918   70556\\n77902   99228\\n41848   99097\\n26032   39378\\n23830   50980\\n49712   78294\\n95464   65322\\n76971   27393\\n67074   22132\\n17629   71246\\n92019   92869\\n20780   96521\\n68372   16880\\n49710   88060\\n94680   52634\\n28626   57101\\n31808   60809\\n25578   28090\\n12020   25255\\n46008   33046\\n27712   36207\\n17168   53033\\n92923   87987\\n94668   65843\\n59490   48858\\n69085   38485\\n28242   14664\\n18302   96101\\n64047   71241\\n62752   73532\\n28873   59278\\n22206   18029\\n57298   85374\\n26420   78294\\n74055   30817\\n74377   45566\\n81846   17058\\n35184   27305\\n72054   89795\\n78666   41563\\n80545   96101\\n69240   51322\\n76319   36831\\n23617   14475\\n53848   93653\\n65082   36888\\n18802   93491\\n63942   23559\\n80208   22876\\n17018   68830\\n78018   51611\\n35520   75130\\n43479   88543\\n18522   96101\\n41260   15010\\n58041   21675\\n96272   68830\\n73601   78294\\n44788   52104\\n67152   89795\\n57671   61399\\n33841   56764\\n41963   53394\\n41010   28090\\n53937   65322\\n75472   76675\\n22253   92068\\n24277   93653\\n62012   14475\\n27539   50141\\n29180   41637\\n27151   35922\\n28752   23559\\n31602   47673\\n80298   50906\\n94689   38297\\n87987   48139\\n51692   61967\\n93653   86995\\n99694   96638\\n50948   11644\\n87830   19794\\n57579   93403\\n60947   72082\\n18514   53324\\n99194   25255\\n57630   93653\\n49914   10526\\n34613   94340\\n32145   16105\\n39569   62764\\n14118   31274\\n38901   19016\\n47443   66925\\n83812   31274\\n61920   50141\\n88684   50713\\n32305   31808\\n58695   50713\\n20016   42720\\n68955   31976\\n96299   99509\\n83258   96101\\n49424   68830\\n97130   14043\\n34668   50936\\n27567   35509\\n57890   65959\\n58399   78860\\n88934   50980\\n70656   66788\\n91507   44529\\n53671   87987\\n75858   71137\\n14726   13674\\n25416   31274\\n90521   50075\\n37289   96101\\n79415   19028\\n21158   25355\\n53210   16168\\n35192   81526\\n67240   23559\\n42967   65310\\n81598   93094\\n12765   36207\\n23853   41643\\n78439   22984\\n13052   50141\\n56642   93653\\n19028   82791\\n89371   36244\\n89795   50799\\n41542   90489\\n49486   72630\\n26630   50763\\n35019   68830\\n62271   78294\\n16433   77868\\n42466   57338\\n63666   39984\\n56231   83564\\n51132   96101\\n33675   74200\\n94670   70445\\n51236   17822\\n52493   64460\\n45346   86995\\n41620   31274\\n80479   88912\\n46200   90255\\n13789   60686\\n98564   76843\\n44974   92717\\n76047   80674\\n60650   89430\\n55723   45722\\n89426   97853\\n33961   98414\\n32872   68189\\n65322   12029\\n29922   36159\\n74923   34697\\n37065   59688\\n66622   23559\\n68253   14475\\n28664   53324\\n62981   25761\\n83161   50674\\n22849   50980\\n11119   76308\\n22980   13794\\n76171   19411\\n96351   28221\\n45573   90255\\n19850   79146\\n97828   90483\\n23867   85271\\n36353   50141\\n46579   87987\\n73434   23559\\n57169   68189\\n68768   41682\\n59354   97617\\n62181   64641\\n34167   53324\\n28374   24803\\n55863   57352\\n25058   33040\\n76126   53005\\n97283   51641\\n25887   29253\\n43067   50713\\n51616   61868\\n97533   16129\\n50692   80951\\n43173   41626\\n93917   76055\\n84713   53465\\n24130   13599\\n56773   50980\\n15310   44529\\n63375   50141\\n75875   93653\\n22284   33135\\n46294   77836\\n29713   14393\\n95318   83346\\n83264   61967\\n39267   47771\\n61101   86995\\n47882   96101\\n24345   70347\\n50674   14475\\n17296   12880\\n52605   11644\\n40817   78294\\n36207   93653\\n16045   96101\\n91784   68830\\n34583   69934\\n71867   28090\\n74898   22671\\n54609   27206\\n33070   26257\\n18570   57394\\n16766   87036\\n62825   21503\\n39793   17504\\n12038   82452\\n37265   12706\\n69479   44529\\n96101   44260\\n49175   50713\\n70708   55412\\n50136   14475\\n27300   96101\\n75794   62368\\n10277   87990\\n30825   87987\\n35563   24149\\n12505   91890\\n11323   14393\\n89922   84455\\n10927   65359\\n50656   71304\\n47973   11644\\n17156   92869\\n98964   96101\\n50980   59345\\n94733   23559\\n22743   26134\\n90255   54273\\n80006   65322\\n10157   92869\\n70496   28090\\n25569   41226\\n79982   92869\\n34897   76485\\n83357   86388\\n26352   79503\\n67432   15174\\n49155   72153\\n36311   86995\\n14394   65333\\n70928   51667\\n67367   23559\\n48195   57003\\n52001   26154\\n63251   21651\\n21894   89795\\n50774   43252\\n85637   36207\\n79243   11644\\n49512   57954\\n22454   15919\\n84214   20805\\n67121   86995\\n49247   78035\\n79313   34840\\n33168   19814\\n48657   92888\\n59824   74905\\n30088   68830\\n74246   90052\\n78389   65322\\n88418   28090\\n93716   62226\\n74962   29324\\n47309   50980\\n93517   14393\\n23895   68175\\n34548   25255\\n32628   84730\\n55988   31274\\n82578   40953\\n51728   16926\\n19440   27805\\n42922   45159\\n52930   41563\\n91562   31274\\n23559   62680\\n92150   26879\\n78315   61783\\n43601   91325\\n87621   17838\\n78580   65350\\n94778   77868\\n68519   83273\\n35509   66389\\n82288   52439\\n65083   19794\\n86995   13010\\n66618   95850\\n18656   70145\\n98537   65322\\n60842   52161\\n68830   10132\\n99689   24077\\n33740   89795\\n45595   53090\\n78239   36207\\n20185   36207\\n87307   69366\\n83009   77868\\n34685   88642\\n13674   28090\\n82450   69909\\n44812   75146\\n54296   92869\\n73558   94990\\n21422   48229\\n49473   10547\\n66108   68189\\n71169   74202\\n78276   40690\\n82977   78294\\n61842   15634\\n31582   95459\\n39064   14475\\n70204   18593\\n71244   87987\\n31642   50490\\n98413   37109\\n61175   50141\\n37168   23559\\n44093   11032\\n18806   40848\\n91249   73483\\n95812   32572\\n93644   68189\\n30669   20850\\n75404   92869\\n53324   50141\\n80675   50216\\n14897   73401\\n34074   29952\\n16366   32630\\n95656   28090\\n73964   58896\\n90705   66916\\n92869   59662\\n99522   78294\\n35903   19794\\n33033   42610\\n55650   50980\\n29289   11753\\n32302   58345\\n76036   57644\\n74870   31274\\n85035   77868\\n79322   25255\\n50332   31274\\n78294   44529\\n93000   53324\\n36560   19028\\n40041   53525\\n70360   89795\\n19074   98749\\n32829   89603\\n61436   71046\\n89938   85369\\n52708   28090\\n83958   53324\\n88155   67097\\n32730   75527\\n64221   23559\\n60391   97432\\n70047   20185\\n12372   73527\\n46501   29274\\n66552   14746\\n56373   51614\\n95596   11782\\n81196   72623\\n32282   60515\\n49504   14393\\n57642   34348\\n95402   87987\\n81625   68830\\n28527   37199\\n71475   31808\\n94280   23005\\n55623   99355\\n46783   29073\\n36641   81559\\n74788   14535\\n87994   78773\\n80189   77868\\n33263   89795\\n23537   23537\\n25755   22264\\n67413   72800\\n74924   73774\\n81215   78294\\n78206   92869\\n36161   50141\\n54925   86995\\n66305   49951\\n42462   28090\\n99051   88912\\n44954   89795\\n88856   28090\\n63026   85778\\n22651   24813\\n39262   14475\\n86176   69982\\n65395   14393\\n12926   78294\\n81994   53324\\n16933   30191\\n46987   19794\\n37215   28090\\n15340   63748\\n40271   86674\\n23747   52856\\n61156   11644\\n65356   56048\\n72336   51278\\n21864   77868\\n99351   13349\\n24599   79046\\n62281   23361\\n81871   53324\\n14029   42297\\n50141   48720\\n46677   43636\\n10745   35965\\n39344   80864\\n38077   50038\\n13983   89795\\n66663   67877\\n64175   19028\\n62355   68830\\n96823   79443\\n46436   44754\\n53388   68830\\n45987   92723\\n87646   11707\\n75997   45545\\n69968   93653\\n30425   44529\\n83211   88109\\n28725   64932\\n47043   89795\\n34475   31274\\n42302   94895\\n66558   92753\\n48964   50713\\n19546   78294\\n51026   89795\\n89346   57408\\n52993   54676\\n29577   38385\\n85932   60320\\n18030   22556\\n65993   19922\\n74692   23559\\n61588   89795\\n50688   69541\\n93760   44529\\n75094   96101\\n68976   86835\\n46278   50980\\n97836   44529\\n17576   32708\\n48519   46071\\n72647   93653\\n54724   34155\\n45186   43448\\n44529   41828\\n90404   86357\\n63175   44529\\n88381   25963\\n32140   23537\\n43348   36423\\n41733   88912\\n84065   98953\\n20389   96101\\n38749   93788\\n37929   35143\\n63747   35340\\n72249   93653\\n98042   59381\\n22741   95783\\n88124   33425\\n16493   44529\\n36599   69408\\n50436   41563\\n67695   86149\\n89091   20022\\n60708   92607\\n28750   68830\\n80224   39113\\n34580   96101\\n79688   34798\\n14870   68189\\n47719   29252\\n57652   33458\\n65541   87987\\n86435   19794\\n95204   81239\\n43800   50980\\n94063   11644\\n24096   36588\\n36628   95478\\n81443   17329\\n61221   57166\\n52782   78294\\n16740   31274\\n68369   45653\\n28895   44529\\n39222   65582\\n97201   77602\\n81119   11644\\n41083   50141\\n72917   25255\\n46148   21269\\n44495   18020\\n99464   90525\\n67254   58381\\n52750   28135\\n63899   55754\\n14617   50713\\n36962   50713\\n41322   73436\\n22504   38709\\n72577   39875\\n67799   68830\\n68284   71156\\n46011   61967\\n50367   31808\\n45832   87987\\n88775   87987\\n32562   26340\\n43756   49887\\n73444   16547\\n67302   92449\\n22133   85451\\n17768   77868\\n69281   39885\\n87364   25255\\n41209   27363\\n37792   77868\\n66667   73746\\n22195   28090\\n65037   37556\\n28634   89795\\n23901   50674\\n40511   95801\\n47779   45253\\n76489   86807\\n77873   66992\\n87523   35509\\n32876   50980\\n62342   50980\\n84222   41563\\n88205   40382\\n78856   20051\\n97888   68189\\n22233   17329\\n35868   81437\\n80155   93653\\n82730   78294\\n12733   19794\\n55038   26258\\n50682   23250\\n42043   74279\\n54719   71512\\n54474   23991\\n61776   25255\\n55564   41563\\n39404   31274\\n94954   14475\\n76258   89795\\n87689   67995\\n65619   59930\\n41846   17435\\n21990   22185\\n60161   53026\\n44955   57523\\n84178   39875\\n32693   87987\\n19125   44529\\n96731   93653\\n98080   44529\\n72947   95746\\n67285   23344\\n78101   77580\\n43064   11644\\n81350   23483\\n46937   11644\\n97686   79381\\n66339   60744\\n39269   50674\\n61837   77868\\n97647   86995\\n44613   93568\\n73127   68830\\n64048   80370\\n15530   87987\\n63926   51860\\n95853   91981\\n26155   28090\\n82222   19794\\n10035   87445\\n16445   93653\\n67972   15558\\n51780   68830\\n52358   31274\\n83942   60096\\n64899   11955\\n56009   96101\\n42288   36590\\n53349   65322\\n76255   50713\\n53044   26351\\n37184   31274\\n24813   19028\\n62309   52490\\n93607   19028\\n27423   45568\\n26128   78294\\n72691   50141\\n42162   60052\\n78247   10613\\n80209   31808\\n38310   93653\\n59228   47607\\n24897   23559\\n55176   37760\\n33062   53324\\n26521   39170\\n93209   68189\\n89881   23559\\n11418   50980\\n16884   78294\\n31995   50980\\n17858   98671\\n49107   96101\\n50512   54526\\n56890   65322\\n76173   65309\\n51569   52845\\n73919   23537\\n62591   16739\\n53735   79935\\n14454   69804\\n19976   46609\"","export default \"7 6 4 2 1\\n1 2 7 8 9\\n9 7 6 2 1\\n1 3 2 4 5\\n8 6 4 4 1\\n1 3 6 7 9\"","export default \"66 67 68 71 72 69\\n72 75 78 79 79\\n38 40 41 42 44 47 48 52\\n86 87 88 91 96\\n30 33 34 36 39 36 38 40\\n77 78 79 80 79 76\\n84 87 89 86 87 87\\n7 10 13 14 16 19 18 22\\n22 25 28 26 28 29 32 38\\n47 50 53 53 54 56 57 60\\n67 69 71 73 73 72\\n15 16 16 19 21 23 23\\n87 88 90 92 92 96\\n20 21 24 24 29\\n18 20 22 24 28 29 31 33\\n86 87 88 91 95 97 96\\n13 16 19 22 26 26\\n28 31 35 38 42\\n35 37 41 44 49\\n33 36 42 45 46\\n78 81 82 85 90 87\\n44 47 49 54 55 57 57\\n50 52 53 58 62\\n72 75 80 81 82 89\\n12 10 12 14 15 16 19 22\\n40 39 41 42 45 47 49 46\\n23 21 24 27 29 30 30\\n11 8 11 14 15 18 19 23\\n21 19 22 23 26 27 34\\n62 61 58 59 60\\n52 50 53 52 50\\n3 1 2 5 7 4 4\\n68 65 68 67 68 72\\n45 42 40 43 49\\n5 4 7 9 11 11 14 17\\n7 4 5 7 10 10 7\\n64 62 64 64 66 67 67\\n87 86 86 88 91 92 96\\n64 62 62 63 64 65 68 73\\n64 61 62 63 67 68\\n12 9 13 15 13\\n83 81 84 88 90 93 95 95\\n6 3 5 9 10 12 16\\n38 35 39 41 47\\n62 60 63 70 71 74\\n56 55 60 61 63 64 62\\n44 43 44 45 47 53 53\\n61 60 67 69 73\\n73 70 73 74 77 82 84 89\\n8 8 10 11 14 17\\n55 55 56 57 59 56\\n75 75 76 79 81 82 84 84\\n72 72 75 78 80 84\\n69 69 72 75 76 77 82\\n49 49 51 49 51\\n38 38 41 44 45 43 42\\n15 15 17 16 16\\n25 25 26 24 25 26 29 33\\n18 18 20 22 21 22 29\\n81 81 81 83 84 85 86\\n86 86 86 89 92 89\\n27 27 30 31 32 32 35 35\\n33 33 33 34 37 40 42 46\\n50 50 50 52 53 56 58 65\\n65 65 66 70 73\\n65 65 66 67 71 70\\n8 8 9 12 14 18 18\\n70 70 73 77 81\\n65 65 66 68 69 73 79\\n25 25 28 35 36\\n41 41 48 51 53 56 55\\n87 87 88 95 95\\n70 70 75 76 79 81 83 87\\n10 10 12 13 18 23\\n69 73 75 77 78 81 83 86\\n62 66 68 70 72 71\\n81 85 88 89 92 92\\n33 37 39 42 45 49\\n49 53 56 57 58 60 67\\n18 22 20 21 24 26\\n80 84 87 90 88 85\\n17 21 22 21 22 25 25\\n29 33 35 34 38\\n5 9 6 7 9 16\\n19 23 26 29 29 32\\n49 53 56 57 60 61 61 60\\n63 67 69 71 71 73 76 76\\n77 81 83 83 85 89\\n23 27 27 30 36\\n37 41 43 45 48 49 53 55\\n23 27 31 32 35 32\\n52 56 58 62 62\\n15 19 23 26 30\\n60 64 66 67 70 74 76 82\\n61 65 66 72 74 76\\n5 9 10 17 16\\n36 40 41 47 50 53 53\\n30 34 35 40 41 45\\n28 32 35 37 43 46 51\\n22 29 31 34 37\\n30 36 37 39 38\\n24 31 34 37 37\\n4 11 13 16 19 23\\n37 43 44 45 48 50 55\\n34 40 37 38 40 42 44\\n11 17 18 19 21 19 20 18\\n53 59 61 59 61 62 64 64\\n58 65 68 65 67 69 73\\n79 86 89 88 89 92 94 99\\n15 20 21 22 22 23 25 27\\n28 33 36 36 38 37\\n88 95 97 97 99 99\\n34 39 41 44 45 48 48 52\\n6 11 11 12 14 16 17 22\\n59 65 69 72 73 76\\n54 61 63 67 69 72 74 71\\n22 29 30 32 34 37 41 41\\n61 68 70 74 78\\n28 33 37 39 40 47\\n13 19 21 24 30 32\\n69 76 78 80 82 84 89 86\\n8 15 18 20 25 26 26\\n67 74 77 82 86\\n13 18 19 25 27 30 37\\n67 64 62 60 57 55 53 55\\n70 69 66 63 60 58 55 55\\n48 45 43 42 41 37\\n62 60 59 58 53\\n15 14 13 12 14 13 10 8\\n29 27 29 28 25 28\\n71 69 66 64 65 62 62\\n17 15 13 15 12 10 6\\n97 96 97 95 94 92 86\\n33 30 27 24 21 18 18 17\\n24 21 20 19 16 16 14 15\\n43 40 40 38 36 35 35\\n59 58 55 52 52 49 45\\n14 12 12 11 5\\n94 91 89 87 83 82 79\\n21 18 16 12 10 11\\n69 66 64 62 58 55 55\\n88 86 83 82 79 78 74 70\\n56 54 50 47 40\\n21 18 13 11 8 5\\n31 28 26 25 23 20 14 17\\n52 50 49 43 40 39 39\\n37 34 31 25 23 19\\n35 32 30 24 22 21 16\\n65 68 65 63 61 60 58 55\\n55 56 53 52 49 52\\n9 12 11 9 8 5 5\\n35 36 33 32 31 29 25\\n62 65 62 59 56 55 50\\n77 79 82 81 79\\n65 68 67 65 68 69\\n26 29 28 31 30 29 29\\n93 95 94 95 91\\n81 84 85 83 76\\n34 37 37 34 31 29 28 25\\n38 40 39 36 33 33 30 33\\n54 57 54 51 48 48 48\\n44 47 47 44 40\\n88 91 91 89 84\\n48 50 48 47 44 40 39 37\\n86 89 85 84 82 79 76 77\\n80 82 78 76 73 70 70\\n87 89 86 82 79 77 73\\n45 47 43 42 41 39 37 32\\n39 40 35 33 32 31\\n52 53 50 43 40 42\\n36 38 37 36 31 29 29\\n76 79 73 72 71 68 64\\n87 88 86 85 78 76 73 68\\n39 39 36 33 31\\n36 36 35 33 31 29 30\\n88 88 86 85 82 82\\n9 9 6 5 1\\n99 99 97 94 92 90 88 81\\n62 62 59 60 57 56\\n41 41 40 37 34 36 34 36\\n90 90 88 85 88 85 83 83\\n59 59 60 59 56 53 49\\n89 89 92 89 87 82\\n72 72 72 70 68\\n20 20 18 18 20\\n48 48 47 46 44 44 44\\n26 26 24 22 22 18\\n94 94 94 93 92 91 89 82\\n25 25 24 20 17 16 15\\n64 64 61 58 55 51 50 53\\n85 85 81 80 79 76 76\\n56 56 52 49 45\\n91 91 90 86 80\\n58 58 56 49 48\\n86 86 79 78 76 74 77\\n80 80 79 76 75 72 65 65\\n36 36 29 28 27 26 25 21\\n22 22 17 16 9\\n18 14 11 9 6\\n59 55 53 50 47 50\\n43 39 38 35 34 32 30 30\\n37 33 32 31 29 26 22\\n46 42 39 37 35 34 27\\n91 87 90 89 88 85 83\\n53 49 48 49 48 46 48\\n95 91 90 87 89 86 86\\n25 21 19 17 18 17 13\\n65 61 59 61 60 53\\n58 54 54 53 52 50\\n58 54 54 51 52\\n37 33 33 32 29 29\\n71 67 65 63 62 62 58\\n62 58 56 55 55 53 51 46\\n23 19 16 15 12 8 5\\n76 72 68 67 70\\n48 44 40 38 35 35\\n87 83 81 77 75 74 70\\n66 62 59 55 49\\n20 16 13 8 6 4 1\\n56 52 51 49 42 44\\n31 27 22 20 19 18 18\\n30 26 24 19 17 16 12\\n30 26 23 20 15 14 12 5\\n51 45 42 40 38\\n34 29 27 24 25\\n51 44 43 42 42\\n33 26 24 22 18\\n82 76 74 73 67\\n61 54 55 52 51 50\\n74 68 66 69 72\\n14 7 8 7 7\\n62 56 55 57 55 52 48\\n50 45 42 44 37\\n19 12 12 9 7 6\\n39 34 34 31 29 30\\n65 58 55 53 51 51 51\\n84 79 77 75 75 71\\n84 79 78 75 75 73 67\\n43 37 36 32 31 28 25 23\\n77 70 66 63 61 58 60\\n48 43 39 37 37\\n78 72 68 67 64 61 57\\n25 18 14 12 5\\n71 66 65 58 55 53\\n90 84 82 81 76 75 74 77\\n54 47 46 41 41\\n41 35 33 28 24\\n78 73 72 71 64 62 56\\n10 11 12 13 15 16 14\\n49 50 51 53 56 58 60 60\\n20 21 22 25 27 30 34\\n70 71 74 77 78 80 86\\n44 45 48 45 46 48 50 53\\n62 64 65 68 71 73 70 69\\n73 75 76 79 82 81 81\\n34 35 32 35 39\\n75 76 78 80 78 80 85\\n91 92 95 95 98\\n22 25 25 26 27 29 31 28\\n27 30 31 31 34 36 39 39\\n55 56 56 58 62\\n25 28 28 31 34 39\\n57 60 63 64 68 70 72 73\\n60 62 65 69 72 70\\n46 47 48 52 54 54\\n19 22 23 25 29 33\\n83 84 86 90 91 93 98\\n41 42 44 49 52 55 56 57\\n16 19 21 24 27 34 37 36\\n27 29 32 35 38 43 43\\n30 31 33 40 43 47\\n39 40 41 47 48 49 56\\n83 81 83 85 86 89 91\\n48 46 49 52 54 55 53\\n73 71 73 74 75 78 78\\n71 70 71 73 74 77 79 83\\n39 36 38 41 42 44 45 52\\n86 85 86 84 86 87 89 91\\n44 42 45 48 46 45\\n86 85 86 89 87 87\\n4 1 2 1 5\\n46 45 44 46 47 50 56\\n89 86 86 89 90 91\\n73 71 72 75 76 77 77 76\\n24 22 23 23 25 27 27\\n29 28 29 29 33\\n69 66 69 69 71 73 76 83\\n61 59 63 65 67\\n67 66 70 71 69\\n53 50 53 57 59 60 60\\n72 70 72 76 80\\n38 35 38 42 49\\n50 48 51 58 61\\n70 68 70 76 73\\n61 60 61 67 69 69\\n30 27 29 31 33 38 42\\n4 1 2 5 8 14 16 23\\n12 12 15 16 19 21\\n37 37 39 40 38\\n2 2 5 7 9 10 11 11\\n3 3 6 7 11\\n18 18 20 23 30\\n70 70 72 73 70 73 75\\n38 38 40 37 39 42 43 42\\n71 71 74 73 73\\n65 65 64 67 68 71 75\\n35 35 36 37 36 43\\n30 30 31 31 32 35\\n93 93 95 95 96 94\\n27 27 27 30 32 33 36 36\\n36 36 36 38 40 44\\n18 18 20 21 22 25 25 30\\n62 62 64 68 70 73\\n90 90 94 95 96 99 97\\n44 44 48 49 51 51\\n68 68 69 73 75 79\\n60 60 64 66 72\\n20 20 22 24 31 33 36 37\\n34 34 37 43 45 43\\n58 58 63 64 67 67\\n54 54 60 61 64 67 71\\n67 67 68 70 77 80 86\\n75 79 81 84 87 89\\n45 49 51 53 50\\n5 9 12 15 17 19 19\\n47 51 54 55 56 60\\n76 80 81 83 86 89 90 97\\n83 87 89 88 91 92\\n29 33 31 34 31\\n51 55 57 60 57 59 59\\n35 39 40 39 40 44\\n1 5 8 5 8 13\\n74 78 79 79 80\\n57 61 61 62 65 63\\n4 8 8 10 10\\n67 71 74 74 77 81\\n42 46 47 50 50 55\\n36 40 41 45 47\\n53 57 60 64 67 64\\n6 10 11 13 17 17\\n78 82 84 88 90 94\\n79 83 86 89 93 98\\n34 38 45 46 49 52\\n50 54 59 62 64 66 65\\n58 62 69 71 72 72\\n56 60 65 66 67 71\\n22 26 28 30 32 37 38 44\\n84 89 91 93 94 95\\n58 63 64 67 65\\n36 41 44 47 50 52 55 55\\n62 67 68 69 73\\n70 77 80 81 84 86 92\\n68 73 74 71 72 75 78 81\\n73 79 76 79 76\\n53 58 55 56 57 58 59 59\\n31 36 34 37 40 44\\n37 43 41 43 50\\n14 20 22 22 25\\n70 75 77 80 80 81 84 83\\n51 56 59 59 59\\n2 8 9 12 12 14 16 20\\n50 55 57 58 60 60 65\\n58 63 64 66 70 72\\n81 88 90 93 97 95\\n26 33 37 39 41 41\\n74 80 82 86 90\\n26 33 37 38 44\\n68 75 81 82 83 84\\n13 18 19 21 26 27 29 27\\n53 59 60 66 69 70 70\\n17 22 29 30 33 35 38 42\\n42 47 48 49 50 52 58 65\\n84 83 81 79 76 78\\n61 58 55 54 54\\n77 75 73 70 67 63\\n86 85 84 83 80 77 76 70\\n44 41 42 39 38 37 35\\n22 19 16 13 16 13 11 14\\n86 85 84 87 86 86\\n32 31 30 29 31 28 24\\n18 15 12 9 7 9 7 1\\n84 81 81 78 76 74\\n11 10 7 6 6 4 3 5\\n20 19 19 18 18\\n16 13 13 10 6\\n99 96 94 91 89 86 86 80\\n27 24 23 22 21 17 16\\n50 49 45 43 42 39 38 39\\n85 83 79 78 75 75\\n19 16 12 10 9 8 4\\n28 27 23 21 16\\n91 88 83 80 77\\n17 16 14 9 11\\n74 71 66 64 64\\n40 38 33 30 28 24\\n66 64 63 56 53 46\\n33 34 33 32 31 28 27\\n52 54 52 50 47 46 43 46\\n60 63 61 59 57 54 54\\n82 84 82 81 78 77 74 70\\n36 39 37 35 28\\n67 69 66 64 67 65 64\\n45 46 45 48 51\\n83 84 82 83 81 80 80\\n33 36 38 36 32\\n88 91 88 87 89 86 80\\n43 44 42 39 39 38 37\\n35 36 36 33 30 31\\n3 4 4 2 2\\n77 79 76 74 74 71 67\\n89 92 92 90 88 87 85 79\\n45 48 44 41 40\\n33 36 33 30 28 27 23 25\\n66 69 68 65 61 59 57 57\\n88 89 88 84 80\\n46 47 43 42 36\\n97 98 96 94 89 88 87 84\\n11 14 12 5 3 6\\n80 83 82 81 74 74\\n24 26 23 16 12\\n63 64 57 54 48\\n86 86 85 83 82\\n24 24 21 20 21\\n56 56 53 52 51 51\\n60 60 58 55 54 50\\n93 93 90 87 86 83 78\\n13 13 16 13 12 11 8 7\\n64 64 63 66 64 66\\n50 50 49 51 51\\n34 34 33 32 35 31\\n82 82 79 77 80 78 73\\n47 47 47 46 43\\n95 95 95 94 96\\n48 48 48 45 44 44\\n18 18 18 16 14 10\\n87 87 85 84 84 83 81 75\\n72 72 68 67 66 63\\n65 65 64 61 57 55 52 54\\n91 91 90 86 86\\n46 46 42 39 35\\n53 53 51 50 47 44 40 33\\n85 85 78 76 75\\n70 70 68 63 61 62\\n47 47 44 38 35 33 31 31\\n79 79 78 72 68\\n73 73 68 65 58\\n75 71 69 68 65\\n52 48 46 43 40 38 35 37\\n21 17 15 12 12\\n41 37 35 32 28\\n88 84 83 81 78 72\\n68 64 61 63 61\\n18 14 15 12 13\\n62 58 56 53 54 51 51\\n24 20 18 19 15\\n93 89 87 89 84\\n41 37 35 34 34 33 32\\n44 40 39 36 36 34 35\\n22 18 16 16 16\\n86 82 80 77 77 74 73 69\\n34 30 29 28 27 26 26 19\\n93 89 87 83 80 79\\n59 55 54 51 47 46 45 47\\n20 16 13 12 8 6 4 4\\n27 23 20 17 15 14 10 6\\n25 21 17 16 11\\n98 94 88 87 84\\n65 61 58 55 52 47 44 46\\n32 28 26 20 20\\n82 78 77 74 72 67 63\\n55 51 49 47 45 44 37 32\\n36 31 28 27 26 23 21 20\\n90 85 83 80 77 76 74 76\\n15 10 8 7 6 5 3 3\\n57 51 49 46 45 44 42 38\\n29 24 21 20 19 13\\n82 76 74 72 71 72 69 66\\n10 4 7 4 5\\n37 32 34 32 29 28 26 26\\n56 50 52 50 46\\n53 46 49 47 46 45 43 38\\n76 71 68 68 65 64\\n88 81 81 79 77 74 76\\n83 76 76 73 73\\n66 59 59 58 54\\n98 93 92 90 90 84\\n27 22 18 17 14 11\\n29 24 20 19 17 15 18\\n81 76 74 71 67 65 62 62\\n69 63 60 56 55 51\\n86 81 77 74 67\\n74 67 62 59 58\\n66 60 55 54 56\\n53 46 39 37 35 33 33\\n29 23 20 14 10\\n33 28 27 26 19 16 15 8\\n60 61 56 55 51\\n97 91 88 87 86 80 81\\n74 73 68 67 64 60\\n23 21 17 15 12 12\\n47 53 55 56 59 60 63 65\\n38 38 38 36 34\\n69 62 59 57 54\\n13 13 12 9 8 7 7 9\\n32 34 34 37 39 41 42 43\\n81 77 75 74 75 73 72\\n2 3 5 7 12 14 11\\n43 43 41 40 40 39 33\\n27 25 27 28 32\\n47 51 53 55 62 63 69\\n29 32 34 33 30 26\\n51 58 60 61 65 68 68\\n66 69 68 69 71 73 73\\n84 84 86 83 79\\n59 60 56 53 51\\n15 20 22 23 27 29 32 39\\n4 11 12 10 11 13\\n39 35 33 31 33 31 31\\n29 30 32 33 35 35\\n84 83 84 84 87 88 91 96\\n20 15 14 11 12\\n16 16 14 15 14 13 11 12\\n49 43 41 37 38\\n9 16 20 22 25 28 32\\n18 18 19 21 25 26\\n72 74 75 78 82 82\\n19 23 28 31 35\\n86 79 78 74 70\\n14 14 17 14 15 18 22\\n59 52 51 54 51 48 46\\n1 1 2 5 7 12 11\\n54 50 49 47 43 43\\n81 85 86 87 88 89 87 90\\n7 8 11 13 16 22\\n4 10 7 8 12\\n70 64 63 60 62 62\\n6 6 9 14 16 18 21 28\\n56 61 58 60 62 67\\n44 37 35 31 28 26 21\\n14 18 20 23 27 27\\n44 44 42 39 37 37 35 31\\n95 95 97 99 97 99 96\\n62 64 61 61 58 55\\n52 58 58 59 60 61\\n30 28 30 33 33 36\\n51 47 44 41 40 37\\n81 78 76 73 75 72\\n23 24 28 30 33 35 38 40\\n12 10 7 5 4 4 5\\n16 19 19 22 26\\n79 80 83 82 83 86 88\\n76 69 66 65 62 62 61 62\\n14 13 7 5 4 7\\n56 50 48 45 45 41\\n62 64 65 69 73\\n64 68 71 72 75 74 74\\n43 47 51 54 56 59 63\\n60 56 53 51 50 47 46 42\\n75 78 77 77 75 75\\n53 53 57 60 61 66\\n82 85 84 82 80 82 79 74\\n66 61 58 51 49 47 46\\n35 39 39 40 42 44 48\\n42 35 34 31 28 21 20 20\\n94 87 85 86 83 79\\n53 55 56 59 62 66\\n10 9 13 14 12\\n19 25 27 29 32 39 39\\n79 77 80 82 85 82 79\\n39 35 33 34 33 30 26\\n64 71 73 76 83 85 84\\n64 65 63 66 70\\n73 74 81 84 85 85\\n34 34 35 36 36\\n63 69 70 72 75 81 84 88\\n66 70 77 79 82 85\\n80 81 79 75 68\\n91 87 86 85 82 80 83 86\\n50 50 56 59 62\\n2 7 7 10 14\\n61 62 66 67 68 70 71 70\\n43 43 45 47 47 48 48\\n29 27 24 18 16 9\\n17 21 23 23 29\\n84 77 75 74 73 70 63\\n32 30 29 26 22 21 16\\n25 18 15 17 14 12 9 3\\n82 85 88 90 92 90\\n21 18 21 18 21\\n76 82 82 83 85 87 87\\n52 50 47 42 41\\n22 26 28 29 30 30\\n17 17 18 18 20 22\\n26 26 22 20 14\\n34 32 37 38 40 43 45 46\\n60 60 62 65 62\\n20 17 20 21 24 27 34 34\\n41 40 41 42 43 47 50 50\\n56 49 45 42 42\\n21 21 25 26 29 30 32 36\\n48 44 44 43 40 38\\n94 93 91 93 92 88\\n70 73 70 69 64 63\\n42 46 47 50 54\\n25 26 24 22 19 17 19\\n95 95 94 92 90 93 90 88\\n23 22 24 23 27\\n75 76 75 72 71 68\\n74 73 71 70 69 66 59 59\\n14 20 22 24 26 29 27\\n15 18 22 23 24 29\\n50 50 51 54 56 57 59\\n41 39 39 41 43 44 47 51\\n22 22 19 19 18 18\\n63 63 66 68 69 70 74\\n21 20 19 18 16 13 12 5\\n72 69 66 66 65 61\\n61 68 69 71 74 75 75\\n81 75 74 73 72 66 60\\n18 18 19 19 20 22 19\\n78 74 72 69 65 64 61 62\\n30 26 24 21 19 19 19\\n76 76 78 79 80 78 78\\n32 38 40 43 50\\n63 56 56 54 54\\n81 82 81 79 79 81\\n85 85 86 86 87 88 94\\n65 61 59 56 49\\n1 5 8 10 8 10 9\\n63 64 67 67 68 69 67\\n44 44 45 49 49\\n87 83 82 79 82\\n54 59 60 63 64 67 70 74\\n13 12 11 9 8 8\\n30 32 31 30 24 21 16\\n77 75 72 71 73 70 67 67\\n86 86 91 93 93\\n70 70 67 62 60 59 58\\n44 50 51 57 59 60 62\\n84 84 90 91 95\\n42 46 47 50 53 58 58\\n31 27 25 25 28\\n1 1 4 1 1\\n47 52 52 54 57 64\\n38 36 38 37 37\\n49 49 45 43 42 41\\n20 19 26 28 33\\n50 53 55 54 56 63\\n19 26 30 33 35 34\\n73 73 76 79 82 82 86\\n40 36 33 32 35 29\\n50 51 53 54 60 67\\n68 72 74 77 79 81 81 84\\n76 79 82 84 91 94 98\\n8 6 7 9 11 11\\n56 50 48 48 46\\n14 17 14 14 10\\n9 13 18 19 17\\n57 58 55 55 52 50 49 43\\n85 82 80 77 74 71 68\\n80 81 82 84 86 88\\n17 19 20 21 23 24 25\\n85 83 81 80 78\\n50 47 46 44 42\\n71 69 66 65 63 62\\n80 78 75 73 70\\n28 29 32 33 34 36\\n36 33 30 28 25 22 20\\n66 68 70 71 74 75\\n36 33 32 30 29 27 26 23\\n67 66 64 62 61 59 58 55\\n45 43 40 39 36 34 31 30\\n25 23 20 19 16 15 14\\n67 65 63 60 59 58\\n3 6 9 10 12 15 17 20\\n45 42 40 38 37 34\\n67 69 72 74 77 80 81 84\\n86 84 82 80 77\\n13 11 10 7 6 4 2\\n18 20 21 23 26 28 31\\n79 80 83 85 88 89 92 95\\n70 72 74 76 77 78 81 82\\n43 45 48 51 52\\n66 63 62 61 60 57 55\\n15 12 11 8 5\\n86 83 82 81 78\\n75 78 81 82 85\\n28 29 32 33 36 38\\n72 75 78 80 81 83 86 88\\n23 21 18 16 14\\n98 96 94 93 90\\n76 75 74 71 69 68 65 62\\n66 65 64 61 60 57 54 53\\n73 71 70 67 66 65 62 59\\n41 44 45 48 50 53\\n27 24 23 22 19\\n17 14 13 12 10 9 6 5\\n36 33 30 28 26 24 21\\n94 92 89 88 85\\n50 53 55 57 60 61\\n62 65 66 69 70 73\\n47 46 44 41 38 35 34 31\\n48 51 53 54 55 56 59\\n78 79 80 81 82 85 87 89\\n51 54 56 58 61 64 65\\n50 52 53 54 55 58 61 62\\n76 75 74 71 69 66 64\\n61 64 67 69 70 72 73\\n75 74 72 71 70 67\\n38 39 41 42 43 45 46\\n76 79 81 84 85 86 89 91\\n59 58 57 56 55 54 51 50\\n88 85 84 82 81 80 79 76\\n15 12 9 8 7 4 1\\n37 36 34 33 31 30 29\\n66 69 72 74 77 78 79 81\\n54 51 49 46 44\\n65 63 60 59 58\\n31 33 34 36 39 40\\n7 10 11 13 15 18 21\\n17 19 21 23 24 27 29 30\\n33 30 27 24 23 22 20 18\\n47 46 45 44 42 39 36 35\\n45 42 40 38 37\\n31 33 34 37 40 41 42 44\\n95 93 90 89 86 84 82\\n53 50 49 47 45 43 41 39\\n38 37 34 31 30 27 26\\n48 50 52 53 54\\n9 10 12 13 16 17 18 19\\n75 77 80 83 85\\n39 40 43 45 48 49\\n89 90 92 94 95 98 99\\n78 77 76 74 73 71\\n32 35 36 38 39 42\\n95 94 93 90 89 86 83 82\\n63 62 59 57 54 52 49 46\\n45 46 47 49 52 54\\n86 85 84 83 80 77\\n61 58 56 54 53\\n42 40 38 35 32 30\\n86 87 90 91 93 94 96 99\\n45 48 51 53 56\\n49 50 51 53 55 57\\n16 15 13 10 8 7 6\\n37 40 41 43 46\\n83 82 79 76 75\\n9 12 15 18 20\\n31 30 29 27 24 22\\n30 33 35 37 39 41 43\\n25 22 20 19 16 15 13 12\\n53 51 48 45 42 39 37\\n30 29 27 26 25 23 20 18\\n36 38 41 42 43 44 46 49\\n22 21 18 15 14 11 9\\n46 47 48 51 54\\n39 41 44 45 47 49 51\\n52 50 48 45 42 41\\n38 39 42 45 48 50 53 56\\n50 51 53 56 58 59\\n86 85 83 80 78 76 75 73\\n59 58 57 54 51\\n22 24 25 27 29 30 32 35\\n11 13 15 16 19 21\\n36 33 31 29 28 27 25 22\\n43 42 39 37 35 33 31 30\\n69 67 66 64 61\\n80 77 75 72 70 68 67\\n55 57 60 63 66 68\\n80 77 76 73 72\\n19 17 15 14 13\\n50 48 45 44 42\\n6 7 10 13 14\\n50 52 55 57 60\\n67 64 62 60 59 56 54 52\\n25 28 30 32 35\\n80 77 76 73 72 70 69\\n36 35 32 29 28 27 26 25\\n64 62 61 60 57 54\\n76 78 79 81 84 87 90 91\\n69 71 72 75 78\\n22 19 16 15 13 12 11\\n95 92 91 88 86 84 81\\n76 79 80 82 83 86 88 89\\n25 26 28 29 30 32\\n4 7 10 12 15\\n70 71 74 77 78 81\\n27 29 32 35 38 41 44 46\\n73 72 69 66 64\\n17 14 13 10 7 5\\n47 44 42 40 37 36\\n28 30 32 33 34 37 39 41\\n86 88 89 90 93\\n79 78 76 74 71\\n44 46 47 48 51 53 54\\n82 84 87 88 91 92 95 96\\n24 22 21 18 16 14\\n48 47 46 45 42\\n73 76 77 80 81\\n29 28 27 26 24\\n59 56 54 52 49 47\\n43 45 46 49 51 53 56 59\\n25 24 23 21 18 16 13 12\\n60 59 57 54 52 50\\n23 20 18 15 14 12\\n53 55 56 58 59 60\\n86 89 92 94 96\\n21 20 18 16 14 11\\n61 63 66 68 70 71 73\\n49 46 45 42 40 38 37\\n9 11 14 16 19 20\\n41 39 36 33 30 28 25 23\\n52 54 55 56 57 58 59 62\\n20 18 15 13 11 10\\n62 60 57 56 53 52 50 49\\n69 72 75 77 79 81\\n80 81 84 87 90 92 93\\n34 32 31 28 26 24 22\\n21 20 18 15 14 11 9 6\\n89 87 86 83 80 79 77 74\\n29 32 33 34 35 37 38\\n29 27 26 24 21 18\\n38 41 42 45 46 49 50\\n63 64 67 69 71 73 74\\n40 42 45 48 49\\n17 18 19 21 22 23\\n5 6 9 10 13 15 17\\n44 47 50 52 55 58 60 62\\n28 25 24 21 18 16 15\\n39 38 36 35 34 33 31\\n78 76 75 74 73 70\\n69 68 65 64 63\\n80 82 83 85 88 91 94 96\\n76 74 71 70 69 68\\n81 84 86 88 89\\n40 42 44 45 46 48 51 53\\n50 51 52 54 55 57\\n57 60 62 63 65 67 70\\n46 45 42 39 37 36\\n72 71 70 68 66\\n37 40 42 45 47\\n53 56 58 59 62\\n87 85 84 82 79 77 75 72\\n82 81 80 77 74 71 70\\n28 30 31 32 33\\n37 36 33 30 27 26 24 22\\n60 59 58 56 54\\n86 85 83 80 78 75 72 71\\n20 21 22 25 27\\n39 41 43 44 47 48 49 50\\n33 32 29 27 26 23 20 18\\n40 37 36 33 31 30\\n23 25 28 30 32 35\\n82 81 79 76 75 73 71 68\\n79 77 76 75 73 72 70 69\\n82 85 86 89 91 94 97\\n87 88 90 91 93\\n14 17 19 20 22 25 26 27\\n82 79 76 75 72 70 68\\n88 87 84 81 79 77\\n15 13 12 10 9 8 7\\n1 2 5 6 9 11\\n20 18 15 14 12 11 9 6\\n11 9 6 3 1\\n66 65 63 60 57 54\\n64 63 62 61 58 57\\n79 77 75 74 72\\n62 60 59 58 57 54 53\\n17 16 13 10 8\\n59 62 64 65 68 69\\n82 80 79 77 74 72\\n16 13 11 8 7 4\\n17 14 12 9 7 4\\n46 45 43 40 39 36 33\\n85 86 87 89 92 94 96 99\\n50 52 55 57 60 62\\n64 65 67 68 70 73 76 79\\n54 53 51 49 47 44 42 39\\n29 30 31 34 35 36 38\\n40 37 34 33 31 30 27 24\\n68 70 71 74 76 77 78\\n62 61 59 58 57 56 55 52\\n4 5 8 9 12 13\\n89 86 85 82 80 79\\n5 8 9 10 13 14 17\\n84 82 81 78 76 73 71\\n84 86 87 90 93 96 97\\n32 31 29 28 26 23\\n17 19 21 23 26 29 31\\n62 65 66 67 69 72\\n43 45 47 48 50 52 55\\n36 35 34 33 31 29 27\\n18 15 14 13 11\\n36 35 32 30 27\\n13 16 17 19 20 21 23\\n98 97 95 93 90 87 86\\n95 93 91 90 88 85 82\\n28 26 24 21 19 18 16 13\\n61 58 57 54 53 51 49 47\\n81 84 86 88 90 92 93\\n45 46 49 50 51\\n48 51 53 54 56 57 58 60\\n73 70 69 68 66 64\\n75 72 70 67 65 64 62\\n50 48 45 42 41 38 37 36\\n44 42 39 37 34 32\\n46 45 44 42 40\\n51 48 46 44 41 39 37\\n19 18 16 15 12 11\\n39 40 42 45 46\\n76 77 78 81 82 83 86 87\\n90 89 88 85 83 82 81 79\\n72 74 76 78 79 80\\n65 66 67 68 70 72\\n49 51 54 56 59 62 63\\n37 35 32 30 28 25 24 22\\n90 87 86 84 82\\n61 64 65 67 68 71 74 77\\n1 3 4 7 10\\n61 60 59 58 57 55 54 52\\n6 8 9 11 13 14 17 19\\n56 57 58 59 61 63\\n58 60 63 66 67\\n22 20 17 16 15 14 13 10\\n66 63 62 60 57 56 55 53\\n61 64 67 70 71 74 77\\n88 86 84 82 80 78 77 75\\n6 9 11 14 16\\n75 76 79 82 83 85 86\\n78 79 80 81 84 85\\n14 11 8 5 2 1\\n24 27 30 31 32 35\\n85 84 83 80 77\\n68 71 74 76 79 81 82 85\\n21 19 17 16 14 11 9\\n93 92 90 87 85\\n80 78 76 75 72 69\\n84 87 88 90 93 94 97\\n54 53 50 49 48 45\\n41 42 44 45 47\\n24 26 29 32 35 38 39 41\\n54 52 49 47 44 42 41 40\\n39 42 43 44 45 48 50\\n82 81 79 76 73 71\\n70 67 65 64 63 61\\n57 56 53 51 49 46\\n74 76 79 81 83 85 87 90\\n56 59 61 64 67 70 71\\n31 29 28 27 24 23\\n59 57 55 52 50\\n82 85 88 91 94 95 97\\n60 58 55 53 51\\n57 58 60 63 65 68\\n41 44 46 48 50 51 53\\n44 46 47 50 53\\n33 34 36 38 41 42 44\\n18 20 22 23 26 28 29\\n51 48 47 45 44 42\\n23 21 19 17 14 12\\n58 56 53 52 49 47 46 44\\n98 96 95 94 91\\n80 78 76 75 73\\n58 61 63 64 66\\n83 85 87 88 89\\n23 21 19 17 15 14 12 9\\n60 62 63 64 65 68\\n42 41 38 37 36 33\\n93 92 90 88 87 86 84 82\\n31 32 34 36 39 42\\n8 10 12 13 16 17 18 19\\n14 17 18 20 23 24\\n8 11 13 14 17 18 21\\n69 68 66 63 61 58 55\\n90 87 85 82 80 79\\n38 35 32 30 28\\n18 20 23 26 28 29 30\\n17 16 13 10 8 7 5\\n83 82 80 77 75 72 69 66\\n87 88 89 92 94\\n69 71 72 74 76 78 81 82\\n49 46 43 40 37 34 33\\n30 28 26 24 23 20\\n44 43 40 39 37 34 33 31\\n21 23 26 29 32 33 34 36\\n61 59 58 56 54 52 50 48\\n53 50 49 48 45 42\\n63 66 68 71 73 76\\n57 55 53 50 49\\n54 57 60 62 65\\n21 22 25 27 29 30\\n12 14 15 18 20 21 22 23\\n68 71 73 74 76 77 80\\n15 13 12 9 6 5 2\\n35 37 40 41 42 45 46\\n56 55 53 52 50\\n38 39 42 43 44\\n48 46 45 43 42\\n95 92 91 88 86 84 83 80\\n48 51 52 55 58\\n40 42 44 46 49 51\"","export default \"xmul(2,4)%&mul[3,7]!@^do_not_mul(5,5)+mul(32,64]then(mul(11,8)mul(8,5))\"","export default \"xmul(2,4)&mul[3,7]!^don't()_mul(5,5)+mul(32,64](mul(11,8)undo()?mul(8,5))\"","export default \"?% mul(948,148)why() %how(670,744)mul(590,32);where())#}from()>how()mul(611,372)}{~^?>from()^mul(835,665)who()]#^don't()select()select())mul(724,851)[>&mul(188,482)$mul(781,111)[who()<why(),!]mul(678,13)why()$#%who()mul(620,771)<!^}@^+what()mul(281,719)(]'what()where()>&from():!mul(147,678)how(){mul(938,510)where()!$?*['mul(103,563)where())mul(4,125)$*>>^mul(126,929)]& %~mul(161,418)who()>>do()]-''?mul(416,366)~?/where()]who()mul(459,47))>what(){@[(mul(219,400)+do()when()from():who()when()]&{{%mul(804,830)-select()what()*what()%}mul(861,992)who()!',mul(159,874)#<)''<mul(460,777)?mul(909,244)how()+what()]<do()?}mul(749,87)from()(who();why()mul(430,124)/$>how()@$%mul(214,139)&how()>mul(112,835)select()*from()@why()?[{mul(209,568)/; ~)mul(630,749):mul(841,589)/;who()>[mul(778,567)+when() how()<#mul(544,851)what(){+mul(327,103)from()what()/[~-mul(995,415)/when()-mul(880,153)}:}mul(368,920)'how()mul(864,419)from()what()@mul(208,291)who()<?}?what()',[{mul(575,454)*&(<{how()[mul(557,489){{why(){how()@who()~mul(423,703)mul(910,916)+what()^/<-*from()'mul(746,826),-*)/+>}^from()mul(154,571)++:>,mul(601,458)why()<;how()~from(172,16)mul(333,315)?[mul(513,260) {*mul(117,759)%]mul(77,644){($%>]&~mul(238,306)~select()from();-'who()'mul(460,352); ?select()>[[(from() mul(337,294)why()how()</$<where()don't()(?]{why()%}from()mul(367,653)~mul(910,873)^why()>mul(499,785)>what()[*:#where()*what()mul(765,210)*$[]mul(461,957)##)+}when()-@:mul(198,90)what()what()how()') )mul(258,966)]+(when()mul(535,417)where()!don't()@mul(939,319)?mul(751,538))! mul(758,675)~how()[how(),@>[where()when(29,965)mul(358,39){^what();/(where()how()mul(271,786)why():mul(792,761)do()$]%mul(740,232)>who(949,378)what()[(where()who(){who()#mul(595,343)%+mul(194,296)'mul(161,747): '{where(12,567),@mul(234,39)!+do()/who()[where()&'what()when()how())mul(138,925)),#;where()>{mul(738,864){mul(605,662)*when()%when()+( /~&mul(633,935)when()];mul(263/}*<!where(),- ~when()mul(512,798)]}where())when()who()mul(933,447)where()}mul(33,935*mul(15,975)mul(574,550)+#^;'$from(280,157)$^what()mul(919,849)@mul(18,160))$&^]how()what() when()where()mul(88,657):/from())+:/when()@]mul(71,74)from()'*:@{>mul(127,821)^how()$$select()select()@^{:mul(867,979)&%/>{%^how()what(499,657)+do()%what()(~;-:*mul(438,941)<]?]mul(208,834when()&^;]from()when(613,710)^}+$mul(809,573)mul^)*:from(379,983)mul(47,786)}when()-what()how(450,632)> where()how()mul(810,597 ;;{%(select()select()&,mul(356,249)from()/!{#&^mul(23,248)(!who()]-+,mul(873,987)]{what()<  )-{^mul(591,317)/mul(382,188)mul(476,338)*why()$]mul(865,625)who()})?select():*@[)don't()/ ,mul(737,418)select(318,357);+ what()<mul(41,445)mul(236,630)$}from()]$^$,(do()-select()mul(369,197)from()]#};^mul(561,752)+&#+}?}:mul(18,235)<'& ,(*mul(645,811)why()select()who()[>where()don't()%#>!>/@what()[mul(490,823)&^( ,'@ [do()@mul(855,491)*^why()[,mul(348,679)how()$who() '&how(16,459)/!;mul(43,422)#^from()![}select()mul(976,749)-}select()-where()select()mul(223,589)%[why()mul(868,881)mul(178,790)$,{who()from()#,mul(318,399):where()?[mul(182,864)where() mul(156,690) -]mul(857,353)#'%,},>?+@mul(914,528)where()$mul(785,748)<$who()[mul(453,859)%'@ mul(84,729)/{do()(?$<}mul(820,286)?:*?}#when()(%mul(245,958when()?from(),+mul(128,335)mul(463,102);:]@-~-%mul(914,398)\\n+mul(720,985)how(340,568)^!what()[),[mul(734,270)~')?who()]]mul(964,739)from()?who()$when() /mul(566,142)}*,?how()~mul(733,766)when()mul(319,914)when()mul(808,141)*@:&who();mul(736,736)where(){&!$when()]^mul(612,574)how()mul~]what()!!'[:mul(805,568),<^+~ #)&who()mul(810,729),[~/^<&mul(706,233)!-'{why(),(?&mul(28,746)%mul(127,170)-?} #don't()from(),[@,mul(282,734)mul(332,651)[:~mul(771,888)#who()^select(110,751)>who(){mul(655,334)why()+~&}mul(129,762)mul(597,498))*~-}who()who()~'$mul(235,859)where()^-,,@mul(661,707)[ ~,<-mul(502,445)?why(){why()from()-how()*>&mul(237,280)how()mul(669,512)#$< mul(426,417)[what()why()~select()*%,'where()mul(213,617)##>mul(148-how()&]mul(437,581)who()'<from()>%[:how()mul(985,24);mul(446,704)who(),mul(549#}%>[mul(58,502)%mul(55,502)~<where()''who()}<mul(678,579)mul(457,825)+how()from()'(*#+$$mul(266,507)mul(925,485)^why()mul(605,592)[}<>^<mul(173,922)@:<where()/-]'mul(110,899%select()why()why()>[%%;mul(63,642)>how())<*{mul(155,625)]mul(238,47)where()&@mul(630,112)who() mul(570,946)mul(299,320){({mul(307,251)%[]$%mul(621,739)^!}{^-+what())mul(350,650)!>who()what()]^,*mul(154,394)&?^mul(410,870)[-select()why()<who():+%don't()where()$]/when() how()when()mul(708from()]&?mul(589,972)*mul(167,814)[mul(807?%don't()])?'(who()mul(614,926)mul(404,930)'?+;mul(252how()^who(529,21)'who()%mul(675,37)mul(362*what(640,926)select()'?what(){'>mul(744,141)why():))from()^select()what()mul(991,854){-]+mul(64,859))~>>%>%select()#-mul(282,835)'select()'%<$!from(299,765)don't()-'mul(352,659),mul(366,409),when()mul(672,590)#@#}/(##  mul(550,937)$#/^~mul(458,447)mul#(,/<mul(538,275)}where()'?'!-)mul<^>(how(),mul(465,230)^select()$<from(595,221):mul(704,141)what()]when()^select()^)^%'mul(260,350)>how()what()#@};(from()~mul(716,318)from()+]<!?mul(625,41)#[,~ /mul(19}mul(760,4)@how()mul(508,977)@select())][[mul(261,452 $mul(11,905)how(731,838)[mul(823,988)?!?@&&'mul(929,818)(>mul(701,784)!;>do()'&)when()select()mul(945,704)mul(250,874)who()]@don't()why(51,895)-,how()*+{why()%/mul(964,293)&<^where()<select();&mul(900,32)]where()$from()&#from()who()({mul(755,539)mul(26,466)how()$when()%&$~)mul(926,673)$what()!select(),do()~select()#^mul(272,306)~%'mul(22,647)$mul(904,943)^>-from()mul(635,212)when()how()[mul(314,335)%(-  + ~mul(635,915)~[[do(){where(307,78)(who()(why()where();mul(450from()mul(903,662)>$mul(924,200),why()select()$mul(418,533)where()[where()mul(266,643):~^/#(:[from()mul(81,715),who()@:~+who()'%mul(79?who()select();# mul(436,105)#*why() #~[,where()'mulwho()[(~)[mul(119,92)]where(),select()why()?mul(639,691):+<why()why()mul(815,366)*where()-what()/?>mul(188,19)who()(select()what()mul(916,808));~mul(630,228)-)where()[~mul(586/[how()+~!>}>[how()mul(106,235)do()>why(416,339):mul(788,357)[when(442,691)what()how()where()$from()who()mul(471,832)]/*mul(837,328)<)>!mul(389,633)'from(),mul(70when()!from()select()$](when()*%mul(903,43)where(62,223)^from();@()mul(852,198)-when()?mulhow(168,455)(select()how();from()/mul(918,330)what()'how(215,263)$:{~how()*mul(136,552)from(363,441)-when()how()what()-+mul(229,899)!where()when()from(){mul(47,875)~mul(500,586)/&&where(),where()mul(571,252))%}^~when()mul(979,493)do()@!+~>^mul(568,461)]where()$who(){from();mul(743,403)@?[mul(117,954))/mul(382,589)<:what() mul(578,730)#/<,when()#)select()}mul(889,462){how(562,136)select()when()^>mul(150,815)/$from()?what()mul(842,604)**?'-^>;~'mul(622,493)\\nmul(901,810)[<,^$do()<#why()<why()},,select()mul(257,221)mul(393,412)-from()&$]mul(198,284)/>;/why()mul(296,969)@mul(224,163)#<$what():,what()mul(995,485)$~)who()mul(382,831)'&~mul(146,234)mul(228,532)mul(944,430)!!who()<;'$(%do()%'{mul(588,828)~$why():where()mul(753(select()/':~$[mul(785,897)/<(#$)@mul(821,858)$what()+@/*mul(545,209)where();what()mul-why()>mul(808,588),where()];;}mul(431,815)<<;how()?@why()(^don't()select()$)!mul(832,43)what()[where()mul(935,377)from()++where()$-]@mul(793,489)*&mul(910,985)mul(340,122);from(87,683)[[]]'mul(659>from()['from()~,;@:^mul(420,510)/mul{from()$ >! -mul(508,275)!()@+{!mul(134,503)how()?mul(717,994)@}what()}[@<do()~'[??from() #&}mul(443,258)){do()^mul(894,293),@from()mul(470,736)/select()where()from()how()mul(769,763)/-'mul(436,853)from()mul(955,870);#why()how()how()mul(807,205)#do()select()<@$when()*select()>mul(899,477)who(88,557){[?-mul[how()>>@mul(113,239)&;?what(825,719)from()}@mul(717,829)when()who()%@what()when()#':mul(644,495)]^$ >[~don't()!#mul(175,323)><$>do()[[$what()/>(#~mul(976,792))what()#{how()-$?mul(534,805))what()@mul(600from()'from()mul(859,367)from()mul(852,796)?{[]/'~mul(624,853($:;^mul(522,963)+mul(143,246)[,what()#*when()',why()mul(435,720)mul(812,909)'<? /;when()}*how()do()mul(49,504)how()when()/!mul(799,134)$mul(213,950)from(182,488)];]do()mul(325,689)(@mul(485,128)who()mul(376~when()(%-what()(mul(776,635)#: from(788,757)}mul(997,619)-from(919,426)where()where()how() mul(370,735)*what(),*%$mul(408,722)}#mul(990,90)(<where()*don't()*@:(;what()%:*#mul(804,562)mul(162,269)]mul mul(267,461)%#{(};^~[mul(124,671) ~-<$<from()<from()mul(401,89)>&!!who()how()/,who()>mul(179,82))]don't()@(}<who()where()%<from()]mul(950,333) }&mul(420,707)mul(293,223)what()(/mul(131,775)>@<mul(498,349)mul(416,808)*how(676,683)select()&@mul(100,528)'&from()/[<,%>!mul(224,804'}-mul(180,723)#+@mul(144,160 +#<]where()+!from()select()(mul(614,183)mul(123,655)*+##mul(744,352):#$when()~&,what(625,950)select()'mul(468,293)*]+#mul/$why()where(623,670)%@;mul(722,469)&(%;do()) from()mul(557,124)/}:mul(928,793>]how(){?who()'<mul(74,894)%mul(312,960)'(,]%^mul(560,307<where();when()}how()%>[mul(624,959)&mul(765,13):who()<),who()& mul(639,802)&;(@:why(988,378):mul(677,987)~@-! ;!^do()mul(29,935)mul(134,862)when()+{what()when()who()}~why()mul(541,335)who()@[<mul(342what()select()who();mul(833,47)when()%@}${why()mul(891,370)(@*@[^mul(652,523)}why()&-(?'*mul(906,962) )mul(691,622)~(!<--when(506,845)</$mul(603,406)'how(83,339)mul(44,583)<:-^/why()mul(812,857$what()<-:$]what()?mul(226,418)!>'+why();when()&mul(127,948)$mul(485,474))?$mul(278,206)select()mul(641,623){} @{*where()'?mul}>mul(792,193) [#;*%->~what()mul(876,897)/@+'mul(341,837)^)why()?;@+^^~mul(718,922)[why()when()/,{}select()who())mul(941,117)/}/who()why(293,857))mul(414,482)what()! how()who()mul(910,766)!]what(),how()*mul(6,611)~;{who()who()[--mul(720,952)why(546,471)!)from()/?mul(971,461)}&/$@'mul(452,187)#who():(mul(44,298)mul(530,770)']:who()&$from()mul(544,752)mul(375,827))&@select()^;who()where()how()mulselect()^%^,/&mul(204,187)when()&,}$(who();mul(60,317)+who()$from()(how(942,734);@mul(239,338)!?:%)}@select()(mul(284,525)select()what()where()@^#~[mul(718,185)&!*{';when()@when()mul(272,161)how()%how()?mul(66,988)@)@,::>)mul(930,190)why(),~when()%<@&where(),mul(143,136)why()-,/*-what()+mul(73,408)~ who()%*select()'+where()#!/usr/bin/perlmul(379,680)\\n;@mul(257,25)[!mul(646,635)>?who()who()from()mul(25,275(select()+why()%mul(102,254)%}/where()$mul(608,18)when()*#mul(343,951) mul(337,866)*^?#@why(805,831)-mulwhen()from()mul(854,5)when()@$why()mul(896,11)^mul(451,271)'how()?who()?)<%[}don't()who()/[{]-?from()when()?mul(198,238)])mul(750,760)+/-!what()~?#mul(880,271)%?select();where()(<^select()mul(373@from()where(),mul(700,15),mul(406,120)mul(551,206)mul(636,315);+{mul(261,201)mul,:-/&mul(267,217)/,'mul(132,410)@@;;who()when()]do()why()mul(4,121)#from()/mul(242what()how(277,558)<how()from()+:who()from()what()when()mul(27,714)who()why()what()mul(676,758)+^@*'}mul(274,109)-}]),select()*when()]why()mul(60,516)when()when(708,630)%%where():mul(34,59)from()#]how()+who()%who()*don't()select()&~(;where()/mul(548,869)&mul(439,68)]@}%)~&mul(46,712)when()+[&]where(),+mul(940,261)^who()where()mul(655,165) >'how()how(){mul(12,537)&[>}mul(322,676)[#,do()@,mul(248,663),when()-do()^what()]when()who()what()how())mul(864,73)how()?]*mul(653,55)when()from()from()how()@ }mul(94,590)]~what()mul(164,505)]from()when()]mul(218,565)(from() why()[*when()}[mul(306,447)*]][> #mul(783,715?)+^~mul(308,994):<*~)>from()why()*mul(508,139)>from()@;+~#mul(652,903)#[/?mul(407,208]how(){when(),**@*:/mul(849,965)mul(69,198<'#%[?mul(236,808)what()from()%from()why()^/,don't()select()&where()@mul(888,101) mul(332,775)who()):select()),:-mul(119,209)%how()mulfrom()select()don't(){mul(838,613)why() '({*<!mul(372,376)mul(407,117$who()[ mul(171,741)where();mul(742,142)mul(34#^+:who()mul(157,514)>~>*mul(466,106)mul(883,754->(%%who()[!mul(587,792)'((!?select()&}<mul(791,734){how()&;+<(mul(655,63):why(){!{)mul(320,950)->-'#)why()#[mul(234,162),what(497,671)why()#mul(985,797)>}~;from()select()mul(117,492)&~+from()]%>*$&mul(451,669))}'/@how()?where()why(694,295)'mul(676,756){~;select()what()}what()^}mul(963,857);%/how()?mul(944,194);select()<&^how(){->mul(195,702))?select()why()&~%}why()#mul(90,304)@%why(673,634)*/where()- <:do(){}!mul;who()]where()]-@?<mul(919,817),>when()how()how()>mul(875,604)select()%do()%mul(790,136)*$,mul(853,95)[how()>!%?mul(246,573)&!what()/#from()!mul(382,307),!#[-mul(32,733)$+[*mul(192,47)(@who()mul(304,303)@mul(167,528):select())!:how(){what()(}mul(933,177))#>$#,$:mul(81,603)<mul(40,227)mul(717,937)mul(853,848)mul(66,164)where())^<>what()?how()when()mul(206,607)<where()[$)}when()how()select()*mul(265,447)*/what())%+'[ from()mul(358,747)what()+%how()#from():,what()@mul(791,401)~where()[mul(990,778)?~[!:>!'^mul(666,852)mul(651,206)!+]}from()don't():*]#what()mul(359*%who()^)'mul(190,764)who()when()}select()~(~mul(547,102)mul(406,618)%when()>)<mul(822,907)?/[/from()mul(945,506)>![#mul(890,746)#who()$'~%]',+mul(341,395)who()--mul(285,533)}how()@<}!mul(715}>+~ select()where()$ (mul(894,62)?]}who()&when(652,875)%:}from(24,82)mul(713,250))-^{*%mul(548,903)&]]<]why(){from()when() mul(796,100)-(how()$%~mul(589,969)  :who()  @mul(271,734)<}mul(761,8)}@['- ['$mul(178,28)who()who(282,161)@$from()mul(413,253)#when()?(mul(585,394))select():$?#?>who()?mul(245,344)who()^who()where()why()~@why()don't()why()how()who(450,27)who()(!mul(951,644):select()-)%?*don't(), mul(189,841)]* why()*>'mul(758,690)what()<select()~>@>mul(728,932)how()?select()what()}mul(716,985){where()who()+who():mul(840,772)%how()>:;where()mul(139,830)$select()),mul(730,4)when(305,277);[$!,)mul(278,740)who(856,922)who()#<where()*>mul(212,541)((]mul(689,475)mul(814,611)'}&~{~~mul(716,817)who()mul(21,315))don't())(why()')$<mul(541,349)\\n$)mul(257,544)+where()how()-[how()^+ mul(986,808){[<why()%!;mul(940,137)who()-+(from()**^mul{>)who()how()?%why()}!<mul(908,379)select(811,438)mul(15,196)from(623,826)-from()+!mul(38,667){>{<{mul(41,189)-<how()*%when()}what(539,203)]mul(813,528)who())why()( ]how()why()how(){mul(299,367)]{[(@^mul(131,889)?:&who())when()'why()$&mul(728,552)^}when()@~mul(842,113)from()),?{!mul(811,809)*how(15,189)#>&+from(544,351)~&mul(516,38)]?;-@?don't()@}*mul(792,426when();#~ >%why()(/$mul(755,392)*(#]where()@select(),^select()mul(630]>*who(267,517)why()-;(mul(176,492)select()from()}~:who()mul(761,226)&,((mul(750,451)@/%select()from()mul(345,75)what()/who(); ~mul(431<)&mul(693,289)?~/mul(693,335)'mul(475,545){(*+~ mul(668,535)how()don't()?,<@mul(980,251)*why()$when()*-)mul(886,969):?/':]}-who()(mul(686,683)#}+($why()mul*^*$){&-(mul(94,775)- @when()?%]{when()mul(376,100)''/,&]^<mul(853,752)when()%who(),[^@where()!do()who()when()how()when(474,246)mul(318,180)do()%~(mul(216,96) ;}]why(907,964)$+when(680,212)?mul(442,979)why()what();##select()%mul(34,342)mul(641,907)@]who()@^:^mul(648,605)how()<}]when()!mul(567,219)?where()$what()~+from(),%how()mul(549,85)$-&(mul(94,269)~how(811,581)who(596,80)-how()~mul(510,591)mul(586,482)who()?#-<[[select()*}mul(249]{%<,where()*~^mul(628,294)]+what())why()mul(312,879&,?+don't()mul(100,514)when()select()mul(621,918)@select(813,295)/{^'%+mul(239,859) ']<*)mul(868,763)where()[/when()@)#{^mul(209,999)how()do()*#}},},&>mul(70/:from(184,559)>mul(679,138))<mul(454,112)[@)-?*where()mul(573,473)[(-/mul(867,232)~]/^/!'&where()mul(391,655)[%'mul(73,32)/{->)(~mul(929,872)'%#)mul(563,750)>(mul(324,725)what()why()[@$mul(186,770)?mul(719,251)[mul(270,934)+>when()'$when()mul(647,486)how()from(947,190),!(?mul(113,517) %[select()what()^)!mul(299,591)]:@' *where(145,530)/mulwhen()mul(811,260)mul(80,605)  where(296,197))])>from()mul(324,361)select(){[/';/},mul(648,947&how(){who()/'-%*]mul(949,359){mul(288,162)&];&:^mul(188,899)select()where()]%mul(248,30)#[&+'why()'') don't()][}& mul(808,221)what()@>><;>*mul{;>what()what()+mul(646,752)select()<from()why(211,37)~~~:mul(196,842)}where(690,849)where()[$select(571,536)how()from()<mul(6,129)what()what()?]]how()mul(116,23)who(205,335)>)'where()!mul(748,585)>?<##mul(381,399)mul(597,746)) *mul(881,573)/:({why()'mul(527,57)@/what()?mul(395,551)%who()when()%'mul(713,766)[<mul(749,438)'(}^when();{mul(43,565)what()% #mul(653,209)what():!-mul(64,870)#from()select()from()mul(206,327)?(mul(678,256)^{mul(311,65)who()when()<(when()mul(552,622)*how()%?~;:;;)mul(767,192)--&$mul(512,806)['?')who()mul/({what()&/#'!mul(811,828)]select()~@!/(}$)mul(683,153)&}&~how()from()mul(815,380),?$*+mul(133,342)mul(867,908)!;&why()?(+!mul(915,100))when(895,91)&select()!({where(758,740)mul(759,261)-from()&])mul(365,436)from()&' &^mul(541,400)~from()-what()!mul(679,638)mul(107^#,%~#>[)*select()mul(313,218))when()when()mul(360,494<-select():::- [/mul(517,923)*from(),from()how()+]mul(870,559)}{*?do()>~mul(704,518)where()!)select()?from()where()&'do();mul(270,449)~[*mul(774,600)how():>why()[!when()mul(338,711){]mul(962,193)*where()#![-+mul(511,924):[who()why()}mul(252,534when())when()when()()'!why(230,750)-mul(543,358)~~ -mul(394,506){mul(176,192)who()from()%@mul(181,776)%[ don't()when()where(229,174)+}@who()where()]>mul(553,452)@{/mul(790,202)&&-]mul(783,999)'mul(123,410)<,#what()}how()when()from()$~mul(674,974)why()#>do()'[$]}when()mul(907,824)from()select(){what()mul(584,273)#<>>do()mul(767,778)how()how()from()[#<$from()how()>mul(133,565):mul(888,792)\\nwho()where()don't()]mul(891,277)~mul(160,638)('don't()/@/%{mul(462,975)!^:+mul(317,407){who()/from()/mul(424,628) when()select()mul(415,352)!?[where(){?how()/mul(661^, -mul(141,973)(/where()!#who()(what()#$mul(916,889)when()$ )mul(945,846)why()+#where()@how()mul(147,694)%select()mul(414,149)< when(){)what()&[how()mul(903,731)~#mul(389,694)mul(72,447)mul(490,881)?++from()>+ ^(mul(703,722)mul(622,578)from() }@^)+mul(642,732)>from()where()@>${who()mul(526,211$why()[why()mul(349,908)who(635,389)from()what()*$*>@mul(180,150)//: ^mul(622,131);[-^~-mul(32,430)mul(306,173)~where()how() (mul(292,552)<mul(422,363)^<<!#when(304,583)who()mul(348,963)': #select(875,567)#>'where()!do() why()~] who()@^mul(20,119)?[$+/$^mul(242,536)who()'-&'from()mul(351,640){,]~mul(152,587)@select(140,751)<+mul(387,212)[where()%when())how()& >mul(916,539)~]?[when()>!when()??mul(322,151)!]!]~!;mul(27,537); ##;^}}mul(538,277)why()mul(205,526)mul(412,826)^@?where()'mul(957from(193,394)from(863,680)!@how()mul(771,563)( who()mul(377,655) ]select();who()mul(360,272)-select()$what(){mul(291,618)})from()^when(),how()where()don't()why()+&mul(462,803)^$,mul(788,584)@ %?:![:mul(439,528)mul(129,761)]!~mul(321,102)mul(41,728){&what()how()mul(93,933))[ where()^*@+mul(553,965select() '&{-mul(712,817)/<why()[:>/&mul(482,328)when()'mul(957,978)-}{[>{@what()who()mul(48,186)?]how()$what()&,)mul(33,872)#mul(125,207):;mul(143,386)how(),select()don't()}#when()%]&^@?^mul(107,59)&%?don't()mul(183,332):{}/[(#%-+mul(766,627)from()who() what()-+$^mul(41,791)who()] ;-#select()~mul(939,288)[:(</{$how()%select()mul(624,973) ]%mul(780,706)why(677,630);don't()+mul(3,844)$)$$where(),!why()[:mul(506,60)( <>@what()who()?mul(210,210)?select()why()select()where()-how()^mul(755,497)+?^(mul(860,478)^}+$from()(mul(565,649)}mul(184,450) ;/+%[why()mul(752,488)$how()mul(349,56)#'%,+mul(571,637)(mul(186,674)?how() </~@:%mul(295,276)'~where()-&%!mul(72,565);mul(140,645)%#-#*mul(258,568)!/select()why():&}from()from()don't()mul(458,777)#>,'^#!mul(577,819)mul(767,490)how()@when(359,565)mul(97,67)when()?where()>,'(-mul(267,998)%where()why()where():mul(593,317)<mul(514,327)how()~$[{mul(942,232)how()(who() 'from())mul(752,235)?/!'/*#mul(291,995){who()%!,%mul(873,542)%mul(543,144)from())'select()mul(317,658)+mul(819,545)<&what()who()$#who()how()$*mul(849,792)<;-mul(401,327)select()^}?mul(184,612))(where()what()[where()where()@}'mul(532,791)how()how()from()$*~:mul(963,569)when()%- :}why()^~$mul(520,245))^):{do()!mul(900,510)$ %who(615,822)mul(374,872)''/ mul(808,426)select()mul(268,752)&why(),</%!:!/don't()who(){when()*(where()mul(403,172)^mul(185,447)}mul(233,330)why()/&&%who()#/^mul(705,506)?%from();mul(494,15)['}]-}mul(45,474)who()@who()@why()don't()mul(174,355)?what(),@*$+#&mul(9,768);:^mul(381,691)when()&$/]?what(564,603)^how()mul(468,953)[@when()}mul(702,659) where()?where(){**mul(535,116)~where()$('}^~from()mul(926,18)&who()$when()where()>from(),mul(541,30)/why()${[from()who()  mul(732,465)[<!{mul(794,385)mul(676,776)who()]/mul(45,904)<~+who()@-!)&where()mul(49,63))mul(710,576)+mul(279,872)&<{what()-how(),&how()~\"","export default \"MMMSXXMASM\\nMSAMXMSMSA\\nAMXSXMAAMM\\nMSAMASMSMX\\nXMASAMXAMM\\nXXAMMXXAMA\\nSMSMSASXSS\\nSAXAMASAAA\\nMAMMMXMMMM\\nMXMXAXMASX\"","export default \"XSXMAAXXSSMMMXMXSXMSXMXSAMXSXMASMMSSMMSASXSAAXAAMXMMAMAMXMXSMXSAMXAXSAMXSSSXMASAMXAAMXSXMASAMXXMAXXSAXAMXMMSAASMXMXMASMMAMXXXSAMMSMMSXMASXAA\\nXXAMMSMMXMAMAASXSAMAMSAMASASMSASAAAAAXSASAMMMXSMXSAMSSMMASMSAAXXSXAMSAMXMMXMSAMXXXMSMAMMAMXMSSMMMSSMMSASMSXAMMMAASMASAMXSSXSASMSXMAMSASXMMSS\\nSSSMAAXAAXAMMXSASXMAMMASAMXSAMAXMMSMMMMAMXMAXXAAASAMAAMSMSAMMMSMXMSAXASXSAAMMXSAMXMAMMSMXMAMAAMXAXAAASXMAMXMXAMSAMAXMASAXAXMAMXXAMMMMAMASAMX\\nXAAMSSSSMSSXSAMAMAMXMSXMASAXMMAMXMXMMAMAMXSAMSMMMSXMMSMAAMXMMXSAAAMSSXMAMSMSAAXAXASMSAMMAXMMSSMMMSMMMXAMSMAXSXMMAMXXXXXMMMMMSMMSXMASXSSMMSXM\\nMSMMAXXAAXAAMXMASAMXASXSXMASXSXMASXAXMAXXXMMMMAAAXAMXMMMSMAMXAXXMSXAMXMXMAMMMMSMSMSXMAMSSSXAXAMAASAMSSMMASXMAMXSAMXSMSMXAXAAAAXXAXAMAMXXXMXX\\nXMASMMSMMMMMMAXAXMSMMSAMXAMXXASMAMMMMSSSMSSMASXMMSSMAMAMAXAXMSSXMXMMMXMAMMSSSXMAAAXXSMMSAMMXSMMMMXAMXAXSMXXXXAMXAMAMAAASXSMMSSMMMMAMSXAMAMMX\\nSSMMMAMXAAAAXMMMSMXAXMAMXSXMAMAMASAMXXAAAAAMXSAAXAAMMSMMMSSSMAAXSAXMAXXASXAAMAMSMMSXMAMMAMXXMXAXMSSMSSMMASMSMSSSXMAMSMXAMAXAXAAASXSAXMASASAM\\nMAASMSMSSSSSMSAAAXMAMMXMAXAMXXMSASASMMSMMSSMASXMMSSMAXMSMAAAMMSMSASMAXSMMMMSMAMXAASMSAMSSMMXMASMXAAXAXXSMSAAAXAAASAMMXMASAMXSXSMSAMMMAXAMSMS\\nSSMMAAAAAXXAASMSMMMSMSSMMXAMAMXXXSMMXAAXMMAXAMMSMAAMSSMAMXSMMMXMXAMMMXSXAAXAMAXSMMXAXSXXXAXASAXMMSSMMSMAXMXMMMMSXMASMXSAMASMSAMXMXMMASMMASMM\\nAAAMXMASMMMMMMAAXAAXAAXAMSMMASMMMMASMSSSSSSMXSAAMASAAMXASMAMXSASMSMXXAMMSMSAMXXSXSMSMMMSSSMXSAMXAAAAAXAMXMAXSAMXXSAMMAMXSSMAXMASMSXSMXAXAMAS\\nSSMMXSXMASXAAMSMMMSSMMMXMAAXMSXAAAMXAXAAMAAAXMXMSXMMXMMMMAAMASASAXMSMASMMAXMSMMMAMAXAAXMAMMAMXMMMSMSMMMXASXMSASAMXASMMMAMXMXMSMSXSASAXXMXXAM\\nMMMMAMASXMASXXASXAAXAASASMSMASAXMXXSMMMXMSMMMASXSXSAMXASXSSSMMMMAMAMMAMMMSMAAAXMAMASXMSMSMMASAMMMXMMASXSXSMASXMAXSXMAAXAAMSSMMAXAMAMSXXASMSS\\nMAAMASAMAMMMMSASMMMSSMXASAAMSMMSMSAMMAXXMXXASAMAMAXAMSAMAAAXXAMMMMXMMMSXAMMSSSMXXSAMAASAAXSAMAMSASASAMXAAMMAMAMXMSSSMMXMXAAAAMMMMMXMASMAMAMA\\nSSMSXMASASAAXMAMXAMMXAMSMXMXMAAAAMXMMASMMMSMSAMAMXMXMMAMMMMSSMMAASASAASMMSAAAAXAMMMSMMMSMMMAMSMMASXMASXMMMMXSXSXAMASAMASXMSSMMSAXASMAXMAMAMX\\nMMMXXMASASMMSMMMSMSAMXMMAMXASMMMXMAXXXSASAAXSXMXASMMXXXMSAMXAMMXMSAMMSMAXMMMMMMMSAMAMXXAXXMXMXAMXMASMMAXSAMXMAXAMMAMXMAXAAAXAXMAMMXAMXMXSXXS\\nMAXMAMXMXXASXAXAMMMAMMMMAMMMSXAMAXSSSMSAMSSMMSXMXAAMSSMXSASXMMSXMMMMXXMSMMASAXAASXMAXSAMXSSMMSAMXSXSASAMXASMMAMAXMXMMMMSMMMMMMXAMXXXMSXAAMXS\\nSAXSAMXAMSXMSMMSSMSAMAAXAMXAXMSXSAAAMAMXMAXAXMXAXMAMAAMMSAMXAASASAXXASXMAXAMMXMMSXAXXAXXMMMAAMMMXMAMAMAMXXMAMASMSSSMSSMAMMSAAXMMXXXAXXMMXSAX\\nMAMSAMXMXMAAAXMXAASASMSMMSMSSXMAXMMMMSMAMMMMMMSMMSAMSSMAMXMMMMMAMXSMAMASMMMMMXMXMMSMMMSMASMSMSSSMMAMAMAMMMXSSMSAAAAXAASMXAMSSMAMSAMXMMMSAMMS\\nXMMSAMXMASXSMSMXMMMAXAMAAAAMMAMXMXSXXASMMMASAMAAXMAXMAMMSMSMSSMAMAMMSMMMMXXAXAXAAAAAAAAXXAAMAMAAASASASASXXAMAMMMMMMMSMMMMMXAMMXMAMAAAAAAAMXS\\nAMXXMAXXAMMAXAMASMMSMAMMSMSMSAMMMASMXMASXSASASMSMMSAMMXSAAAAAMMMMSXAMMSASASMSMSMMMMMMSSSSMXMAMMMMXASMMMSMSXSAMMXXAXAXAAAAXAMXSMMXMSSSMSSSMAS\\nXXAASASMAMSSSXSAXAAXMXMXMMMASASXMASAAXAXMMASMMAMMAAASXXSXMMSMXAXAAMXMASAMASAAAMMSSMXMXMAAXSSXXXAXMXMXSAMAAASASMMSSMSSMMMMSSXAMAAXMXAAAAAAMAM\\nMMSXMAXMXMXAAXMMXMMSAMXASXSASAMMMASXSMXSAMXMAXSAMXSSMAMMSMAMASXSMXAXMXMMMMMMMMMAAAMMMAMSMMXAASXMMSAAAMAMMMMMMXAAXASAMXXXXAMMMXAMMMMXMMMXMMAS\\nAAXAMMMMMMMMXMASAXXAMXMASASAMAMAMAXMMAAAMSSMMSAMXAXMMMSAAMAMXMAAXAMMXMAMXXAAXXMMSSMASAMAMMMMAMAAASMSMSXMMSAMXSMSMMMMXSSMMMSASAAXAASMSMSAXXAM\\nMXXAMMAAAXAXXMAMMSSMMAMAMAMMMXMMMXSSXSMMASAASAMAMMSAAAMMMXMXAMXMMSSMMSMMMMSSXSAMXAMMSASXMAAXXSSMMSXXAMAMXMASXMAAMAAXMAMAAXSASXSSSXSAAASASMSS\\nXSSMMSSSXSAMMMSXMAAAMXSXMXMMAXXXXMXMAMXXXMMMMAXXSASMMSSMMASXMMAMXAAAASAXSAMAASXMSSMMSAMMSXSSMMMAMXMMSMXMAMSMAMSMSSSSSMSMMMMAMAMXMSMMMMMAXAAX\\nMMASMXXAXMASXAMXMSSSMMMAMXMAASMMSXAMAMXXSSMSMSMMMASMAXAAMAXAAASMMSSMMSAMXMMMMMAAAAAXMAMMSAAMAXMXMXMAAAXSXSMSAMXXXMAXXAAMMAMXMAMAXXMAMAMXMMMS\\nMSAMMSMSMSMMMMXAXMAXMASAMASMMSAASXMMMMSAMMASAMSAMSMMMSAMMSSMMMXAAAAAXMXMSMAXASMMSSMMSMMAMMMSXMSMSAMMMSXMSAMXXXXMSAMXMSMSXXMASAMXXMSSSMSASAMX\\nMMASXMAAAAXXAMSSMMMMSASASXSAASMMMMXAAAMAMMAMMMSXSAAAAXAMAMAMXXSMMSAMXAXMXSAMXXXAXAMMAMMSXSASXAAASMSSXMASAMSMMMMXSXXXAAAMMMMASASMSMAAAAXAMXSS\\nXMAMAMSMMMSAXMAMXXAMMAMASMSMMSAAAXSMMMSMMMXSMASMSMSMSXXMXSAMXXMXMAXMMMMMAMMSSSMSSMMSASAMSMASMSMMMAAXASMMXXAASXAAMMMSSMSMASMMSAXAAMMSMMMSMSMM\\nSMSXMMMXMSMMMMMMAMSMMSMMMAXMASMMSMXAAMAMXMASMASASAMXMAMXASASMMSAMAMXAAAMASXAAAXAAXMSAMXXAMXMAXMSMMMSMMMMMSASMMMXMAMXMAMXAXAXMMMSMMAMAAAAMAAX\\nAXXASASAMAAAXAAAAAXAAXAXMMMMXMAXXAXMMSASAMXSMMMXMAMASXAMMSMMAXSXSSSSSSSSXSMMSMMMSMXMASMSMSXSXMXMAXMAAAXXAAXMMXAMXXMXMAXMSSSMAAAMAMASXMSMSSSM\\nMMSMMASMSSSMMXMSMSXMASXMXMASASMMMMSMASASASASASXSSXMASAMMXSMSSMMAXAAAAAAAMXMAXXSXMAXMXAXAAMAMAASASXSSSMSMSSMMXMXSAMSMMASAAAMSSMMXAMAXMXMMXAAX\\nXAAAMMMAAXMAXSAAAXAMAXAXXXAMMSAAXAAMXMASXMASAMAMAMMXXAXSAMAAXAMAMMMMMMMMSAMXMASASMXXMMMMSMAMSXMAMMAMXAMAAMAXXAAMMMAAXMAXMMMXMAMSAMXSMAMMMXMM\\nMSSSMAMMMXSAAMSMMMXMASMMMMSSXMMMMSSSXMXMXSXMAMAMAXXAMSMMASMMSSMXMAAAAAAXSMXMSXSAMXSXMXAAAMXMMAMSMSSSMXMMMSSMAMMSXSSSMMSXXXAMMAMMMMXAMASAXMXM\\nXXAXXASMSXMXSMXXXAMAMSXAAMXAMXASXXMAXMMAMAMSAXMMXMMMXXASXMAXXMASXSMSMSSMMSAMXAMXMAXAMSMSSSMSSMMAAMAXMASXMAMSAMXMAMMAMAAMXMAMMASXSXSMMMSAMSAS\\nAMAMXMSXMASXMMSMXMSAMXXSXMSAMSXSASMASXAAAMXSAMSASASXMSAMXSXMXMSMAXXMXMMXAAXXMAMXMMSMMAMAAXXXASXMSMXMASXAMAMAXMAMAMSAMXSSSXMASMSAMXXAAMMMMSAS\\nXMASAMXMXMMXMASAMAXAXAMMMMMAMXAMASMAXASXSXAMMMXAXASMMMSMAAAAAMMMAMAXXSAMSMSXXAXMAXAMXAMMSMMMAMXMAXSMMXMXSSSMMSMMXMMASAMAMXAAXAMAMAMXMSASMMMM\\nASASAMMMAMXXMMMXAMMSMSXSASXSMMAMAMMSSXMAAMXSSMMMMXMAAAAMASMSMSAMMSSMAMMMMAMASMXMSSXSSMMMMMSAMMXSMSXAAMXAMMAXAASMSMSMMXMAMSMMSSSSMXSAAMXMAMXX\\nMMASAMSXMMMXMSMSSXAXAXASXMAAASMMXSAAXAMSSMAMXXAMXXXSMSXSAAAAASXSAAAMXMSAMAMAMXAXMAXXASAAAAXMMMXMXAMSMSMMSSSMSSMXAAXXXSSXMXAXAAAXMASMMMMSXMSS\\nXMXMMMMASXSXSAAAAMMSAMXMAMSMMMXSAMXSMXMXAMXMASMSMMMMAMAMXSMMMMMMMSXMXSMMSSMXSMXMMXMXAMSXMSSMASAMMAMXASAMXAAAXMXSMMMMXMAXSSSMSMSMSAMXASXMASXA\\nXSAMXSSMMAAXMMMMSAAAXXAMAMAAMXXMASXMASXSXMAAXMMAASXSAMXMXAMXAXAAXXMSMXAAAAAAMMSXSASMMMAXSAMXXMASXSSMMMAXMSMMMAAMMAAMMMSMXAMAMAXMMMXSAMAXMMSM\\nMXMXMAAAMMMMMSAMXMSSSSSSMMXXMSAMXSXMSMMXMSSSMMSSMMAMXMXMSXMSMSSSMMAAAXXMSSMMSMAAMAXXAMASMASXXSAMAAXMMSSMAMXMMMMSSSSMMAMXMXMAMMMSAAMMMSXMAAAX\\nMMMAXMSMMMSAAMASXMAMMAMXMASXMSAAAXMXMXMXMAXAMAAXAMXMAMAAMAMMXXXMMMSMMMAMXMAMAMMSMMXSXSMSXMMAMMAMMMMXASXMAMMMASXMAAAMMASASXMMSMAMXMXAAAASMSSS\\nSASMSAXMAAMMXSAMAMMSSMSAMXAAASAMXSMAMAMASMSSMMSSSMMSSSMXMAMAXXAXMXAASXMMASAMMXAXAXXMASMMASMXMXAMAAAMXSXSASASASAMMMMSSXSASAXAAMMSASMMMSMMAMAM\\nSMSAXMAMMXSAXMASXMXMAASXMASMMMXSAMMASASASAAAAXAXMAMXXAASXSMMSSMMSAMXMAASASXSXMSSMMMSAMASAMXAMSMSSXSAXMASXSXMASMMMXAMXXMASAMSMSASMMSAMXMMXMAM\\nMXSMAXSXXAMMSMAMXMAMMMMAMAMXMSAMASMMSXXAMMMMMMSMSAMSMMMAAXAXAXMAMMXSSSMMAMXAMXAAAAXMAXAMAXMXXAMXXXAMAMAMXMAMXMAAXMSSXMAXMAMMAMASAMSMMSMXXXAM\\nMAMXMSXSMAMMMXAXAMMMMXSXMAMMXMAMAMXAMXXXSASXMAXASAXXAAXMMMMMSSMXSXAXMAASAMAXMMXSMMSSMMASAMSSMAXAMMSMXMXSMMSXMXSMSXXAXMXXMAMMMMAMXMXXAMMAMSAS\\nMASAMXAMSSMMMSXXMXSASAMXMAMXXXMMSSMMASAASMMSMXSMMSSSSMSXMAAAAAAAXMASXSMMASMMXXXAMXAAXSAMAXAASMMMAAAMAMMMMAAASMMASMSMMMSMSMMAXMXMSMMMSSMMMAMX\\nSASAXMAMAMAAAXMSMAAAMXSAMXASXMMAAAASASMXMAAXMMMMAXMAMXMASXSMSSMMXSXAMAXXAMXMASAMXMMSMMASMMSMMSAXSSMSASXSMMSSMASASAAXAXAAAASMMMXXSAMAAAMSMASM\\nMASAMSMMMSSMXXAAMXSMMMMAMXXAAAMMSSMMASXMSMMMXAXMASMAMMMXMMAAXXAMASMXSAMMSSMMASMMXSMXMMMAXXMAMXXXXAASASMAXAXXMAMAMMMSMXMSMMAMSMSXXAMMSXMAAXMM\\nMAMAMSAMXAAAAMXMSMXAXXSAMXMAMMMAAAAMXMAMAAMSMSSXXXMAXXXMMXMXMMMMASAAMASAAAXMASASAMMAXAXMASXSMMSSMMMMXMASMXSASXMAMAMAXAAAMXMAAAAXSSMMMASXXMXX\\nMMSMMSAMXSMMMSAAAASXMXMASAASMSXMSSMMSSMSSSMAAMAMSXSASMMSMSMASAMXMMMMSXMMXSMMASXMAMSAMXXSMXAAXXAAMMMMAMSMMXSAMXMAXMSASMSMSAXXMXMXAMAAXMMASXXS\\nMMXMASAMXMASASMSMMSMSSSMMXSMAMAMXXMAAAMMAMXMMMAMXAMASAAAAMSAMAXMMSMMMXXAAXAMAMAXAMMMMSAXXMSMMMMSMAASAXAASAMXMASXSAMXSAMASASXSMXMASMMXAMXMXAA\\nSAMMMSAMXSAMXXAXXAXAAAASXXXAAMMMMAMMSSMMAMXMXSXMMMMAMMSMSMSSSSXSAAXAAXMXMSAMSMSMAMAAAMXMAMAAXXAXMSMSSSMSMXSAMMSXAXXXMXMASAMASMASXMMXAMXSMMAM\\nSAMXXSAMXMMSMMSMMMMMMSMMMASXMXXAXAMXXAXSXMASAMXSAXMXSAMAMXMAXAAMSMSMMSMMMSMMXAXSMMMMMXASMSMSMMXMAXAMXMXAAASASXXXMMSMMSSMMAMAMMXSMAAASXMAMAAM\\nSAMSMSAXMAXAAXXAMXSXAAAXMAMXAXSXSASXSMMSASASASAMSSXAMMSAMSMXMMMMAXXAXAAAMMAMMXMAMXAASXMSAAAAXXXMASAXAMSMMMSMMMMMXAXAAMAASXMAMMXMXMMMMASMXSMS\\nSAMXAMXMMMSMSSXXMAMMXXMMMXXMSMAAMAMAMXASAMXSXMASAMMMSASAMXAXSXSMSMSXSSMSXSAMXASAMXMMMAAMXMSMMXMAMXMMAXMAMMXAASASMSSSMSXMMMSXMSAAXXMASAMMAMAM\\nXAMXMMSSMMAMXAXSMSXSASMMSAXSAAMXMAMAMMXMAMAXMMXMMSAMMMSAMMMMMASAMXXMAAAMAXAXXMXAMSSSSMMMMMMXXMAAMAXMXMSAMSSSXSMSAMMXXSMMAXAAASMMMXSAMXMMASAA\\nXXXAXSXAASMMXSMMAMAMAXMAMMMSASMSSMXSMSASAMMXXXAXXMAXAASXMAASMAMAMAXASMMMASMMSSSSMAAAXXMXXAAAMAXAXXSMSAXXSAMXMMXMAMAXXMASMSMMMSAXSAMASMMMMSMM\\nMSAMXAMMMMAMXXAMAMXMXMMAMMMSAMXXASAAASASXSXXMSMSAAMSMMSMSASMMMSAMSSMAXXXXSXAXAAMMMMMMXSMSMXSASMSMAMMMSXMAXXMASASAMXMMSAMXXXMAXXMMASAMMAAAMAX\\nAAMMXMSSMSAMXSSMSSSXMMSMMAMMMMAMAMMMMMAXMAMAAAXMASXAMMMXXXXMXXMAAMAXMSXSAMXSMMMMXXXXMXMAAAAAMXAMAAXAAMMMMMMMMSXSXSAXMAMSXAMXSXAMSXMMSXSSSSMM\\nSSXSMXMAASMSXMXMMAXSAMAMSMSASXSMSXXXAMXMXAXMSMASAMXXXAMMSMSMSXSMMSMMXSAMXMAXASMXMXMMAAMXMMMSXMMMXMXMMSAAAMXXXXAXAMMXXMSMMMMAXMMXMXMASAMAAXXA\\nXMAMAAMMMMAMAMXSMXMXMMAXAASASAXAMXMXASMMSSMMAXXMASASMMMAAAAAXAXAAXXMAMXMAMASAMAAMAAXSASXXSAXXAXSASXAAXXSSMMAMXAAMSMSMMAXAAMXSAXMMXMAMSMMMMMS\\nMMMMSXSXMAMSAMAMMSMXMSSSMXMMMXMMMASAMXAAAAMMSMXMAMXMASMXMSMSMMMMXMASAMASASAMXMSSSMSXMAXXASXSXSASASMSMXXXMAASXAMSXAMAASASXSSSMXSAMAMMSXXMAMAX\\nXSXAXASAXAXSXMASAAMAMAXAXMAMASMXSASASXMMSSMAMMSMXMAMXMSAAXXXAMASAMXASMAXASMXAXAMXMXAMXMMAMAMAAXMAMAXXXXAMXMMAMSAASMSMMMSAXMAXASXMAXXAMXSASMX\\nAXMMSMMMMXMMXMMMMMSASMSMMMSMASAAMXSXMXSAMXMAXAAXMSSMMAXMXMASAMSMMSMAAMXSXMMASMMSAASXMASAAMAMMMMMSMMMAMXAMAXSAMMMXXAXAMMMMMSMMMSASMSMASASXAXX\\nSSMXAMAASMMSAXAXAMXXSXAXMAMMAMMMSAMASMMMSMSSMMMMMAMAMXXXSAMSSMXMSAMAMXAMAAXMAAXSXMAAXXXSXSAXXAXMAAXMAXSAMAMMMXAXMMSMMMAAAXAXAXSAMAMMMMASXMXS\\nAXMAMSSMSAAAMSSSMMSAMXSMMXXMASXAMASMMSAXSMAXMASXMASXMMMSAMXMAXAMMASMXMMSMMMXMSAMXSXMMMMMMSMXSXSSSSMMAMSXMXSASMMSAXXAASXSXSAMXMMAMXMAXMXMAMAS\\nMSSXXAMXMMMMMMMAAAMAMAMAMMMMXMMXSMMAASXMSMSMSASAMXSXAAMMMMASMMSSMXMMAMXAAAAXXXAAASMMSXMAAMMASMMXXAAMSMSASAMMSAMXMXMMMMAAXXMXAXXXMASXSAMXMMAS\\nXMAMMMSXXXAXASMMMMSXMASMSAAXSXAAAMSMMMSAXAXAMMSAXMMXSXXAXSMXAAAAMAAXAMXSSMSMASXMAMAAMASAMSMASAXMMSMMMASAMXXMMMMMMMMSSMMMMSSSMMAMSMSAXAAXXMAS\\nXMAMAAMMMSSSMMAMAMXMMXSASMMSAMMSSMXAAXMSMXMASMXMXASMMMSMXASMMMSSSSSMMXMAMAAMMMMSSSMMSMMASXMAXMMMXAAAMMMAMAMSMSAXXXAASAMXAXAAMSMMAXMXMSMSAMXM\\nXSASMXSAXAAMASMMASAMXAMXMASXMXAXAXSMMSAMXXSMMMAMSMSAAAAXSAMSAXAMAAXAAMMAMSMXAAAMXAXMAMXXXXMXSSSMASMMSXXAMAXAASXSMMMSSMMSSMMMMAAXXMMMMAAXXMSM\\nMSASAXSXMMSMAAASMMASMXMAXXXAXMMMMMXAXXMXSXMMASAXXASXMMSMMAMSXMASMMSMMMMXMASAXMSSSMMSASMMMMMSXAAXAXAAAXXSSSSMXMXSAAMAMAAMASAXSASMSAMASMSMSMAS\\nMMMMMXMXMXXMMSMMMMAMMASMSAMXMMSASASMSASAMXXSASMSMMMSMAXAXAMXMXXMXXXXXSAMXMXSAAMAXXMSASAAAASAMSMMMSMMMSXAAMMXAMMMSSMMSMMMSMXXMXMAMASAMXAAXSAS\\nMAMAMASASMXXXAXXAMAASMAMXXAAMXSASAAASAMAMSAMXSAMAAASMSSMMMXAAXXASMSAMAXXXXAXMMMMMXAMAMXMXXAAMAAAAXAAAAMMMXSSMSMAAMAXXMSXXAMSSMSSSMMAMSMSMMXS\\nSASASXSAXAASMMSSXSSMXSAMMMMASAMAMMMXMASXSMXMASASAMXSAASAASXSMSMAMAAXXAMSSMMSXMAXMMMMXMASMSSSSSSMSXSMSSXSAAMXAAMMMSMMMMMXMAMAAXAAXXMAMMAAAMMS\\nSASAAAMXSMMMAAAXMMMMMMXSAXSMMXSMMXXXSAMMAMXMASAMXSXMMMXMMSAAASMAMXMXMMSMAAAXMMMSAAXSMMMAAXAAAAAMMMMMMXAXMSSMSMSMMMMAMASMMMMXSMMSMMSSMSSSSMAX\\nMAMAMXMXAXSSXMMSSSMAAMSMMMASAASXMXSXMASXMMXMAMXMMAMSMMSSMMMMMMMAXASAAMAMSMMMMAXSMMXAAAXMXMMMMMMMSAMMSMSMAAMMXXAXMASMMAXAAAAXXXMAAAAXAAAXXMSS\\nMSMSMAMXMSMASASAMXMMXMAAAXMMMSMAMXMAXAMXXMSMASAXMAXAAMAAXSASAMSMXASMMSAXXAMAMSMMSSMSSMSXSXMXMXMASAXMXAAMMMXMASMMSAMXMSXXMMSXXAMASMMMMMSMXMAM\\nMAAMAMXAXAXMAMMMSMXMXXMSSSXXXAXAMSAMXSAMMSMSAXXSXSMSSMSSMAMMAMASMAMMMMMMSAMXXMAAAXXAXXSMAMMASMMMSAMSMMMSMMMXMSXMMSXMAMASXMMMSSMXMAAXXMAMSASX\\nSMSMXXXASMSXXXAXAAAXMSMAMMMSSMSSSXMXAXAMXAAMXSXMAXAAXAMXAMXSXMAXMAMXAAMXSAMXMSMMMSMMSXXMAMSAMAAAXAXXAAAXAMXSXSAMAMXSAMXMAAXAAXMAXSAMXSAMMAMX\\nMAMAXMMMAXAXXSSSMSMSAAMAMAAAXAAMMMAMXSAMSMSMXAASAMMMMXMASXMAMMXMSMSSSSMAMASAMAXAAXAASMSMAXMASXMSSMMSMMSSMMAMMSAMXSXMASMSMMMMMSSSMXASAMAMMXMM\\nMAMAMAASAXMMAMAMXMAAMMSSSMSSMMMSAMXMMMMMXAAAXSXMASXSAXSXMASMXSAMAAMAAMMSMAXAXSSMXSSMXAAMXSSXMXXXAMASAAAXXMASASAMMAASXMMSAMXSXAAAASMMASAMMSMS\\nSSMMXSMSMSMMMMASAMXMAXAAAAMXAMASMSASAMASMSMSXMASXMAMSMMAMMMXASXSMSMMMMAAMMMSAAAMAMMXMSMMMMXMAMXSSXASXMMSXSSSMSAMAMMMAAASAMAMXMSMMMASAMASXAAX\\nMMASMMAMAMXAXSASASMXXMASMMMSSMAXMMAMXSASXXAMMXAXAMXMAMSSMSAMXSAXXXXMMMSSSMAXMSSMASMSMXSAAMAMAMXXAMXSASXSAXAMXSAMSMASMMMSMMXMAXAXAMXMASAMXMMM\\nXSAMAMAMSXSXXMASAMXMSXMXMAXMMMSXSMSMMMMXMMSMAMXSSMSSMXAMAMSXAXMASXMSAAXAAMXMMAMMXSAXMAMXMSASASXMMAMSAMMMMMSMMMXMAMASASASXAXSSSMSXSASMMMXAMAA\\nAMAMSMMMAASMXSASXXSSMASXSMSAMXXAMAMSMASXXAAMAMAAAAAAMMMSXMXMMMMMMMASMSMSMMMSMASXMMMMMMSAASASMSMAXMXMXMAMSAMAMXSSXXMSXMASMSXMMAAAASMMAXMSMSMS\\nXSAMXAXAMXMAXMASAXSASAMXXXMXMASMMMMXSAMAMXMMASMSMMMSMMAAASXAAAAAAXXXAXXMAMSAMAXXAAXXAAXMMMXMASASXMMSMSMSMASXMAXAXSAMMMSMXMASMMMMMMASXMMAXMAM\\nXXASXMMSXSMSMMSMMMSAMXSMMASAMXXSAAMMMMSSMASAAAAMXMXMAMMSSMASXXSSSSSXXSMSMXSASASMMMSMMSMMASAMAMXMAMXAXAXXMMMXXXMAMSAMMSMAXSAMXAMXSXMASXMAMSAS\\nMSMMASAMSXAAXXAAAXMXMXAXXMAMMAMSMXXSMAAAMASAMMMMXAASXMAMAMMMSMMAMXXMMMMAMASAMXSAAAAAXAASAXAMXSMSAMSMMSSMASMMSMMMMSAMXASMMMXSSSMMXMXAMMASMSAS\\nMAAXAMAXMMXMAXMMMXMASMMMSMAMMAMMSMASMMSSMXSAMXXMMSMSAMXSMXAAXMXSAMXXAAMAMMSAMASXMSSSMSMMASMMMMXMAMAAAAXXAMAAXAAMMMXMMXXXMXMAAMXSAMMXSAMMAMAM\\nSSXMXXMASMSSSXXASASASAXAASASMMMAAMXMAMMAMXSMMXAXXAASXMAMXSMSSSMXAXMAMMMSMXXAMXSXMAXMMMAXAAAAAMMMMMSMMSMMMSMMMSASAMSSSMSSMMAMXMASAMAAAXMMSMAM\\nXAXSMSSMXAAAMMSXSASASAMSMSMSASMSSSMSXMXAMMMMSSMSSMXMXSXSASXAAMASMMSMMSAXMMSXMXMASMMMSSXMASMSXSAMSAMXAMXAAMASAMMMASAAAXAAASXXSMMSMMSSMXXXXSXS\\nMSMXAAAXMMMMMAMMMAMAMMMXXSXMASAAAAMMAMSSMMAAMAXAAXAXXMAMASMMSMXMAAAAAMASAAAAMMSAMAAAAMAMXXAAMXXAMXMMSMSAMSAMAMXSMMMSMMSSMMSMXMXMMAMAXAMAMXMS\\nMASXSMMMMAAAMSSXMAMXMASXAXXMAMMMSMMSAMXAASMSSSMSSMSSSMAMMMAMAXASXMMMMSAAMMSXMASASXMMSSSMSMMMMAMMSSXSAAMAAMMSMMAXAXXXAXXAXAMXAMAXMAMXMXMAMAAX\\nSASMMMAASXSMSAAMSMSMSASMAMMMMSAMXMASMSSMMMAAAAAMXAXAXXAMASXSAXMXMMXAMMXSAMXMMMSAMXMXAAXAAAAAMAXSAMXSASMMMAMAAMXSMMSSXMSXMXSSMSSSSMSSSXSASMSS\\nMASAXMMMSXAMMMSMSAAXMAXAXXAAAMMSAMASXAXASMMMSMMMMXMAMXSSMSAMXXSAMMSMSMAXAXMASAMMMAAMMMMMSSMSXSSMASAXMMXXMASMSMMMMAXAAMMAMXXAAXMAAAAAMASAMAAM\\nMXMXMASAMXXXXXMAMSMMMSMSXSSMMSASMMASMASXMASXAAAMMMSSMAXAXMAMAMMAMAASAMXXMSSMMMXAMXXXXXXXAMXXAMAXAMXSMSXSSXMAAAAXXMXMMMSAMMSMMMMSMMMSMAMAMMMS\\nMMMAAMMAXXSSMSMXMMSAXMAMAMAAAMXMXSXXMMXXSSMSSSMSAAXAMSSMMSAMASXSMSXSXSXXMAMAMSMSSXSAMXMAASAMXSAMXMAAAAXMMAXSSSMSMMSMMXMAAAXAMXMAMMXMMMSSMMMX\\nXAMXSMXMMAAAAMMAMMMSAMAMAMMMMMSAMMAXSMMMMAAAXMAMMMSAMXAXAXASXSAXAMXSAMMAMAXMMSXMAASXAAMAMMXSAMXMMMSMAMSSMMMMAXMSAAAASMSMMMSMSMSSXSAAMAAAAXXM\\nSSSMAAASMSMMSMMASAAMMSASAMXAMXAAAMSMXAAAXMMSSMMSAMXMXSMMMMXSAMXMMMAMAMXXAMXMAMAXMMMMSXSASXAMXSXXAAMXMXAXAXAMXMASMMSSMAAXSMSAAAMAASXMMMXXMMMX\\nAXXAMSMSAAMAMASASAXMASXSASMSSXSSMXAAXSSXMXAMMAMSASASMAMASMMMMMMXMMAMMMSSMSAMASXMXAXMXMMAMMXMMAMMMXSASMSSXSSSMMMXMXMXMMMSMAMAMSMMMMMSXSSMSAMS\\nXMASXXXMMMMASAMXSASMASAMAMAAMXMAMSMSMMAMSMMSMSMMASASMXMAXAAXSAAASMMXXAXAAAMSASAMSMSAMXSAMXXXMXXXAXSAMAAMXXAAXSMAMAMMXXXMMSMXMXXXAXAXAMAMSASA\\nXMXMXMXSXXMXSXMAMAMMMMAMXMAXMASAMSAMXMAMMAMXXXAMXMAMASMASMMMSASASAAAMSSMMMXMMSAMSASXMAXMMSSXMSSMMMMMMMMSMMSMMAMMSMSAMSSMAXASXXSSMSSMMMAMXXMA\\nMSAMASAMMMMAXASXMXMAXSXMXASXSAXMSMXMMMMXSAMMXSAMXMXMMXMAXMAXXMMASMMSXMAMAMAMMSAMMAMXMMXSAMXXSAMXSMAXXXMAXAXASMAXAMXXMAAMASAMXAMAMAMAXSMSSMAX\\nASASAMASAAMAMXAXMAMXXMAXXMAXMXMMMMXMSAMXSASAMXMXSMSMXSMMMSXMAXMXMXXMASMMASXSAMASMXMAMXAMXMMSMASAMXSMMMSMMMSMMXMMASAMMSSMASAMXXMAMAMMMAAAAASM\\nMSAMASASMSSSXMMMMSSMAXMASAMXMSMSAMAXSASASMMMAMMAAXMMAXAAASASXMXSXMAMMMXSXSAMXSAMMASASMMMSAMASAMXSAXAAAAMAMAMMAMSAMAXAXAMASAMMMSMSXSSSMXMMSXA\\nMMMSXMASMMMMAMXXAASXXAMXAAXXMAMSAXXXSXMAXXAAAAXSMXSMSSSMMSAMMMAMMSMMAMASMMXMXMXSXXMASMXASASASMSAMMSXMSMSMSASXMXMMSSMMSMMMMAMXAAMSXMXXXAMXMMS\\nXAMXMMAMASXSAMAMMSSMMSSMSSSMSXXSAMSMMXSASXSSSMMASAAXMAXSXMMMSMASAAAMXMASXSASAXAMMMMSMMMMSXMASAMASAXXMXASMSXMAXXXXAXAAAXASXMMMSSXSASMXSXSASAM\\nMMMAMSSSMMASASAAMMXAAAAAAAAAMMAXAXSAMAMMXAAMAMSAMSXMAAMXMASAMXAMMSSMAMASAAAMAAXSAXXXASXAXMMMMXMXMASXMSMMASXSXMMMMMSMMMSMSAAXAXMASMMMMSMMASMM\\nMASAMSAMXMXMXSMSMAMMMSXMMXMMMAMSMASAMXSAMSMMAMMMMXMSMMSAMXMASMSSXAAMAMXMXMXMXMSAXSASAMMMSAAAMAMXMAMXAAAMXMASAMAAAAAAAAAASMMMSSMAMAAXAXAMAMAM\\nSASXSMMMXSMSAMXAMASXAXMSSXMAAXXMXMSMMASAMXASXSASMMASAMSXMXSXMAXMMSMMMSAMXXAXAMXMMMXMMMXXAXSSSSSXMSSMSMSSXSAMASXSSSSSMSMXMXSAMAMASMMSMSSMXSSM\\nMASXXXXXMMAMMMSASASMASAAAASXSSSMAXSXMAXXMSAMMSAMXMAMAMXMAXSAMXMXAAAAXMAMSXSSMSAXXXSXMASAAMXAAXAXSAMXMSAMXMAMXMAAAXAXAMXMSXMAMSMMMAXMMSAMXMAS\\nMAMMMSMSAMAMAXXAMAXAMMMMSXMAAAAXMSMMMMXMXAMXAMSMXMXSXMXXMAMXSAMMSSMMSXSMSAAAASASXXXASASASMMMMMXXMAXASMMSMSSMMMMMMMXMMMSSMMSSMAASXMMAXSAMXSAM\\nSSSMXAAAXXASMSMXMMMXXAXAXAMXMSMMXAAMMAASXXMSSXXMAMAMXMXMSSSMSAMMAXMASAMASMMMMMMAMASXMASAMXXXAAAMMSSMSMXSAAXAAMAMAXXAAAXAAAAAMXMMAASAMXSAMXMS\\nSAAXXMSMSSMSAXXAAAASXSSSSMMXAMXAMXMMMMMXAAXAMXMAXMSMAAMAAMAASAMMAXSAMAMAMAXMXAMAAXXXMAMAMMMSSSMSAXMAMXAMMMSSMMXSSMSXSSSXMMSSMSSMSMMAAXMSAMXS\\nMSMMSAAXMAMXMMMSSMXSAAAAAMMSSSMXSASXAXMMSMMASMMAXSASASMMXSMMMMMMAMMASXMXSXMXSXMMMMSMSASMMSAMAAAMASXMSMMSSMMMXXXXMASAMXMASAXAAAAMMXMMMMSAMXAS\\nXAMAAMSXSMMXXSXAAMSXMMMMMSAAAXAAMMMSASAAAAXSMXMAXSAMMXMSMSAMXAMXMXMXMAXAMAMXSMMSAASASMXMASMMXMMMXMASAMMAMAAAXXMSMSMMMASXMASXMSSMSSMSAMXXMMMS\\nSASMMXAASXMXMMMSSMAMSMXMAMMSMMMMMSAMXSMSSSMMASMMXMAMMSMAASAMSXXAXMAXMSMSSXXMXAAXMSMMMAXMXMASMSAMASXMAMMAXSMMSMAXMMAAMXMXXAMXMAMXAAXMASMXMAAX\\nSXMAXMMXMAXXSAAMAMXSAAAMASXXAMAAAMMSASXAAXAMXMASMMMMAMSMMSAMXSSSSSXSAXAMMMMMMMMSSXMAMXMSMXXMASASASMSSMXMXXAAMMSMMSSMSMMSMASMXXXMMSMSXMAASMMS\\nMMSXMASXSXMAXMXSSMSMMSMSMMMSMMMMSSSMMXMMSMSMAMXMMSMMXMSXXMAMAMSAAAAMXMAMAAAAASXMMAMXXMAAXSAMXSXMAMXXASXSAMMMSAMXXAMMAAXMSAMXXXXXXXAAAMMMXAXA\\nMAXAMXMASAMMSMMSXMAXMAMXMXMAMASXXXMASXAXXAMXSXMXXAAXMXXMSSMMAXMMMMMMMSSMSSSSSSXMMMMMMSSMMASMAXAXXMMMAXXMAMSAXXSMMMSSMXAXMXSMMSMMMMMSMMAXSSMX\\nMSSSMSAMSXMMAAXXAXAASASAMMXASAXAAXSAMXSAMXMAMASMSMSMSMAAMAASMMSASXXXXAMMMAMXMMMXASAAXAAXSAXXXMSMSAAMMAMMMMAAMXXAAAAAMMSXMASXAAAAXAMAMXXMAAXS\\nAXXMAXXXXXMSSSMSMMSASASXSASMMXSSSMMMSAMMSSMSMAMAAXMAASMMSXMMAXSAMXASMMSSMSMMAAXMASXMMSSMMASMSAAAXXXMXASASXXAMMXSMSMSXAXAMASMSSSMSSSMSAXMSMMA\\nMSMMAMSMMSAAAMAAXXXAMAMAMMSAAAXAXMASMASMMAAXMMMSMMMSMXMMXMMMXMMAMAMXSAAXAAAMSASXMMMXAMXAMXXAMSMSMMMMSXSASMSMAXXXAXAXMASAMXSAMAXMAMXXMAXMAAAS\\nXAAMAMAAASMMMMSMSMMXMAMAMXXMMMMMMMSMSAMASMMMXXAMXAAMXMSAMAAXSXSASXSAMMSMSSSMMAXXAAMXSMMXXAMSMAMAXAAAXAMAMASMMAMMAMMMAAMMXXMAMAMMXMXSSSSSMXXA\\nSSSMMSSMMMXXXAMXSAMASMSMSMXXXXAAAMMAMXSMMXMMXMASXMXSAMSASMMMSXXASAMXSXMMMXMXMXMXMXSAXAXSMSAASMSASXMMSXMAMMMAMXXMAMASMSSMSSSMMSSMSAXXAMAAAMSM\\nAXAXAAXASMMSAAMAMXSAXAAAAMMMMXSMSSMAMXAXMMAMXMMAMAAMAXSAMMSXSAMSMMMAMAAMXAMASMMASAMXSAMXAAXXXXMMXXAMXASXSSSMMSASXSAXXAAAAXAXAAAMAXMMMMSMMMAX\\nXMMMMSSXMAASMSMAXAMXSSMSMMAASXMSAMXAMXMAMSAMXSMAMMMSMMMXMXSAMXMAAXMASXMXMMMMXAXAMAMAXMMMSMMSSSSXXAMMXAMAMAAAAAMSXMASASMMMXSMMSMMMXXAMXMXAXSM\\nSMXAXXAXXMMMAMMSMASMXXAAMSSSSXMMXXSMXAXMASASAXMAMAXAAASMSXMAMMSMSMSAMMMXMAAXSMMMSSMXXAAAMAXXAAXMMSMAXMMMMSMMSSXSAAAMAMXMSAMXMMXSXMSSSMMSMSXS\\nSMASXXSSSSSMMMAMSMMAAMXMMAMAMAXMMMMMXSSMXSAMXSSMXXXSSMXAAMSSMAAXXAMASXAASXMMAAAAAAAASMMSSSSMMMMMAAMXSAAXAAAAMMAXMMXSAMXAMASXMAAXAAXMAAAXSMAA\\nXAAMXAAAXXAMXMAXAXXMMSAMMSSSSXMAASASAXAMAMXMXMASAMXXXMMMMXAXMXSMMXSAMMSXSASMSSMMSSMMXXAAXMXMXXSMSXXAAXXMSSMMSMSMSAMMMMMXSAMAMMMSMSXXSMMSAMMM\\nMMMSMMMMMSAMXSXSMSSXAXAMSAAXAMSMXSAMXMAMMXMAMSAMXAMMAMSMXMMSSMMMSAMASAMXSXMAAXXMXMAXMMMMSMMMMMMMXAMSSMXXAAAXAAMXMAXSMXSMMXSAMMXSMMXXXAXSAMSX\\nAAAXXAAAMXXMXSAAXAMMMSXMAMSMMAMMAMXMASXMSAAAAMMSMXAMAMXAMAXAAAAXMASMMXSAMMMMMMAXAMMMSXAAAAAXAMAAMAMMAMMMMMAMMSMMSSMAAASASASMMSASAMXMSMXXMMSX\\nSMSXSSSMSMMMAMMMMAMAAMXMSXXAXASMSMMSAMAASMMXSAAAAXSSSSXAMSMXSXMXSAMAXAMAMMAMAMMMSMSAXSXSSSMSSSSSSSMSAMMASMASAAAMAMXSMMMSMASAAMXMMMXMAXXXSAMM\\nXAMMMXXXMXAMXSAMXSSMXSAMAMXSMASXAAMMASMMMMXMMMSMXMAAAXXXMXMMMMSMMMSSMMSSMSASASMMMAMXXMMMMAXXMAXXXXASXXMAMSAMXSSMASXXAAXXMSMMMSMSAASXXSMMMASA\\nSASMSAMMMMMXAXAMAXAAXSMSASAMMXXMSXMMMMAXMSAASAMASMMMMMMSAMXASAMAAMAXAAXAASASASAAMAMSAXAAXXMMMSMMMMXMASMAMMXMAXAXAMASMMSAMXAXAAAMMMMXAMXAMXMM\\nSAAXMXMAAASMSSSMMSMAMSASASAXSMMMMXSAMSSMAXSSMAMAAXXAAAMAAMSMSASXMSMXMAMMMMAMXSMMSAMSASXSSMXXAAAAAAXMAMMXMASMMSAMXSXMMAMMASMMMMSMMSMMMSASMSMM\\nMSMXAASMSXSAAAASMXXAAMAMAMAMAAXSMASAMAAMSMMXMAMXSASMSSSSSMAASAMXXAXXSAMXAMXMAXAXSMXMAMAAMAXMSSSSSSSMASAMXAXAXMASAMAAMAMMAXAAXAAAAAAAAAAMXMAS\\nAXXSSMSXMMMMMSMMSAMSSMXMSMASXSMXMASXMSSMXXMASXSXXXSAMXMAMXMMMMMXSSMXAXMASXMMMSAMXSXASMMMMMSAMXXMAXXXXSASMSXSAMXXMSAMSSSMASXMSMSMSSSMSSSXASMM\"","export default \"47|53\\n97|13\\n97|61\\n97|47\\n75|29\\n61|13\\n75|53\\n29|13\\n97|29\\n53|29\\n61|53\\n97|53\\n61|29\\n47|13\\n75|47\\n97|75\\n47|61\\n75|61\\n47|29\\n75|13\\n53|13\\n\\n75,47,61,53,29\\n97,61,53,29,13\\n75,29,13\\n75,97,47,61,53\\n61,13,29\\n97,13,75,29,47\"","export default \"39|57\\n31|97\\n31|75\\n29|45\\n29|73\\n29|84\\n66|91\\n66|39\\n66|57\\n66|54\\n97|16\\n97|38\\n97|59\\n97|11\\n97|62\\n87|38\\n87|59\\n87|18\\n87|93\\n87|13\\n87|33\\n25|55\\n25|22\\n25|31\\n25|64\\n25|33\\n25|85\\n25|93\\n68|11\\n68|57\\n68|36\\n68|78\\n68|66\\n68|73\\n68|39\\n68|27\\n32|29\\n32|73\\n32|45\\n32|14\\n32|48\\n32|39\\n32|54\\n32|74\\n32|17\\n17|76\\n17|45\\n17|25\\n17|14\\n17|91\\n17|11\\n17|27\\n17|38\\n17|16\\n17|22\\n34|66\\n34|91\\n34|64\\n34|29\\n34|74\\n34|65\\n34|68\\n34|26\\n34|36\\n34|13\\n34|93\\n48|76\\n48|34\\n48|55\\n48|22\\n48|42\\n48|89\\n48|14\\n48|85\\n48|87\\n48|23\\n48|38\\n48|79\\n73|62\\n73|13\\n73|42\\n73|25\\n73|55\\n73|26\\n73|65\\n73|59\\n73|18\\n73|21\\n73|64\\n73|34\\n73|79\\n52|21\\n52|18\\n52|13\\n52|22\\n52|32\\n52|55\\n52|85\\n52|42\\n52|93\\n52|39\\n52|26\\n52|66\\n52|34\\n52|68\\n74|27\\n74|57\\n74|48\\n74|73\\n74|91\\n74|16\\n74|87\\n74|38\\n74|54\\n74|75\\n74|29\\n74|62\\n74|69\\n74|84\\n74|23\\n38|37\\n38|21\\n38|13\\n38|42\\n38|64\\n38|55\\n38|66\\n38|23\\n38|85\\n38|32\\n38|79\\n38|34\\n38|89\\n38|33\\n38|52\\n38|22\\n69|65\\n69|62\\n69|38\\n69|55\\n69|34\\n69|37\\n69|33\\n69|79\\n69|21\\n69|18\\n69|87\\n69|23\\n69|85\\n69|22\\n69|16\\n69|93\\n69|89\\n11|18\\n11|85\\n11|89\\n11|59\\n11|52\\n11|22\\n11|26\\n11|87\\n11|25\\n11|76\\n11|37\\n11|23\\n11|42\\n11|21\\n11|62\\n11|38\\n11|13\\n11|69\\n33|97\\n33|27\\n33|68\\n33|29\\n33|44\\n33|31\\n33|93\\n33|66\\n33|32\\n33|84\\n33|11\\n33|45\\n33|17\\n33|54\\n33|78\\n33|75\\n33|39\\n33|36\\n33|91\\n91|79\\n91|55\\n91|22\\n91|87\\n91|23\\n91|36\\n91|25\\n91|16\\n91|76\\n91|45\\n91|59\\n91|11\\n91|75\\n91|29\\n91|62\\n91|27\\n91|69\\n91|54\\n91|48\\n91|52\\n75|34\\n75|21\\n75|42\\n75|25\\n75|76\\n75|79\\n75|23\\n75|89\\n75|18\\n75|22\\n75|26\\n75|62\\n75|69\\n75|73\\n75|11\\n75|85\\n75|37\\n75|14\\n75|52\\n75|59\\n75|38\\n59|55\\n59|13\\n59|79\\n59|32\\n59|65\\n59|93\\n59|42\\n59|52\\n59|18\\n59|44\\n59|37\\n59|85\\n59|22\\n59|25\\n59|68\\n59|33\\n59|38\\n59|31\\n59|21\\n59|23\\n59|89\\n59|26\\n26|29\\n26|39\\n26|44\\n26|31\\n26|91\\n26|17\\n26|32\\n26|93\\n26|74\\n26|66\\n26|48\\n26|57\\n26|36\\n26|97\\n26|13\\n26|45\\n26|64\\n26|65\\n26|27\\n26|33\\n26|84\\n26|78\\n26|68\\n79|42\\n79|26\\n79|57\\n79|31\\n79|89\\n79|93\\n79|18\\n79|17\\n79|33\\n79|68\\n79|74\\n79|39\\n79|85\\n79|37\\n79|78\\n79|21\\n79|44\\n79|66\\n79|65\\n79|34\\n79|64\\n79|32\\n79|97\\n79|13\\n42|37\\n42|18\\n42|13\\n42|97\\n42|29\\n42|39\\n42|78\\n42|64\\n42|65\\n42|66\\n42|89\\n42|26\\n42|44\\n42|57\\n42|85\\n42|34\\n42|32\\n42|93\\n42|31\\n42|74\\n42|91\\n42|17\\n42|33\\n42|68\\n18|17\\n18|97\\n18|44\\n18|36\\n18|29\\n18|33\\n18|91\\n18|27\\n18|64\\n18|74\\n18|57\\n18|65\\n18|13\\n18|68\\n18|84\\n18|26\\n18|78\\n18|39\\n18|66\\n18|54\\n18|93\\n18|31\\n18|32\\n18|37\\n22|26\\n22|93\\n22|13\\n22|78\\n22|66\\n22|37\\n22|31\\n22|97\\n22|34\\n22|32\\n22|85\\n22|21\\n22|39\\n22|42\\n22|65\\n22|64\\n22|44\\n22|33\\n22|89\\n22|74\\n22|79\\n22|68\\n22|55\\n22|18\\n62|44\\n62|25\\n62|85\\n62|22\\n62|64\\n62|33\\n62|13\\n62|87\\n62|26\\n62|89\\n62|16\\n62|23\\n62|79\\n62|38\\n62|59\\n62|93\\n62|55\\n62|37\\n62|18\\n62|21\\n62|42\\n62|34\\n62|65\\n62|52\\n21|34\\n21|66\\n21|93\\n21|17\\n21|44\\n21|37\\n21|68\\n21|26\\n21|74\\n21|57\\n21|18\\n21|91\\n21|65\\n21|13\\n21|31\\n21|89\\n21|32\\n21|85\\n21|39\\n21|97\\n21|78\\n21|42\\n21|64\\n21|33\\n93|84\\n93|11\\n93|57\\n93|45\\n93|36\\n93|29\\n93|76\\n93|39\\n93|31\\n93|14\\n93|91\\n93|32\\n93|66\\n93|75\\n93|48\\n93|97\\n93|78\\n93|73\\n93|74\\n93|54\\n93|17\\n93|27\\n93|44\\n93|68\\n23|32\\n23|26\\n23|68\\n23|79\\n23|39\\n23|64\\n23|25\\n23|65\\n23|22\\n23|85\\n23|31\\n23|93\\n23|55\\n23|21\\n23|13\\n23|89\\n23|37\\n23|66\\n23|52\\n23|18\\n23|33\\n23|44\\n23|42\\n23|34\\n84|52\\n84|73\\n84|11\\n84|55\\n84|14\\n84|87\\n84|76\\n84|89\\n84|16\\n84|62\\n84|48\\n84|42\\n84|54\\n84|21\\n84|69\\n84|38\\n84|22\\n84|45\\n84|79\\n84|34\\n84|23\\n84|75\\n84|59\\n84|25\\n16|22\\n16|18\\n16|85\\n16|65\\n16|37\\n16|44\\n16|13\\n16|21\\n16|38\\n16|59\\n16|25\\n16|23\\n16|87\\n16|55\\n16|68\\n16|52\\n16|89\\n16|33\\n16|34\\n16|64\\n16|42\\n16|79\\n16|26\\n16|93\\n85|44\\n85|65\\n85|39\\n85|37\\n85|84\\n85|57\\n85|64\\n85|26\\n85|32\\n85|91\\n85|74\\n85|33\\n85|18\\n85|27\\n85|78\\n85|93\\n85|17\\n85|97\\n85|66\\n85|31\\n85|36\\n85|29\\n85|13\\n85|68\\n55|26\\n55|89\\n55|64\\n55|37\\n55|78\\n55|44\\n55|93\\n55|68\\n55|39\\n55|97\\n55|79\\n55|17\\n55|21\\n55|31\\n55|85\\n55|66\\n55|13\\n55|65\\n55|42\\n55|18\\n55|34\\n55|33\\n55|32\\n55|74\\n65|75\\n65|66\\n65|11\\n65|78\\n65|39\\n65|68\\n65|44\\n65|97\\n65|36\\n65|31\\n65|45\\n65|91\\n65|14\\n65|48\\n65|33\\n65|57\\n65|84\\n65|17\\n65|93\\n65|54\\n65|27\\n65|29\\n65|74\\n65|32\\n76|37\\n76|25\\n76|42\\n76|69\\n76|23\\n76|18\\n76|16\\n76|89\\n76|62\\n76|52\\n76|34\\n76|55\\n76|21\\n76|13\\n76|79\\n76|38\\n76|65\\n76|85\\n76|26\\n76|59\\n76|87\\n76|73\\n76|64\\n76|22\\n27|21\\n27|55\\n27|38\\n27|79\\n27|59\\n27|73\\n27|75\\n27|11\\n27|16\\n27|62\\n27|42\\n27|23\\n27|76\\n27|22\\n27|45\\n27|34\\n27|52\\n27|84\\n27|87\\n27|25\\n27|48\\n27|69\\n27|54\\n27|14\\n14|52\\n14|73\\n14|22\\n14|69\\n14|25\\n14|34\\n14|16\\n14|23\\n14|21\\n14|37\\n14|38\\n14|64\\n14|87\\n14|85\\n14|59\\n14|26\\n14|13\\n14|18\\n14|76\\n14|42\\n14|62\\n14|79\\n14|55\\n14|89\\n36|48\\n36|75\\n36|23\\n36|21\\n36|73\\n36|84\\n36|54\\n36|87\\n36|25\\n36|62\\n36|42\\n36|16\\n36|79\\n36|76\\n36|27\\n36|38\\n36|11\\n36|22\\n36|69\\n36|52\\n36|45\\n36|14\\n36|55\\n36|59\\n13|17\\n13|44\\n13|27\\n13|93\\n13|32\\n13|33\\n13|66\\n13|48\\n13|91\\n13|31\\n13|54\\n13|78\\n13|57\\n13|29\\n13|64\\n13|84\\n13|74\\n13|68\\n13|39\\n13|45\\n13|97\\n13|36\\n13|75\\n13|65\\n57|29\\n57|14\\n57|54\\n57|25\\n57|76\\n57|45\\n57|59\\n57|69\\n57|91\\n57|75\\n57|87\\n57|27\\n57|16\\n57|11\\n57|22\\n57|84\\n57|55\\n57|73\\n57|38\\n57|36\\n57|48\\n57|62\\n57|52\\n57|23\\n89|29\\n89|18\\n89|66\\n89|37\\n89|33\\n89|68\\n89|39\\n89|85\\n89|13\\n89|44\\n89|97\\n89|27\\n89|91\\n89|32\\n89|93\\n89|31\\n89|64\\n89|36\\n89|74\\n89|57\\n89|17\\n89|65\\n89|26\\n89|78\\n78|75\\n78|23\\n78|45\\n78|48\\n78|69\\n78|25\\n78|17\\n78|84\\n78|73\\n78|29\\n78|36\\n78|14\\n78|91\\n78|57\\n78|76\\n78|87\\n78|62\\n78|27\\n78|38\\n78|16\\n78|11\\n78|54\\n78|59\\n78|52\\n64|33\\n64|27\\n64|44\\n64|57\\n64|78\\n64|11\\n64|65\\n64|48\\n64|31\\n64|93\\n64|39\\n64|45\\n64|17\\n64|84\\n64|91\\n64|74\\n64|29\\n64|75\\n64|68\\n64|97\\n64|32\\n64|36\\n64|54\\n64|66\\n54|34\\n54|16\\n54|79\\n54|85\\n54|23\\n54|87\\n54|69\\n54|73\\n54|52\\n54|21\\n54|14\\n54|75\\n54|22\\n54|11\\n54|48\\n54|59\\n54|25\\n54|38\\n54|45\\n54|55\\n54|89\\n54|76\\n54|62\\n54|42\\n37|91\\n37|65\\n37|44\\n37|13\\n37|31\\n37|64\\n37|17\\n37|66\\n37|33\\n37|36\\n37|78\\n37|93\\n37|68\\n37|74\\n37|32\\n37|29\\n37|26\\n37|48\\n37|39\\n37|54\\n37|97\\n37|84\\n37|57\\n37|27\\n44|54\\n44|75\\n44|68\\n44|69\\n44|14\\n44|45\\n44|97\\n44|17\\n44|84\\n44|29\\n44|74\\n44|78\\n44|27\\n44|66\\n44|31\\n44|39\\n44|32\\n44|91\\n44|57\\n44|76\\n44|11\\n44|48\\n44|73\\n44|36\\n45|76\\n45|34\\n45|73\\n45|21\\n45|85\\n45|38\\n45|59\\n45|25\\n45|79\\n45|87\\n45|11\\n45|62\\n45|52\\n45|75\\n45|16\\n45|37\\n45|18\\n45|23\\n45|22\\n45|89\\n45|69\\n45|55\\n45|42\\n45|14\\n39|29\\n39|73\\n39|48\\n39|59\\n39|38\\n39|36\\n39|87\\n39|14\\n39|54\\n39|91\\n39|17\\n39|74\\n39|76\\n39|11\\n39|62\\n39|78\\n39|16\\n39|45\\n39|69\\n39|27\\n39|75\\n39|97\\n39|84\\n31|57\\n31|48\\n31|39\\n31|11\\n31|27\\n31|74\\n31|54\\n31|66\\n31|36\\n31|91\\n31|16\\n31|78\\n31|87\\n31|45\\n31|17\\n31|76\\n31|84\\n31|69\\n31|14\\n31|29\\n31|62\\n31|73\\n29|11\\n29|87\\n29|79\\n29|25\\n29|16\\n29|36\\n29|22\\n29|48\\n29|21\\n29|62\\n29|14\\n29|69\\n29|75\\n29|55\\n29|59\\n29|76\\n29|23\\n29|52\\n29|38\\n29|27\\n29|54\\n66|14\\n66|59\\n66|69\\n66|27\\n66|75\\n66|62\\n66|84\\n66|45\\n66|17\\n66|78\\n66|76\\n66|97\\n66|87\\n66|11\\n66|16\\n66|36\\n66|73\\n66|29\\n66|48\\n66|74\\n97|27\\n97|91\\n97|29\\n97|57\\n97|78\\n97|45\\n97|54\\n97|14\\n97|48\\n97|23\\n97|69\\n97|17\\n97|36\\n97|73\\n97|74\\n97|76\\n97|84\\n97|87\\n97|75\\n87|44\\n87|85\\n87|79\\n87|55\\n87|21\\n87|23\\n87|22\\n87|65\\n87|64\\n87|42\\n87|26\\n87|68\\n87|32\\n87|52\\n87|34\\n87|89\\n87|25\\n87|37\\n25|34\\n25|21\\n25|65\\n25|42\\n25|26\\n25|13\\n25|44\\n25|79\\n25|18\\n25|68\\n25|97\\n25|89\\n25|32\\n25|37\\n25|39\\n25|74\\n25|66\\n68|32\\n68|62\\n68|45\\n68|91\\n68|29\\n68|74\\n68|54\\n68|14\\n68|69\\n68|75\\n68|84\\n68|76\\n68|17\\n68|48\\n68|97\\n68|31\\n32|69\\n32|31\\n32|11\\n32|27\\n32|66\\n32|36\\n32|97\\n32|75\\n32|76\\n32|84\\n32|91\\n32|16\\n32|57\\n32|78\\n32|62\\n17|57\\n17|23\\n17|36\\n17|69\\n17|29\\n17|73\\n17|75\\n17|62\\n17|59\\n17|48\\n17|87\\n17|84\\n17|54\\n17|52\\n34|31\\n34|57\\n34|32\\n34|85\\n34|39\\n34|37\\n34|78\\n34|17\\n34|97\\n34|44\\n34|18\\n34|89\\n34|33\\n48|52\\n48|75\\n48|21\\n48|59\\n48|18\\n48|69\\n48|73\\n48|16\\n48|62\\n48|11\\n48|45\\n48|25\\n73|52\\n73|33\\n73|16\\n73|85\\n73|89\\n73|23\\n73|87\\n73|22\\n73|38\\n73|69\\n73|37\\n52|64\\n52|31\\n52|44\\n52|33\\n52|25\\n52|97\\n52|65\\n52|89\\n52|79\\n52|37\\n74|36\\n74|76\\n74|17\\n74|11\\n74|78\\n74|14\\n74|52\\n74|45\\n74|59\\n38|26\\n38|65\\n38|31\\n38|68\\n38|93\\n38|44\\n38|25\\n38|18\\n69|13\\n69|26\\n69|25\\n69|52\\n69|42\\n69|59\\n69|64\\n11|16\\n11|73\\n11|34\\n11|55\\n11|14\\n11|79\\n33|74\\n33|14\\n33|48\\n33|76\\n33|57\\n91|14\\n91|38\\n91|73\\n91|84\\n75|55\\n75|87\\n75|16\\n59|34\\n59|64\\n26|54\\n\\n78,45,48,38,52,62,29\\n87,59,38,52,25,55,79,42,34,85,37,26,13,64,65,33,68\\n57,29,84,48,45,75,11,14,76,73,69,16,38,23,22\\n74,57,91,36,27,84,54,45,75,11,14,76,73,69,87,59,38\\n69,62,16,87,59,38,23,52,25,22,55,79,21,42,34,89,85,18,37,26,13,64,33\\n33,44,68,32,31,66,39,97,74,78,17,57,91,29,36,27,54,48,75,11,14\\n32,66,39,97,74,78,17,57,91,29,36,27,84,54,48,45,11,14,73,69,62\\n74,66,65,34,93,32,21,26,89,31,78,44,18,13,37,85,33,68,79,64,55\\n38,52,25,55,21,34,85,18,26,13,64,33,93,44,68,32,31\\n68,36,64,33,48,32,93,31,13,26,74\\n48,45,75,11,76,73,69,62,87,59,38,23,22,55,79,21,42,34,85\\n33,16,44,34,85,79,65,22,42,25,64,87,18,55,52,89,13\\n73,69,62,16,87,59,38,23,52,25,22,55,79,21,42,89,85,18,37,26,13,64,65\\n14,78,45,23,16,36,57,74,76,87,75,59,62,73,54,27,17,91,48,29,84,69,38\\n33,93,44,32,31,66,97,74,78,17,57,91,29,36,84,54,48,45,75,11,14\\n38,23,79,42,34,37,33,32,31\\n65,93,44,68,32,31,66,39,97,74,78,17,57,91,36,27,84,54,48,75,11\\n11,84,59,45,54,38,36,14,29,52,16,27,62,76,87,78,75\\n54,48,45,75,11,14,76,73,69,62,16,87,59,38,23,52,25,22,55,79,21,34,89\\n34,18,26,74,29,31,85,17,64\\n16,87,38,52,21,34,18,37,13,64,33\\n91,31,78,66,27,84,74,36,32,39,68,73,44\\n69,62,36,74,45,66,54,91,14,11,27,32,75,39,84,48,73,76,31,29,17,78,97\\n44,68,32,31,66,74,78,57,36,27,84,54,14,76,73\\n59,73,22,21,76,62,14,23,16,79,27,36,55,75,38,54,48,11,52,45,25,84,69\\n29,36,27,54,45,75,11,14,73,69,62,16,87,59,38,23,52,25,22,55,79\\n64,68,39,44,93,13,31,26,74,33,22,66,79,42,55,34,18,65,89,85,37\\n79,18,37,13,32,66,17\\n87,38,78,57,36,62,45,17,91,59,23,84,76,75,54,14,29,27,48,16,11\\n87,59,23,55,79,42,85,18,37,64,65,33,93,44,68\\n68,17,57,31,11,48,54,73,14,76,91,75,69,74,78,32,84,45,97,66,29,36,39\\n38,55,65,52,13,87,18,44,22,16,64,26,23,34,37,42,59,85,21\\n89,85,26,13,64,65,33,68,31,66,74,17,57,91,36\\n75,11,14,76,73,62,16,87,59,38,23,52,25,22,55,79,21,42,34,89,85,18,37\\n59,93,33,79,62,16,55\\n66,39,17,36,84,54,48,75,11\\n89,21,37,79,93,25,22,52,34,42,64,55,23,68,44,65,32,66,31,26,85,18,13\\n13,64,32,31,17,84,54\\n16,65,25,33,55,79,21,34,87,18,64,93,52,38,37,23,59,42,62\\n91,29,36,84,54,45,75,11,73,69,62,16,87,59,38,23,52,22,55\\n31,66,39,17,57,27,11,62,16\\n26,33,32,66,29,36,48\\n18,37,26,65,33,44,32,66,39,97,57,29,36,27,84\\n93,44,68,31,39,97,74,78,17,57,91,29,36,27,54,48,45,75,11,14,76\\n32,31,66,39,97,78,17,57,91,29,36,27,54,48,45,75,14,76,73,69,62\\n26,13,65,31,66,39,74,57,91,36,84,54,48\\n68,13,32,93,85,18,25,97,39,42,34\\n27,84,11,14,76,69,16,38,25\\n93,66,57,27,54,75,76\\n16,37,89,73,87,13,14,52,23\\n85,37,26,13,65,33,93,44,32,66,39,97,17,91,29,36,27\\n66,78,57,75,11,76,69\\n75,11,76,73,69,62,16,87,59,38,23,52,25,22,55,79,21,42,34,89,85,18,37\\n78,27,73,14,38,45,84,69,23,48,11,87,54,16,62,57,29,74,36,17,59,91,75\\n33,68,17,21,39\\n26,13,65,33,44,68,32,39,97,74,78,17,91,36,84,54,48\\n93,13,68,34,32,37,55\\n11,76,73,69,62,16,87,59,38,23,52,22,55,79,21,42,34,89,85,37,26\\n14,38,23,25,79,42,89\\n57,38,84,75,14,59,23\\n25,34,89,18,26,13,64,65,33,93,44,31,66,39,97\\n48,91,65,33,97,68,31,57,39,44,27,29,78,64,17,75,93,36,74,66,54,45,32\\n87,79,13,65,33\\n55,79,33,44,68,74,78\\n25,52,26,65,18,13,23,22,37,59,32,42,33,85,44\\n57,29,75,59,73,17,36\\n16,13,89,33,21,42,65,38,55,37,59,34,44,25,85,23,22,64,87\\n32,97,42,39,78,21,33,26,13,85,55\\n31,84,74,91,32,78,76,36,62\\n69,16,52,22,55,37,33\\n13,65,33,68,32,66,39,97,74,78,17,36,27,84,54,48,45\\n85,23,13,55,42,89,22,68,93,21,26,79,52,59,65,18,87,25,37,34,38\\n34,75,84,23,62,54,48\\n76,55,59,62,29,36,38,73,84,16,75,48,87,22,14,79,11\\n93,26,21,89,64,31,78,79,17,66,13,65,33,32,44,37,68,74,34\\n11,14,76,73,69,62,16,59,38,23,25,22,55,79,21,42,89,37,26\\n34,85,93,32,39\\n44,68,66,39,78,57,54,14,73\\n42,37,21,44,85,16,64\\n64,44,32,31,39,97,74,91,36,84,54,45,75\\n31,66,39,74,78,17,57,91,36,27,45,75,11,14,76,73,69\\n93,97,57,11,14\\n65,31,57,13,78,64,45,66,17,48,68,93,54,27,29,36,32,97,44,84,39\\n73,45,55,11,23,59,76,75,25,87,34,52,22\\n21,34,89,85,18,37,26,13,64,65,33,93,44,68,32,31,66,39,97,74,78,17,57\\n42,34,89,85,18,37,13,64,65,33,93,44,68,32,66,39,97,74,78,17,57\\n18,37,79,26,11\\n16,59,48,11,14,55,36,87,73,21,76,23,69,27,52,75,54,45,62,84,22\\n66,78,17,57,91,36,27,84,54\\n31,44,65,37,78,33,68,36,32,66,17,18,91,93,64,74,26,89,85\\n89,65,79,85,22,18,64,42,55,31,34,33,97,26,13,25,68\\n55,21,89,18,26,13,64,93,68,32,31,39,78\\n22,18,26,44,32,31,66,39,97\\n38,79,21,42,18,37,64,65,31\\n34,89,85,18,26,13,64,33,93,68,66,74,78,17,57,91,29\\n17,39,16,59,54,36,78,69,57,48,76,27,84,97,91,75,45,73,62,11,14\\n65,33,93,44,68,32,31,74,78,17,57,91,29,36,27,84,54,48,45,75,11\\n84,48,75,73,16,59,23,52,55,79,21\\n93,21,32,66,55,89,42,74,85,68,22,44,13,64,26\\n14,76,73,69,62,16,87,59,38,23,52,25,22,55,21,42,34,89,85,18,37,26,13\\n32,74,78,27,84,45,11\\n65,26,44,74,36,78,89,31,66,32,29,13,57\\n89,85,26,93,68,32,31,17,57,91,29\\n59,38,23,52,25,22,55,79,21,42,34,89,85,18,26,13,64,65,33,93,44,68,32\\n31,66,39,74,17,91,29,36,27,84,54,48,45,75,11,76,73,62,16\\n59,91,75,11,84\\n91,29,36,11,69,62,16,87,25,22,55\\n91,97,39,29,57,32,73,78,48,11,84,75,45,76,27,36,69,31,68,66,74,14,17\\n33,93,44,85,22,26,64,31,32,65,52,66,34,55,68,39,37,42,18\\n23,37,26,42,34,65,18,21,68,79,33,31,66,89,52,22,25,93,32\\n55,79,89,13,32,31,78\\n84,48,45,14,69,87,38\\n91,29,36,27,84,54,45,75,76,73,62,87,59,38,23,52,25,22,55\\n37,33,18,66,34,64,32,89,26,79,85,25,68,39,52,44,21\\n76,73,87,22,79,21,26,13,64\\n75,11,14,76,73,62,16,87,22,21,42,34,89,85,37\\n52,25,22,55,79,21,42,34,85,18,37,26,13,65,33,93,44,68,31,66,39\\n65,22,33,79,13,68,32,42,37,44,26,25,64,85,18,93,66,89,39\\n73,23,34,85,37,26,65\\n45,75,11,14,76,73,69,62,16,87,59,38,23,52,25,22,55,79,21,42,34,89,85\\n14,59,69,87,26,13,34\\n42,34,89,26,64,65,44,31,66,39,78,17,91\\n18,37,26,13,93,32,31,66,97,78,57,29,36\\n42,34,23,11,79,45,75,52,55,73,38,54,22,25,87\\n85,34,68,65,33,21,37,26,93,89,22,79,38,52,55,44,87,42,23,13,18\\n75,48,22,73,27,45,57\\n14,76,73,69,16,59,38,52,22,55,79,21,34,89,18,37,13\\n26,32,48,36,91,33,65,93,66\\n36,39,84,13,17,57,26,32,65,54,93,37,97,78,31\\n42,87,34,73,13,14,85\\n66,13,37,17,91,31,57,65,27,78,84,97,68,54,39\\n42,39,97,68,25,26,79,18,21,85,44,34,65,89,93,37,55,31,22\\n18,34,55,37,64,44,21\\n23,52,84,87,57,38,76,27,69,22,48,62,16\\n26,93,29,44,54,33,31,13,66,65,84,78,64,27,74,39,37\\n37,18,57,13,17,29,31,32,36,93,26\\n27,87,76,29,78,48,17\\n32,31,66,39,78,57,91,29,48,75,76,73,62\\n59,38,55,79,21,89,85,65,33,44,32\\n27,54,17,64,45,39,97,84,36,65,44,32,74\\n87,38,23,52,22,21,42,34,89,37,13,65,33,93,68\\n66,31,22,32,55,13,42,37,18,68,21,79,89,23,85,44,33,34,25\\n93,74,39,78,17,18,64,57,13,31,33,29,36,37,84,26,32,65,27,66,97,91,44\\n97,18,33,31,13,93,84,44,26\\n62,73,48,27,45,54,36,97,16,84,57,76,11,69,78,91,87,59,39,29,17,74,14\\n29,31,14,39,45,11,84,16,57,27,73\\n66,39,29,69,87\\n69,74,59,84,48,73,16,87,62,97,75,76,54,38,45,29,17,36,14,91,27\\n18,64,65,33,93,44,68,32,31,66,39,97,74,78,17,57,91,29,36,27,84\\n48,45,73,79,42,34,85\\n75,11,76,69,62,16,87,59,23,22,55,79,21,34,85\\n93,22,26,64,33,23,52,65,87,18,25,44,55,38,37,21,42,68,85,13,79,89,59\\n76,69,87,59,23,52,25,79,42,34,37,13,64\\n22,37,13,38,69,18,55,21,52,14,62,34,25,23,16,73,59,85,89\\n79,55,62,73,85,87,26,13,69,42,76,37,64,38,16,21,23,52,25,18,59,34,22\\n22,21,85,18,26,93,32,66,39,97,74\\n14,57,11,17,74,29,87\\n64,65,33,31,74,78,27,84,54,48,75\\n85,66,68,23,21,32,93\\n85,89,93,74,65,26,64,78,79,33,66,39,55\\n57,29,27,54,45,11,76,16,87,59,52,25,22\\n32,31,97,17,57,29,36,27,84,48,45,75,62\\n69,91,76,75,14,36,97,54,11,74,62,17,29,45,27\\n48,45,73,62,16,59,38,23,55,89,85\\n37,26,13,65,33,93,44,68,32,31,74,78,17,91,29,27,84\\n33,65,89,37,69,38,18,79,87,52,16,23,34,59,21,62,26,42,55\\n74,17,91,27,84,54,48,45,75,11,14,76,73,69,62,16,87\\n66,39,74,78,91,36,27,84,54,48,45,75,11,14,69,16,87\\n85,25,13,55,21,64,93,38,62,79,65,23,37\\n44,36,33,68,29,32,13,65,97,39,27\\n16,22,38,14,62,11,52\\n45,36,93,68,14,33,44,32,48\\n93,57,45,97,75,78,27,76,14\\n62,23,65,33,22,34,13,21,69,79,87\\n22,69,14,16,52,79,73,11,37\\n66,68,26,13,39,34,52,85,32,64,33\\n64,33,44,68,39,74,78,17,57\\n37,21,73,25,38,55,62,59,34,87,79,89,64\\n84,59,73,74,75,17,91,78,23\\n78,45,74,17,84,27,91,29,14\\n54,45,44,27,17,39,75,31,57,64,48\\n25,84,23,45,57,69,91,76,87,17,27,73,62,29,54,52,11\\n97,91,29,84,45,75,11,14,76,59,38\\n17,57,91,36,27,84,48,45,11,76,73,69,62,16,59,38,23,52,25\\n21,42,89,85,18,37,26,13,64,65,33,44,68,32,66,39,97,74,78,17,57\\n34,21,93,23,65,52,37,32,26,25,22\\n21,89,87,59,16,62,26,76,55,23,11,14,25,69,42,85,79,34,38,22,37\\n27,54,11,14,62,87,59,38,52,25,22,55,79\\n42,34,89,85,18,37,26,13,64,65,33,93,44,68,32,31,66,39,97,74,78,17,91\\n23,25,22,55,34,89,65,93,32\\n68,13,38,32,18,26,93,89,52,85,22,42,44,65,25,34,21,59,33\\n57,91,29,36,27,84,54,48,45,75,14,76,73,69,62,16,87,59,38,23,52,25,22\\n91,29,27,14,16,52,25,22,55\\n97,26,13,79,66,37,64,42,31,55,65,85,39,44,22,18,68,34,93,33,32\\n87,11,17,27,36,14,29,76,75,69,78,74,59,91,38,48,62,73,16,57,23\\n42,89,85,18,64,65,33,93,66,97,74,78,91\\n75,11,14,76,73,69,62,16,87,59,38,23,52,25,22,55,79,21,42,34,89,18,37\\n26,64,65,33,93,44,68,32,31,66,39,78,17,57,91,29,36,27,84,54,48\\n38,23,22,55,42,34,89,37,26,33,93\\n29,18,34,13,89,17,39,37,26\\n76,73,69,62,16,87,59,38,23,52,25,22,55,79,42,34,89,85,18,37,26,13,64\\n68,89,32,17,85,42,74,33,65,18,34,37,31,79,44\\n23,21,73,18,42,22,34,14,79,59,69,45,25,52,87,55,75\\n75,11,14,73,69,62,16,87,59,38,23,52,25,22,55,21,42,34,85,18,37\\n31,26,17,39,97,36,13,65,89,29,64\\n39,97,74,17,91,29,36,27,84,54,45,11,14,76,73,69,62,87,59\\n65,44,32,66,97,78,57,91,36,27,54,48,45,75,11\\n31,74,78,57,29,84,45,75,62\\n52,25,22,55,79,21,42,34,89,85,18,37,13,65,33,44,68,32,31,66,39\\n21,62,18,25,69,55,26,65,85,79,33,34,89,42,13,59,22,87,38\\n91,29,27,69,38,25,55\\n27,84,48,75,11,76,73,69,62,16,87,59,38,23,52,25,55,21,42\\n34,32,37,55,44,52,22,42,23,26,66,85,25\\n65,33,93,44,68,32,66,39,97,74,78,17,57,29,36,84,54,48,45,75,11\"","export default \"....#.....\\n.........#\\n..........\\n..#.......\\n.......#..\\n..........\\n.#..^.....\\n........#.\\n#.........\\n......#...\"","export default \"..........##.....................................#............#........................#.....#........#...........#...............\\n...........#.............#.....#....................#...........#.#..............#.#......................................#.......\\n.#..............#...............................#.......#.#...................#...............#...............#..#...........#....\\n.#............................#.............................................................................#.#...................\\n...............#..........#............#...........................................#....#...#..........................#..........\\n..##.#..#......#.....................#..#......#................#..........................................#................#.....\\n.......#.....#...........................................#........#...............................#.#.............................\\n.........#...............#......#............#...................#...........#.........#..#...#...................................\\n#.....#.#....................................#.......................................................##..#...##..#..#.............\\n.............................#...#.......#...............................#.#...............#......................................\\n.....#................................#..........................#....................#...........................................\\n.......#............#..#................................................................................#..........#...#..........\\n...........#.............................................................#...............#................................#.....#.\\n.....................................................#.........#.....#..#.....#..................#.......#.....#...........#......\\n.#..........#................#..................#........#..............................................#....#..................#.\\n.....................#......#..........#...........#................#..#..#............................#...##.........#...........\\n.................#.....................................................................................#..........................\\n..........................#.....................................#.#..................................................#.#..........\\n............#....#........#...................................#...................................................#...............\\n............#........................#........##..............#....#.............#............#......#........#...................\\n....................#.#........#..........................#...........#.............#...............#.............##.......#......\\n...............................................#..................................#...................................#....##.....\\n...#.....#.......................................#..........#......................#.............#.............#.##.......#.......\\n........#......##...................................................................................#.............................\\n...#.................................#.....................................#......................................#.........#.....\\n....#.................#......#.........#.........................................................................#........#....#..\\n..........................#..#.......#............................##.............................................#.........##..#..\\n......................#......................................#......................#................#.........#..#...............\\n....#.....................................#...................#..............#..........................#...........#...#.........\\n...............#........#...............#..........#.....#..............................#....................................#.#..\\n......#......................#.......#.#...................#.............#...#.........#.....#....................................\\n.....#..#...............##....................................................#..#...#........................#..................#\\n......#.#..........#...#.................#...............#..........................................#...#.#.......................\\n..........#.......................................................................................................##..............\\n......................#..#...#......#.....................................................#.........#.........#...................\\n...................................................#...#.........#.....#......................#...............................#...\\n........................#...................................^..............................#.............#..........#...#.........\\n........#............................#.....................#......#...........##...........#......................................\\n..........#..................#........#...........................................................................................\\n.....#......................#.....#.............#....................#...............#...........##.......#..................##...\\n........#......................................#................................................#.....................#...........\\n......#.........#..............#.................................................................#.......##..#.#..................\\n........#......................................#...................#......................#.......................................\\n..#...............#....##.....#........................#.#.........#........#....#...................#.............#...#.........#\\n.............#..............#....#....#................#.....................................#...............#..................#.\\n..............#...........................................................................#..##..#...#.......#..........#.........\\n#...........#........................#..#......#..#.........#........#...#..............#............#.....#.................#...#\\n.....................#........................................#.................#.#..................#.............#.........#....\\n.............#.....................................................#.#....................................#.......................\\n.............#....#.............#.........................................................................#...........#...........\\n#.................#...#...#...............#..........#.........................##......#.....#..#.............................#...\\n#................#........#.......#.....#...............#..................................#.#.............................#......\\n.........#.......#.............#...................................................................................#..........#...\\n......#..............................................................................##............................#..........#...\\n..............#..................................................#...................................#..........................#.\\n.................................................................#.#...........#................#..........#..........#.......#.#.\\n...................................#.....................#..#...........................................................#.........\\n......................................................................................#.............#.............................\\n.....#......................................................................#......#....#.........#....#..#.......................\\n..................#.............................................................#.........................#.......................\\n......................#......#..........#..#............................#....#.........#.........#................................\\n..#...........#.......................#....#....................................#.......#.................................#.......\\n...................#.......................................................................................#..............#.......\\n.....#....................................#......#............#...##........#...............#......................#...........#..\\n......................................#.......................#.........#.#.........................................#.............\\n...#..............................................#................................................##...........................#.\\n.......................#.................................................................#.......................................#\\n.#...........#..#...................#.#......#................#......................................................#............\\n.......................................................................##..........#......#................#.......#.......#......\\n#..#...#...........................................#......#...............#.......................................................\\n....#.....#...........................#...........#...............##..............................................................\\n...#.......#.......................................................................................#............#.................\\n.............................................................................#...#.....................#...#......................\\n...................#.................................#.......#...........................#.....#.................................#\\n.........................................#........#....#.............#.............#...........................#..................\\n....#.....................................................................................#.#.#.......................#.#.........\\n..............................................................#..........#............................................#...........\\n.........#.#.............................#...#..........................#....................#....................................\\n......................................#.#......#..................................................................................\\n.................................................................................................................#................\\n..............#...................................................................................................................\\n...................................................#....................................................................##........\\n................#........................................#..............................................#...............#.........\\n.........#....#...#......#....................#.#.......................................#.............#.....#..............#....#.\\n.............................................................................................................##.....#..#..........\\n....#.............................#......#.....................................................#......................#.......#...\\n..#.................#........................#....#...##...................................#...............#......................\\n.........#..................................#.................#...#..#..........##................................................\\n......##.......................................................#...........#......................................................\\n......#..............................#...................##....#..................................................................\\n..................#.........#.................................................#.......#..................#........................\\n.........................#...........................................#.......#...........................................#........\\n............#.#...................#.#....#.................................#......##...........................................#..\\n..#....................#.....................#.........................#..............#.....#.........#...........................\\n..#............................................#.........................#....................#..................................#\\n...........................#......#...............................................................#......#..........#..........#..\\n.......................#.....#..................#...................................#.............#....#.....................#....\\n....................................................................#.....#....#..................................................\\n..#................#...#..........................................................................................................\\n.........................##.....#.................#.............#....................#...............#..............#......#.#....\\n.......................#...................##......................................#....#...............#........#.........#......\\n......#..#.........#............................................................#................................#......#.........\\n#........................#..................#...............................................#.#........#..........................\\n..........#................#...#.....................................................#............#...............................\\n............#................................................#.#...............#............#................................#....\\n..#............................................#....#....#.#.#................................#....................#..............\\n.........#...........................##.............#..#.................#........................#............................#..\\n..........................##......................#..............................#..................#.............................\\n.........#........#.......#..........#...........#.............................#...........................#.......#..............\\n..........................#................#......................................................................................\\n..........................#...............#..................#....................................#.........#....#..........#.....\\n..................#..#..................................................................#........#................................\\n##..#.......#..............#..#..............##.............#...#..#.........##.......................................#......#....\\n.............#.........#........#....................................................#................#.....#.....................\\n......#...................................#.....#................#..........................#.....................................\\n..#.......................#...#.#...#...........#..........#...................................#.............#.....#..............\\n..........#...#......................##...........................................................................................\\n....#............................#.#...................#....................#................#...........#..................#.....\\n.......#......#................#......................#......#........##..#....................#..................................\\n.......#..................#....#.....................................................................................#............\\n..................#......#................................#.........................#....#.............................#...#......\\n.................#.............#..........#....#.........................#..................................#.....##...........##.\\n............#..#............................................................................##...#.#....#....#.......##.#.......#.\\n......................#............................#.........#.....#.#.......##........................#..........................\\n...........#........................#..##........#....#.......#....#.#.....##.....................#.......#......#...............#\\n.................#...........#.......#..........#................................................#......................#.........\\n................#.......#.#.....................................................................................#.................\\n........................................#...#......#.......................................#...........#..........................\\n....#........##...............#...........#..................................................................#....................\\n#....................#...................#.........#....................................................................#.........\"","export default \"190: 10 19\\n3267: 81 40 27\\n83: 17 5\\n156: 15 6\\n7290: 6 8 6 15\\n161011: 16 10 13\\n192: 17 8 14\\n21037: 9 7 18 13\\n292: 11 6 16 20\"","export default \"29833: 1 50 15 39\\n458991049840: 17 598 378 2 69 40\\n224381: 120 66 66 890 5 96\\n5003: 852 662 973 8 3 3 2 1 1\\n441496: 6 60 835 62 9 2 4 8 40\\n93163572: 38 40 6 375 896 61 40\\n567402848327: 28 4 23 886 813 3 77 6\\n109878300: 9 306 2 66 2 5 67 5 525\\n169262: 77 3 1 7 2 2 9 6 764 1 5 4\\n515489: 281 771 7 7 9\\n100112: 927 74 15\\n150540585: 86 10 175 40 588\\n56371421566: 6 565 9 503 77 8 2 8\\n20411640: 506 42 10 16 2 60\\n1571: 29 88 9 509 9\\n337815942: 2 143 7 5 7 3 3 75 1 9 4 4\\n6714: 5 8 74 4 9 8 1 1 319 6\\n1114: 8 8 3 11 585\\n2556260: 71 1 62 31 620\\n9081072: 308 52 1 63 1 9\\n11006423: 60 438 48 23 5 92 2 1\\n213414366: 3 7 3 414 369\\n53385783: 852 9 1 53 2 71 851 33\\n119464247: 698 8 9 1 2 377 212 2 4\\n735632: 13 943 725 318 92 4\\n1059561: 4 9 4 6 86 9 8 3 375\\n22598196635: 5 644 5 5 4 9 4 62 3 9 1\\n448714: 4 48 71 4\\n12876000: 58 37 80 25 3\\n41576858681: 131 978 4 122 8 665\\n500750682: 500 74 99 95 67 618\\n418780: 504 82 548 1 1 1\\n79194751192: 395 2 7 73 5 2 5 1 18 8 5\\n2404852348: 1 8 79 516 9 8 515 8 50\\n17581536: 2 4 67 8 3 2 866 9 9 38 6\\n17966299992: 6 174 9 6 2 956 6 2 70 9\\n653: 3 5 4 4 94 3\\n60598364: 312 8 1 5 9 7 8 7 3 4 6 1\\n120116073: 816 4 4 92 8 76\\n202633925: 39 1 5 232 998 470 5\\n203156491: 3 4 350 25 292 723 23\\n97549292: 79 50 686 4 4 9 3 6 47\\n6363055357: 5 1 50 630 55 353 2\\n122461385: 7 65 9 342 92 1 4 3 3 7 1\\n2550188: 3 249 2 3 32 686 6\\n4577175: 255 4 6 433 3 53 43\\n33759306506: 8 975 2 34 6 8 253 6 28\\n1561680: 6 636 522 90 4\\n30522: 16 286 85 3 227 7\\n526616: 4 76 7 6 2 9 6 9 3 147 6 3\\n65889600992: 40 65 37 32 530 989\\n1534478: 55 7 9 9 3 3 53 6 77\\n15191672: 53 450 7 2 77 7 62 8\\n1210940886: 954 55 3 3 52 21 4\\n13860: 6 4 4 495\\n64545283: 4 9 993 5 280\\n1987: 8 862 5 948 4 160\\n1120117: 373 3 96 5 149\\n71097: 6 5 842 7 6\\n52576450: 15 35 40 29 7 447\\n46339200: 4 1 7 11 45 991 18 80 5\\n5238824: 3 5 10 8 1 5 2 2 5 2 810 5\\n317724633833: 5 6 94 64 6 3 85 788 3 3\\n31608179: 31 608 17 2 8\\n20232744: 981 54 6 543 5 6 534\\n220815607: 3 450 20 6 8 1 302 8 4\\n11546010: 2 9 8 89 3 67 2 925 3 2 5\\n3636108701235: 25 424 9 98 35 1 232\\n315302: 8 285 38 8 464\\n5924: 94 53 2 7 933\\n849765642: 242 2 8 51 5 7 644\\n826611952: 7 6 30 5 631 2 239 50\\n108360853247: 393 2 6 8 892 9 19 1 45\\n14207: 7 4 4 5 7\\n171388095: 515 47 139 9 704\\n40312641: 34 2 71 349 831\\n4514720105307: 12 94 680 4 105 305\\n2141175: 17 594 8 5 6 2 690 97 8\\n39677923295: 2 85 805 57 2 694 2 95\\n773731310: 152 509 5 46 25 2 56\\n107992570: 6 32 78 928 97 60 3 70\\n274256274439: 4 5 7 6 562 740 4 32 8 1\\n715414749: 91 64 7 984 78\\n1197417200: 532 1 5 829 97 1 9 8 2 5\\n2161553468: 2 5 7 198 7 2 2 68 7 2 92\\n49243431: 879 2 599 95 28\\n918935325: 72 703 1 7 531 319\\n33335385362: 8 81 23 8 9 1 527 69\\n684178: 2 1 342 148 28\\n8469183: 2 539 491 2 8 53 6 356\\n122: 9 32 72 9 1\\n26266280341: 18 380 6 8 1 7 78 8 343\\n5970: 5 967 2 306 827\\n3403360: 33 20 7 3 6 5 6 617 59\\n27381127: 655 3 9 3 4 9 43 8 95\\n52476534: 31 6 997 22 623 282\\n4696755: 463 6 67 50 7\\n62787547: 3 71 5 4 7 2 7 70 8 283 6\\n5291265684: 550 13 3 5 9 74 6 3 14 4\\n2121: 595 3 187 85 67\\n138880: 9 459 50 4 7 711 2 56\\n54817849: 394 239 866 49 2\\n1563601289: 781 2 6 72 929 190 99\\n140227804: 933 5 9 208 48 3 8 3 7 6\\n637023080: 6 6 4 2 9 854 6 2 6 7 74 4\\n12140494: 8 92 8 7 3 90 4 96\\n995580: 6 30 612 460 9\\n11403: 6 131 7 62 43 712 19 7\\n330447882: 811 9 16 4 5 93 9 3 94\\n2343762: 9 81 64 5 6 1 938 8 1 5\\n391889880: 820 9 9 2 59 79\\n186310: 9 72 2 8 8 131 5 9 3 8 6 7\\n4933119: 65 6 376 1 2\\n15179: 7 8 976 539 1\\n312257399: 9 9 70 588 65\\n1320813: 213 7 9 81 6 9 71\\n273549927: 3 733 93 39 6 5 7 9 68 3\\n12291702279714: 82 59 4 88 1 9 477 78\\n2436240674: 8 2 87 7 60 4 6 76\\n10785445: 9 9 3 3 7 4 99 4 6 7 9 2\\n12335116: 1 30 11 5 793\\n18950033: 23 6 87 54 8\\n7549236817: 233 324 368 1 9\\n15898468: 183 2 4 9 506 71 578 2\\n60233561: 9 9 17 5 663 8\\n17320: 92 184 20 367 5\\n6039115: 44 6 46 7 246 2 3 6 7 4 5\\n6633798094: 22 8 619 92 907 94\\n107587: 95 24 9 4 87\\n1797: 17 79 424 1 30\\n15547949: 36 501 862 26 891\\n1879637864: 84 4 715 978 13 2 4\\n8274: 80 5 6 8 6 7 2 5 5 6 66 6\\n3486989908: 9 2 4 795 41 731 5 4 7\\n41375463: 2 575 60 6 5 922 5 46 3\\n2631690387: 44 20 514 8 5 5 380 1 4\\n2400: 16 14 2 25 3\\n5168317: 608 4 5 425 308 9\\n305764573: 804 6 27 7 9 5 146 573\\n21250160: 1 5 2 3 1 6 1 6 5 576 4 92\\n39682564: 4 4 7 43 11 9 1 5 6 8 4 1\\n276353: 996 1 134 13 946 25\\n4537378161: 5 53 3 388 820\\n9954471: 99 27 7 6 167 600\\n273138: 9 74 20 4 6 8 641 23 49\\n94662: 834 832 87 6 9\\n93397851736: 81 923 4 93 1 19 22 1 6\\n9198920550: 6 5 393 7 55 7 2 5 4 3 9 5\\n321566102: 2 5 5 2 6 1 974 710 5 3 2\\n13685: 263 4 124 7 5\\n790133: 1 8 2 14 4 29 5 3 9 5 729\\n7252134456: 4 22 71 9 658 5 25 7 7 4\\n8154320: 8 7 43 4 9 1 910 9 1 20 4\\n18338919: 5 735 347 72 745 4\\n17820: 74 4 75 8 8 21 6 134 9 6\\n69483: 6 8 1 91 90\\n931: 1 2 213 4 74\\n1366330766: 30 809 3 13 970 7 58\\n676: 1 4 4 8 648\\n3133329640: 13 3 504 9 4 9 79 4 6 42\\n171083286625: 891 4 2 31 4 1 1 8 3 6 28\\n246966: 4 21 8 756 958 129 60\\n20297648: 6 6 7 3 44 6 4 9 5 8 508 7\\n5225057: 68 212 773 344 41\\n14027179994: 6 4 1 5 955 16 289 459\\n103990080: 8 4 727 745 6\\n671302: 8 3 694 219 8\\n65699608894: 733 25 456 896 321\\n1105635: 6 9 4 899 504 3 7 69\\n570870: 6 63 6 2 86 5\\n578: 82 6 8 79\\n129225002999: 3 5 7 2 687 45 5 2 5 12 2\\n103359403: 96 848 50 475 4 542 3\\n769845: 676 93 74 9 96\\n657218: 43 90 4 19 4 8 42\\n83665893: 1 929 621 9 3\\n1194505835: 701 9 27 2 1 9 900 7 9 3\\n108162065: 6 9 3 6 2 575 3 6 2 6 95 5\\n244720: 535 1 6 9 3 2 4 5 640\\n2556742499: 2 872 10 75 39 1\\n655752931828: 69 4 5 282 841 9 9 25\\n6498: 1 4 218 491 8 9\\n99340: 87 2 2 94 7 38\\n311694: 2 9 645 6 8 1 1 463 558\\n475029631657: 484 23 981 1 658\\n33497633: 3 72 19 9 5 30\\n131459408: 34 5 4 895 4 17 6 9 890\\n232750424: 6 345 8 7 899 8 5 9 2 5 5\\n3223413568: 7 84 17 4 85 4 43 92 70\\n23827264489857: 3 5 2 230 1 80 6 8 98 54\\n31532868368: 5 4 7 4 5 55 1 7 733 3 5\\n1409788800: 7 60 16 270 777\\n117061444: 927 98 38 14 31 92\\n37920196: 372 554 46 4 4\\n1444763880: 2 86 5 666 559 5 84 1 6\\n18249887: 4 11 4 3 9 22 36 4 943\\n6671: 63 31 89 218 34\\n13303940615: 6 1 1 85 9 81 1 4 206 9\\n59444: 813 4 83 39 9 8 7 9 222\\n228315: 5 58 72 4 63\\n27915301332101: 858 40 4 1 271 2 6 100\\n4146: 7 31 87 840\\n6249600: 6 310 4 840\\n1272468: 513 759 4 64 7\\n116754: 26 8 49 368 95\\n442633: 50 392 6 3 3\\n63911286832: 638 5 4 57 2 867 2 4 7 2\\n1735680960: 75 3 8 2 5 6 2 24 928 31\\n7251: 9 2 47 5 25\\n9478640: 2 4 722 6 2 6 14 5 218\\n60044752: 3 70 544 4 14 7 27 8 6 5\\n2150471689359: 3 7 64 20 892 4 8 93 60\\n49985412: 555 9 3 531 2 98\\n61783: 1 32 9 52 8\\n645625404: 14 61 7 5 5 20 6 39 2 9 2\\n832940787: 1 29 7 37 586 255 8 78\\n304578945006: 4 8 5 4 3 625 36 649 6\\n2922148: 374 836 5 7 69\\n4196627: 4 1 96 62 8\\n884701: 7 1 3 8 6 46 2 1 65 9 6 3\\n1621920: 423 8 9 4 861 7 339 4 4\\n36881320: 9 8 378 3 89 464 6 70\\n14468935: 6 96 6 3 4 5 4 68 4 1 937\\n17690: 4 9 1 6 7 4 36 9 65 3 7 1\\n365512: 1 585 78 59 8\\n3446721: 7 3 609 3 50 204 5 8 22\\n46965674: 2 472 59 6 3 7 8 7 1 11\\n79473417: 7 947 3 1 2 4 52 1 7 5\\n41543073: 20 4 91 5 2 562 30 4 7 5\\n527881386: 72 3 4 7 813 85\\n4918082720: 48 279 901 82 720\\n694983565: 63 3 5 39 540 7 28 62\\n894023100: 3 9 4 2 9 4 29 4 590 90\\n804741197: 41 630 4 4 6 2 604 74 8\\n1368306: 3 2 73 91 102 3\\n58759: 30 61 645 60 4\\n5252: 7 53 6 729 5\\n2946133318: 943 74 52 8 5 5 312\\n19506: 127 9 9 65 16 31\\n22670139: 307 8 5 8 181 92 7 6 7 8\\n5038087: 3 1 3 3 7 97 813 1 79 9\\n25718497: 5 3 813 72 90 320 9 88\\n556: 8 66 83 399\\n72912: 25 90 630 459 1\\n157824203: 9 188 28 2 8 2 6 5 5 59 9\\n38172933: 5 79 16 755 8 68 3 55 7\\n36789690: 91 991 8 344 2 890 49\\n2173205801: 1 8 429 59 7 477\\n78959322: 51 9 9 16 7 1 80 9 4 34\\n1432: 3 5 6 89 90 3 5 44 37 4\\n1069353: 211 32 5 237 8 5 25 3\\n1587962: 6 10 5 9 6 9 7 6 77 7 4\\n38758381653: 758 47 39 71 5 511\\n135999705: 81 29 7 7 95 6 459 87\\n6306566550: 74 1 1 8 832 653 4 6 3 8\\n636867401: 7 9 1 9 2 3 655 36 3 9 1 3\\n285959479412: 519 1 926 32 6 2 55\\n54923: 8 36 8 19 48\\n1958: 5 8 15 5 3\\n24264745: 3 37 72 64 8 97\\n8242976: 4 7 81 3 98 751\\n26307830922: 625 2 772 317 86 922\\n1083: 859 2 211 4 7\\n402346069: 5 4 4 5 5 8 950 8 5 6 9 1\\n1185694: 210 86 413 4 42\\n31620827: 1 33 95 5 265 731 93\\n11777482: 8 15 9 81 4 8 6 9 7 474 4\\n1276080722: 73 5 5 4 818 722\\n13040: 4 3 1 11 4 1 3 723 7 5 8 2\\n3843: 9 44 84 8 3\\n124818575: 69 7 11 273 9 62 6 925\\n8298060: 5 1 542 9 47 873 3\\n333432288: 93 2 997 5 2 5 69 816\\n10180: 99 51 2 82 1\\n453822898666: 2 7 56 6 9 2 3 9 8 9 866 6\\n80157: 80 1 57\\n1791368: 43 27 96 494 9 4 6 4\\n99851232: 6 1 6 984 74 9 68 231\\n9428: 1 88 2 50 5\\n2963: 79 4 204 6 16 821 404\\n303881: 1 365 829 18 449\\n21182: 18 80 232 6 2\\n165488471: 1 78 435 369 21 72\\n123238516: 3 17 7 7 12 40 964 759\\n112534350: 8 8 9 4 3 7 74 9 96 9 8 78\\n215628810: 344 5 2 1 7 179 1 5 7 2 4\\n56226: 1 9 9 694 9\\n30: 5 4 5 7 1\\n3903698047: 85 60 4 60 586 1 44 9\\n327731040: 5 8 5 18 82 2 28 61\\n344484: 28 208 59 2 866\\n148035889: 4 5 2 8 1 25 528 553 3 1\\n851572: 9 3 9 8 9 5 45 244 4 4 3 3\\n165467563: 97 5 1 2 92 7 737 5 1 5 3\\n222169: 6 659 8 7 4 741\\n451952: 98 499 4 94 8\\n9631924: 3 321 19 2 5\\n2159303: 557 6 41 65 55\\n149959662: 54 9 952 4 25 96 65\\n458369654: 9 502 65 696 54\\n8007682481: 8 685 122 922\\n5280132984: 617 383 76 7 7 6\\n999672: 9 99 652 16 7\\n70678080: 4 50 94 535 2 55 3\\n316848391599: 5 280 8 6 391 49 6 1 3 6\\n1161615051: 1 850 3 805 2 26\\n10085844711: 881 53 7 4 66 36 54 4\\n2878911772: 9 126 314 3 8 5 14 846\\n42768993609: 86 2 7 8 443 7 5 2 1 8 2 2\\n24396335828: 8 8 946 317 4 791 4 2 5\\n1665: 2 1 3 8 11 2 9 37 81 4 1 9\\n714237: 3 34 4 269 1 6 572 1 4 7\\n18838245: 8 37 931 61 449\\n232736596858: 4 66 702 68 8 431 8 4 3\\n3107149347: 641 31 969 5 239 6\\n548767: 74 44 4 463 578\\n91616: 2 7 3 36 63 1 2 40 91 8 8\\n2400557185: 4 3 7 5 432 3 2 7 1 5 247\\n53910: 6 7 90 408 54\\n164941432740: 8 5 48 8 961 53 55 40\\n538959617: 335 7 5 7 9 61 1 5 4 2 3 5\\n328142: 572 573 385\\n1169035: 7 7 88 161 7 635\\n110043089: 3 854 1 7 767 2 8 7 4 3 2\\n3916465: 4 89 55 8 8\\n331500: 73 8 5 9 145 4 4 912 85\\n12804048811094: 277 72 642 8 110 9 4\\n3144: 5 8 8 3 6 519 221 3 753\\n267232470303: 8 64 83 6 515 30 4\\n1116681984: 9 27 6 396 304\\n28758659017: 732 41 3 54 44 65 91\\n479159: 72 46 812 5 79\\n61254284: 7 7 7 71 2 4 4 3 9 8 8 919\\n9375: 1 545 17 37 76\\n929495: 52 11 866 475 20\\n577679969: 639 645 473 2 3 8 70\\n200299662: 71 587 9 89 6\\n257143040448: 542 56 6 73 5 518 224\\n2166: 5 303 646 5\\n62124934: 887 498 9 7 11\\n289: 25 9 64\\n28038: 6 84 3 46 3\\n4388325866: 5 55 7 8 722 4 5 79 6 71\\n11873804: 3 537 1 11 67\\n139650: 5 2 6 665 5\\n3357: 968 98 7 3 8 1 5 124\\n142833599: 555 5 2 130 981\\n198440: 9 689 4 8 8\\n4536289506: 7 400 146 613 8\\n8364: 7 9 8 6 9 41 37 5 5 158 1\\n419862: 278 824 381\\n37696: 8 29 699\\n96549948: 2 8 9 7 553 1 1 2 9 4 67 9\\n182740: 905 861 8 606 2\\n36686601000: 2 8 7 8 529 3 43 4 90 5 4\\n794803: 10 316 10 2 6 9 25 79\\n2376796767: 27 44 3 9 4 5 16 5 2 6 1 5\\n18373592473: 99 3 10 4 908 681\\n8415488: 2 3 2 7 23 515 7 3 3 8\\n1751: 901 8 51 787 4\\n194616: 5 556 2 7\\n13111: 6 35 24 56 7\\n887627111: 74 85 851 2 41 1 8 8\\n1217662897: 2 42 417 557 9 6 2 9 9\\n10859940: 7 153 169 60\\n15881: 74 9 62 102 2 3 87 9 35\\n1097951128: 83 6 5 8 7 7 9 4 1 111 1 5\\n396944: 8 5 11 27 9 6 688 7\\n234367648: 3 56 25 558 7 7 4 756 5\\n21211: 1 6 6 1 7 8 9 426 7 5 6 7\\n4310184255: 1 27 716 474 72 2 57\\n360694: 1 19 124 45 6 56\\n107043843915: 4 5 92 808 8 9 73 5 4 6\\n4542060: 8 32 2 7 40 9 7 4 8 4 915\\n47372214: 666 2 7 94 644 216\\n21933258: 7 5 578 3 527 5 807 1 2\\n64801487209154: 4 914 56 492 984 134\\n5371301: 53 7 1 302\\n470: 38 51 3 2 5\\n589298: 39 30 29 216 6\\n75856: 750 8 31 22 3\\n296359: 2 35 94 1 45 259\\n1163647626: 5 26 5 799 465 87 6\\n22673304: 9 474 51 589 377 4 8 9\\n237576549: 9 18 133 796 11\\n2805396096: 6 6 5 96 17 9 5 4 6 4 562\\n371253119: 81 84 81 2 5 77 14 28 1\\n143753291258: 2 683 39 6 22 3 14 8 57\\n155: 7 81 69\\n461262213147: 508 44 6 70 8 6 6 3 54\\n18146520: 9 813 62 9 8 5\\n7078875: 698 9 8 87 5\\n4584649: 2 5 15 218 2 61 765 1\\n76872668: 825 7 2 49 95\\n2380657716148: 9 71 6 970 27 7 350\\n1303324792: 6 4 9 960 81 3 4 79 3 1\\n1460405: 1 448 1 1 3 7 398 5\\n6162: 3 5 770 3\\n5354101577: 53 1 75 68 745 345 23\\n70159078: 26 4 1 95 955 7\\n3191471037: 90 5 5 16 2 2 7 17 506 5\\n3107702724: 908 870 562 12 7\\n832273: 61 93 8 670 275\\n982: 89 60 2 6 76\\n476: 12 2 4 424 24\\n2953251: 64 2 46 5 1 2\\n8211110: 3 8 279 91 8\\n432768580: 28 224 1 69 419 160\\n453159760: 904 88 8 5 679 763\\n23117061: 7 8 2 1 94 8 1 530 3 48\\n6649: 44 3 9 5 3\\n71397820: 841 51 4 5 2 2 8 2 9 5 4 2\\n921585: 9 6 7 67 131\\n20095142: 9 5 552 56 26 884\\n1902730: 13 871 28 63 6 7 81\\n79546: 9 5 57 1 31\\n1687628: 4 2 6 1 4 8 9 6 14 40 5 28\\n485832571: 432 53 82 7 5 571\\n9789951: 815 7 5 8 3 3 8 4 8 1 779\\n1049020059: 161 387 7 65 9\\n376580: 5 7 2 7 243 8 4 80 4 4 4 1\\n8682088462: 56 517 7 3 8 2 4 4 9 16\\n10977511: 8 707 21 83 39 3 631 4\\n3515635: 8 77 3 5 5 1 3 2 5 688 1 8\\n5355467256901: 432 8 269 46 568 6 4 1\\n66606466523: 1 4 5 65 785 8 9 545 20\\n20712: 613 250 3 2 4\\n2800704: 365 99 503 3 4\\n100830939546: 283 8 5 50 6 15 8 69 34\\n87151669425: 87 1 516 6 9 415 7\\n15704889: 2 507 22 88 8 57\\n895536: 980 6 3 2 7 664 6 3 3 2 6\\n3984235528: 204 279 7 8 9 5 2 8 7 2 6\\n65724939: 7 88 61 901 162 21 81\\n948: 7 7 2 6 4 2 25 8 4 69 6\\n1713100623320: 515 9 56 7 66 32 87 36\\n170019969: 425 8 325 57 50 868\\n93: 13 6 5\\n67212: 2 3 17 65 2\\n28473271: 536 5 32 332 458 493\\n1014918744: 6 8 4 7 6 798 353 84 38\\n25595: 1 9 69 7 32 92\\n162166399920: 2 6 3 621 303 9 1 38 70\\n701: 28 65 611\\n162141: 5 6 79 64 8 1 1 41\\n50852: 737 769 5 7 67 4 8 132\\n1626457: 21 65 45 7 1 60 1 989 7\\n102: 9 2 1 2 7\\n1759: 57 6 8 5 9\\n30362: 10 12 6 5\\n41746898: 4 1 36 671 75 893 5 1\\n6772: 47 4 36 5\\n190284: 11 29 7 571 4\\n69308585561: 6 15 770 8 585 558\\n30670489: 2 30 70 1 832 8 1 1 8 8\\n991101696: 82 2 9 807 86 4 6 832\\n138642: 294 3 812 25 5 17\\n9036: 372 88 3 39 2 9\\n33025904352: 101 658 408 42 29\\n6992002556: 72 2 3 1 1 4 22 6 9 44\\n70225: 70 693 92 8 21\\n297477534328: 6 1 2 766 737 382 326\\n50224735355: 157 457 62 7 459 896\\n3825: 2 77 73 5 4 17 768\\n2851: 80 17 2 92 39 1\\n262586522: 3 6 7 61 64 865 23\\n13822325: 7 9 664 613 91 8\\n325657: 495 6 65 1 9\\n865928337: 95 808 35 13 5 696 91\\n8127778: 812 7 7 71 7\\n38769284588881: 7 6 7 823 24 67 181 6 1\\n2131021: 3 71 10 18 1\\n14857925: 5 5 98 4 4 2 255 6 389 7\\n1600130081: 4 2 660 70 1 6 6 520 4\\n203305584: 83 945 81 9 8 6 9 429 4\\n59498459286: 5 949 845 921 7 7\\n42526316: 63 750 1 46 9\\n539839141: 3 3 8 1 9 2 486 363 6 56\\n239360: 5 84 668 4 55\\n565651373: 56 5 6 505 8 70\\n1143378721: 2 3 796 798 4 8 2 4 5 9 1\\n280842: 42 34 2 98 954\\n10709754541: 5 8 2 6 9 5 66 5 5 2 3 898\\n6422: 625 9 9 5 711 1\\n11462: 1 3 186 1 60\\n33372937: 3 36 2 9 99 37\\n2479: 8 28 23 6 1\\n7397: 11 17 3 88 5\\n158451447576: 7 53 7 8 307 3 7 577\\n19064999: 21 914 4 95 1 4 2 124\\n413447: 1 95 9 1 79 471 9 6 557\\n11285120: 53 2 916 56 4\\n3246608415: 8 2 8 607 3 476 747 4 3\\n2328776: 3 8 69 8 441 2 44 6 5 5 8\\n382541280: 8 4 18 501 7 636 40\\n8869392: 5 82 8 2 6 478 5 48 49\\n1287517498: 1 6 5 916 97 1 8 7 926 7\\n420466098: 6 6 9 635 9 514 34 425\\n620681230: 78 583 313 7 3 1 1 2 7\\n12454368: 56 8 678 21 41\\n245298381: 61 9 8 7 989 688 573 8\\n351018: 6 4 9 9 466 8 38 4 7 8 4 9\\n4093997: 33 2 8 23 67 216 882\\n534600: 88 675 9\\n26508882: 4 100 1 3 3 6 72 1 86 51\\n9784837: 3 8 5 595 8 5 7 7 64 8 5\\n2958: 55 6 3 3 631 5 8 2 1 1 4 3\\n6439: 153 9 4 477 9\\n27467895: 27 4 1 666 8 2 3 1 3 252\\n174337649: 12 9 7 921 5 5 2 97 4 19\\n5134608: 4 3 834 99 4 527 82\\n9050257575: 3 291 275 75 68 7\\n5879928820: 86 4 2 8 4 171 83 7 37 6\\n789693: 7 1 8 7 626 4 3 1 923 3 6\\n10070069: 5 1 76 1 5 315 55 77 9\\n4060932: 70 58 775 87 72\\n2001586498: 68 56 977 5 538\\n15898454: 167 4 238 46 8\\n7488: 67 57 7 67 8 5\\n723672311498: 723 6 7 23 114 1 9 1\\n14043700944: 18 27 524 78 707\\n33552700029: 2 8 19 5 790 35 4 3 21 7\\n4876613295: 43 18 7 454 9 46 95\\n25219: 76 39 79 8 814 51 6 1\\n50959: 41 9 959\\n16484: 4 8 9 2 675 897 3 8 43 9\\n1700392: 56 6 55 73 7 2 35 25\\n1782: 491 5 241 79 965\\n5932765: 657 288 990 909 9 9\\n6523039529: 652 303 839 50 63 6\\n1578: 12 9 33 19 9 543\\n155450400: 38 60 974 70\\n66010180: 3 5 584 5 1 58 1 2 190\\n6495610543: 6 495 603 6 1 14 41\\n37446382: 7 8 48 57 96 1 36 8 540\\n594950978: 2 5 539 30 8 6 8 82 97 6\\n625118: 4 528 509 86 6\\n21605: 6 61 5 300 5\\n6330045: 419 213 87 5 8 1 1 32\\n6746911: 9 4 668 8 23 1\\n3087024: 6 254 4 9 9 5 4 5 329 8 9\\n16535367: 31 698 5 764 7 65 43\\n7149716: 6 6 4 1 8 31 871 1 1 507\\n799003105: 5 5 75 91 509 23 353 2\\n14185157: 4 56 9 82 890 39 34 1 7\\n6575526: 2 936 7 9 523\\n4304408: 1 7 491 2 6 4 9 5 421 1 4\\n97419: 89 4 123 98 31 1 76\\n138041695: 417 7 1 9 9 4 14 182 6 9\\n285043637736: 2 97 898 93 507 68\\n909: 6 14 17 3 3\\n11698: 1 875 938 527 5\\n2214: 517 4 8 1 1 8 4 7 4 19 94\\n2097920: 51 4 596 8 8\\n4897932: 7 7 20 212 7 83 5 8 9 6\\n3878881777: 6 651 27 86 216\\n52158: 86 7 7 80 78\\n23304: 430 3 2 9 83 1\\n4243659: 400 8 6 221 399 55 5\\n140494108418: 570 20 11 3 31 7 96 8\\n471859: 7 1 174 6 1 58 46 9 1 8 3\\n340507379: 37 8 8 492 2 7 881\\n17353039300: 948 78 6 919 168 91 9\\n443456: 40 51 609 4 9 8\\n7800578: 7 799 1 57 8\\n126307883: 59 576 212 670 6 8 52\\n17505960: 7 47 6 8 6 8 184 926 3 6\\n295005: 3 8 57 3 7 6 979 5 670 7\\n5971233880: 399 2 277 54 8 6 6 8 2\\n54974592: 7 570 7 6 5 508 32 27\\n297463168093: 9 2 1 7 9 4 3 8 685 4 8 93\\n278598: 7 630 8 1 1 9 7 7 5 146 1\\n4522732: 81 8 5 36 81 65 99\\n710531: 710 529 4\\n8125226: 25 1 18 81 62 652\\n11972351: 2 4 5 93 4 345 8\\n38021570720: 692 1 5 876 8 4 8 139 7\\n5086640: 23 873 53 67 80\\n10116724: 5 4 10 374 3 5 4 2\\n606: 5 98 97 3 6\\n52567399: 6 6 60 88 761 62 7 5 9\\n41902: 3 7 9 16 120 21 1 1\\n201364: 6 9 3 29 10 3 64\\n49541: 688 9 2 4 5\\n1790: 2 257 99 5\\n1241759: 153 783 81 3 407\\n7883273373: 27 85 618 1 91 70\\n503: 358 1 9 78 58\\n365868977: 8 4 3 271 205 5 9 2 3 72\\n6887: 5 840 34 6 92 1 5 7 8 5\\n918599: 528 701 9 742 3\\n1843120864580: 4 8 9 185 229 721 6 7\\n15912846: 10 56 20 6 6 2 6 381\\n23795606629: 552 7 6 5 21 410 86 29\\n8867: 42 8 5 1 7 11 5 62\\n66356409: 818 2 8 900 409\\n84171143: 64 777 71 14 3\\n54180206992239: 3 487 6 2 3 83 59 8 4 39\\n8810079608: 17 93 1 259 95 8 9\\n66049863205: 16 9 8 491 6 76 87 205\\n5399021: 8 6 8 2 602 63 8 8\\n8506485: 50 378 7 9 1 9 7 215 9 5\\n20598790155: 50 28 1 512 8 1 3 48 54\\n45665: 32 846 52 1 9\\n2012551695: 36 748 387 1 6 9 737\\n83887148644: 792 127 834 92 644\\n1524819977: 1 3 8 5 36 43 26 3 47 9\\n839835367036: 981 5 78 780 5 2 7 36\\n4585138: 25 7 262 1 38\\n998: 17 4 12 2 488 6\\n1734480: 7 6 647 73 36\\n19088: 1 1 72 23 10\\n49240: 38 5 104 3 40\\n39100208207: 290 2 786 186 565 57\\n936031626118: 3 1 3 603 1 2 4 261 5 9 2\\n8928848124: 55 6 729 933 73 6 449\\n422326175: 57 70 74 10 77 21 5\\n12237480: 4 6 2 9 975 6 8 9 1 64 2 8\\n22630070: 3 4 4 5 8 4 1 819 3 356 3\\n69544973: 1 9 248 2 2 94 7 2\\n656880: 1 45 5 952 1 3\\n239: 1 3 8 34 7 95 39 32 6 2\\n7657248674: 6 15 5 3 1 1 6 83 660 5 9\\n1665: 5 64 24 1 8\\n1042148517: 11 558 4 210 276 4 9\\n1896138357138: 9 1 594 3 7 348 6 8 4 2 3\\n16636534: 8 8 189 4 531\\n1890763745: 9 2 738 5 6 9 2 2 4 50 9 5\\n5542542: 3 7 227 6 5 5 3 7 7 91 1 4\\n31211: 4 8 3 6 3 7 3 3 32 869 6\\n122025580: 9 173 896 549 75 579\\n26321360: 569 6 1 6 96 694 3 10 8\\n22924: 46 497 62\\n8634935898204: 6 388 998 9 155 244 1\\n52363955628036: 392 632 925 27 89 6 6\\n74576: 7 45 4 4 59\\n19299992787: 691 754 2 93 1 3 86 3\\n476016479: 4 6 28 89 9 6 47 9\\n250650658926: 6 34 7 46 398 9 993\\n10272872826: 19 4 9 2 1 2 6 87 282 6\\n12382719: 634 15 7 2 93 80 6 613\\n414849674: 52 38 8 99 74\\n6356057770: 1 9 80 546 60 57 76 8\\n1792217744: 8 96 2 2 114 63 4 2\\n708680: 801 7 62 125 55\\n86488566: 9 60 984 9 1 8\\n722465: 9 111 2 8 2 9 159 190 5\\n1498968: 311 43 1 7 2 97 38 8\\n1834803: 278 66 4 25 3\\n88279: 3 291 3 6 17 24 36 3\\n69002777: 35 51 805 77 346\\n16345119: 250 8 5 8 7 2 1 5 17 8 9 6\\n1449: 3 6 4 8 69\\n180612: 81 70 554 4 29\\n2423844: 4 855 5 1 5 814 4 9 6 6 2\\n29768: 5 832 35 20 453\\n11188320941: 7 81 8 6 286 5 1 4 79 5 5\\n71320475996: 33 72 6 7 5 2 52 759 96\\n324367: 510 318 2 1 7\\n9914: 9 5 708\\n1278883203: 970 4 103 8 2 8 2 320 3\\n1662015663: 400 37 784 7 35 693\\n122683056: 8 7 815 8 2 7 32 5 6 1 6 8\\n618433: 7 479 29 30 6 3 4\\n26375184: 6 3 6 7 493 3 6 1 61 2 72\\n16352: 424 71 16 4 8\\n127253012797: 3 1 7 790 52 3 3 9 9 84\\n237447056881: 905 298 90 279 940\\n3510371662: 3 90 9 3 716 63\\n6810091257: 9 843 68 48 55 5 57\\n13160: 97 752 91 2 7\\n9072: 27 9 38 899 757 3\\n141048429: 5 2 89 5 239 91 2 449\\n86840: 92 9 7 55 8\\n2590403191: 8 536 742 5 604\\n5280114601677: 41 4 383 5 333 2 1 680\\n6720768237: 26 1 9 32 1 27 6 2 60 36\\n142690: 55 5 82 30 4 9 9 1 9 3 10\\n1350: 56 94 9\\n6705005763: 32 8 4 2 5 7 7 5 456 8 3\\n105818400: 355 8 276 5 27\\n508269: 5 85 83 5 4 82 25 67 1 7\\n81889214674: 28 9 162 5 601 6 3 1 97\\n1633868160: 807 2 6 1 9 8 63 2 2 8 2 3\\n1612491937: 445 6 85 7 3 7 2 5 203 7\\n66097871677437: 922 7 870 28 1 8 8 160\\n1868983236: 981 6 10 40 789 6 6\\n33278882: 615 6 76 534 2\\n1623: 5 25 314 4 782\\n1236416273: 32 7 462 88 8 9 1 93 18\\n87745140: 941 3 74 15 5 84\\n2937158: 2 3 1 3 3 5 44 886 833\\n2654: 3 9 3 3 84 1 4 956 390 1\\n56114675: 7 287 44 18 77\\n185087886: 7 376 4 8 7 778 2 77 30\\n279563776: 5 2 168 2 644 92 16\\n35161621577: 6 1 5 564 28 7 997 9 73\\n5569997161: 2 3 95 8 511 971 59\\n31907809880: 59 676 762 35 8\\n14666927700: 13 245 307 5 8 99 3\\n10224058621: 2 2 64 6 8 526 3 3 832\\n209124641523: 774 5 3 5 4 3 15 7 7 9 2 4\\n7627287: 11 99 3 68 7 451 7 9\\n31847: 97 8 8 8 9 72 6 8 4 54 5 2\\n3557400: 5 3 196 242 5\\n10372128542842: 215 6 6 516 8 542 842\\n161406296569: 2 3 7 405 8 4 96 55 7 11\\n69429538310: 9 10 9 2 48 7 762 737 2\\n7349070388: 5 9 4 8 87 3 29 702 9 9 8\\n124109: 591 70 3\\n275223: 1 8 25 985 27 5 1 1 2 93\\n93181: 90 68 587 430 5\\n9218419685: 78 924 46 2 196 86\\n1043342438655: 3 87 3 8 43 46 8 6 28 8 4\\n3025113: 302 405 33 1 735\\n193655182003: 3 8 91 7 1 1 7 8 7 8 200 1\\n328798: 6 6 721 4 18 5 94 385 8\\n13952103: 8 930 9 4 78 3 5 8 5 38 4\\n68085249: 5 7 474 6 9 5 4 445 83 3\\n47989: 7 9 4 895 52 396 1 4 8 1\\n11418200500: 763 999 35 230 805\\n58: 8 45 5\\n12543: 557 7 3 831 15\\n1102632749: 9 122 75 388 2 1 749\\n440190: 68 78 67 5 9\\n244416253136: 2 9 5 7 3 8 2 48 2 5 3 137\\n539203788574: 5 8 8 14 48 8 9 612 8 9 9\\n3898931632: 7 913 69 12 61\\n6986920: 8 54 144 13 7 3 6\\n5183: 2 418 8 2 899\\n71028585: 4 402 54 818 9\\n55702470: 556 751 224 9 4 484 3\\n1593352: 4 5 526 8 42 5 8\\n16808673: 26 4 56 1 7 67 5\\n418948995: 6 23 65 9 1 371 6 8 308\\n42558707: 1 581 99 6 73\\n1114: 90 3 8 8 304 1\\n7624594: 35 41 8 9 59 360 136\\n1879869419: 4 7 19 296 75 572 367\\n105392107: 9 5 2 3 7 38 2 7 15 6 10\\n39425: 61 1 28 6 415\\n946: 58 5 3 5 5 4 1 4 63 75 3 4\\n26503137: 907 195 65 5 74 4 33\\n121640265997: 149 2 33 29 81 347\\n1336050312157: 469 3 581 29 49 59\\n196079121: 818 932 700 989 8 1\\n2572786: 7 5 81 91 38 3 8 3 4 3\\n6066829632: 8 75 6 673 9 96 30\\n45479102449: 805 9 17 83 7 9 369 4 7\\n1881087780: 3 414 2 475 76 715\\n564128512: 40 3 525 757 41 32\\n2062811875: 5 77 728 926 49 7 8\\n33632: 155 7 31\\n6069707: 2 3 70 29 130 7\\n57566793: 8 1 7 8 24 739 3 788 7\\n740946416: 4 32 54 941 86 8 959\\n152224: 628 241 6 71 3 796\\n2495: 24 78 3 3 9 2\\n1133974: 78 4 292 3 8 1 8 9 165 3\\n176823308: 9 61 3 63 12 93 51 6\\n1194161597: 90 964 4 7 197 6 32 43\\n53023851518: 6 174 7 634 85 151 5\\n145124352: 91 90 72 128 87\\n368188110675: 763 35 173 805 99\\n15018: 1 10 69 432 5\\n61075469: 3 4 6 1 187 3 2 9 7 3 1 94\\n64801192912: 80 81 1 116 3 1 2 911\\n4528048: 12 132 2 14 8 9 16 28\\n175718418351: 21 876 5 883 8 1 835 1\\n298575945: 2 98 575 9 44\\n391194: 33 44 7 9 44 38 469 9 4\\n66714: 66 57 8 9 55\\n146426934034: 76 20 5 283 5 9 2 963\\n1462: 4 1 727 2\\n27980088578: 81 62 59 27 7 83 81\\n168341241: 3 27 9 8 789 91 5 9 23 9\\n2353029: 9 5 3 9 4 9 54 6 2 3 5 9\\n5596: 80 478 4 6 8\\n1759: 96 1 6 792\\n13820532: 47 65 7 5 58\\n3282: 78 5 2 40 93 3 390\\n39641: 6 29 9 2 7\\n6221202216626: 481 489 67 2 271 976\\n3695923017: 307 993 580 2 1 8 6 9\\n639779588830: 7 1 4 32 1 27 1 4 7 833\\n460677118880: 1 921 35 423 7 76 5\\n1136300244: 981 261 579 2 3\\n15930: 2 3 5 88 15 6\\n138736991: 60 97 839 8 494 2 2\\n1215654185: 1 6 7 6 6 4 47 9 66 176 6\\n163048: 113 7 41 160 5 61 6 26\\n12547: 697 18 1\\n106568000: 813 59 8 692 175\\n42382561: 32 637 98 2 6 69 8 3\\n2570994: 9 8 6 3 4 18 110 9 8 3 9 6\\n945: 33 1 1 3 9\\n271349811: 83 3 829 578 77 9 57\\n40876: 1 751 4 700 8 11\\n100195832: 4 9 77 95 6 1 84 51\\n499013366: 5 284 7 50 50 7 9 8 2 5 4\\n48314: 212 2 58 6 482 82 2 11\\n2105198: 1 2 35 6 41 37 2 950 2\\n1059993: 4 6 59 99 4\\n17687160103: 91 71 99 24 795 30 72\\n47880503208643: 57 840 503 208 641\\n692869: 68 8 4 867 4\\n7838019: 3 915 317 726 9\\n663157956382: 685 1 2 5 684 378 374\\n12977701: 80 63 28 521 4 717\\n577084: 3 2 8 7 84 6\\n44949960: 15 725 476 90 44\\n18835663769: 87 202 6 83 5 4 9 8 77 3\\n1587871: 5 26 3 3 870\\n1097: 1 99 8 402 37 2 3\\n521926131: 869 868 5 2 81 8 6\\n4276474815: 555 956 806 4 13\\n703290455: 966 4 220 591 455\\n22985142332: 1 32 477 98 9 745 2 3 5\\n1143: 1 5 3 3 9 5 5 8 6 4 3 9\\n93605483394: 1 197 782 827 1 3 3 93\\n5679: 7 78 28 57 9\\n5197478: 3 77 8 5 819 4 2 22 221\\n2740652543: 12 434 64 84 41\\n26523: 332 6 7 8 5 9 6 4 4 3 87\\n264220: 429 4 2 5 625 41 93 7\\n331: 295 3 1 5 5 21\\n1041: 5 50 5 92 3\\n3080648: 3 9 9 1 5 4 16 8 62 6 42 5\\n28887040: 1 78 8 5 4 32 2 13 80\\n17084: 3 1 610 7 4\\n44090434: 7 29 9 96 8 7 9 38 7 80\\n304601158410771: 600 1 616 824 107 7 4\\n54890328: 8 736 60 6 9 758 518\\n102297857: 12 7 3 347 6 862 4 865\\n971: 64 555 4 23 14 225 86\\n29308: 3 84 6 5 399 7\\n3028880328: 9 662 5 493 5 803 26 2\\n13007976: 4 228 9 635 85\\n20407: 2 4 4 3 55 39 1 4 35 560\\n43686567836: 51 86 1 815 8 29 971 4\\n1724327218: 918 8 541 434 82\\n128448: 85 51 2 81 4 4 48 3\\n1285: 52 251 1 4 54 15\\n13726063210: 4 8 673 8 7 7 2 6 13\\n3464299: 1 23 37 7 6 8 215 645 3\\n45742500285: 535 475 180 28 3\\n2034580: 77 3 4 793 457 4 4\\n109418200850: 1 4 488 6 6 2 75 8 8 3 9 8\\n1688245068: 779 97 333 65\\n89633: 4 40 9 500 3 2\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export const solutionMods = import.meta.glob('../advent/day*/solution.ts', {\n  eager: true,\n})\n\nexport const inputMods = import.meta.glob('../advent/day*/input*.md', {\n  eager: true,\n  query: '?raw',\n  import: 'default',\n})\n","import { createEffect, createSignal } from 'solid-js'\n\n/**\n *\n *\n *    Import parsers\n */\n\nconst pathToDay = (path: string) => {\n  return parseInt(path.split('day')[1] || '1')\n}\n\nconst parseOneInputModule = (path: string, raw: string) => {\n  const name = (path.match(/input-?(.+)\\.md$/) || [])[1] || 'Real'\n  const day = pathToDay(path)\n  return { day, name, raw }\n}\n\ntype Solution = (input: string) => string\ninterface SolutionMod {\n  part1?: Solution\n  part2?: Solution\n  answers?: [string, string][]\n}\nconst parseOneSolutionModule = (path: string, mod: SolutionMod) => {\n  const hasSolution = !!(mod.part1 || mod.part2)\n  const part1 = mod['part1'] || (() => '-')\n  const part2 = mod['part2'] || (() => '-')\n  const answers = mod['answers'] || [['', '']]\n  const day = pathToDay(path)\n  return { day, part1, part2, answers, hasSolution }\n}\n\n/**\n *\n *\n *    App state\n */\n\ntype inputData = ReturnType<typeof parseOneInputModule>\nexport type solutionData = ReturnType<typeof parseOneSolutionModule>\n\nexport const [inputs, setInputs] = createSignal<inputData[]>([])\nexport const [solutions, setSolutions] = createSignal<solutionData[]>([])\n\nexport const [day, setDay] = createSignal(1)\nexport const [inputNum, setInputNum] = createSignal(0)\n\nexport const [inputStr, setInputStr] = createSignal('')\n\nexport const [output1, setOutput1] = createSignal({ value: '', time: 0, knownGood: false })\nexport const [output2, setOutput2] = createSignal({ value: '', time: 0, knownGood: false })\n\nexport const [busy, setBusy] = createSignal(false)\nexport const [catchErrors, setCatchErrors] = createSignal(true)\n\n// helpers\nexport const setOutput = (part: 1 | 2, value = '', time = 0, knownGood = false) => {\n  if (part === 1) setOutput1({ value, time, knownGood })\n  if (part === 2) setOutput2({ value, time, knownGood })\n}\nexport const clearOutputs = () => [setOutput(1), setOutput(2)]\n\n// derived for today\nexport const todaysInputs = () => inputs().filter((input) => input.day === day())\nexport const todaysSolution = () => solutions().find((soln) => soln.day === day())\n\n/**\n *\n *\n *    Updates / reactivity\n */\n\nexport const createAllEffects = () => {\n  // input text update from manual input or day/inputNum changes\n  createEffect(() => {\n    if (inputNum() >= todaysInputs().length) return setInputNum(todaysInputs().length - 1)\n    const input = todaysInputs()[inputNum()]\n    const soln = todaysSolution()\n    if (!input || !soln) return clearOutputs()\n    setInputStr(input.raw)\n  })\n\n  // main update bit\n  createEffect(() => {\n    const soln = todaysSolution()\n    const input = inputStr()\n    if (!soln || !input) return clearOutputs()\n    const answers = soln.answers[inputNum()] || ['', '']\n\n    // run solutions in timeout so that UI library doesn't catch errors\n    setTimeout(runSolution, 0, 1, soln.part1, input, answers[0])\n    setTimeout(runSolution, 5, 2, soln.part2, input, answers[1])\n  })\n}\n\nconst runSolution = async (part: 1 | 2, sol: Solution, input: string, answer: string) => {\n  if (busy()) return\n  setBusy(true)\n  const { output, dt } = await runOneSolution(sol, input, catchErrors())\n  setOutput(part, output, dt, output === answer)\n  setBusy(false)\n}\n\nconst runOneSolution = async (solFn: Solution, input: string, shouldCatch: boolean) => {\n  const t = performance.now()\n  const output = (() => {\n    if (!shouldCatch) return String(solFn(input))\n    try {\n      return String(solFn(input))\n    } catch (err) {\n      return `Error: ${err}`\n    }\n  })()\n  return { output, dt: performance.now() - t }\n}\n\nexport const runAllSolutions = async () => {\n  if (busy()) return\n  setBusy(true)\n  clearOutputs()\n\n  const outs = ['', '']\n  const dts = [0, 0]\n  const oks = [true, true]\n  for (let i = 0; i < solutions().length; i++) {\n    const sol = solutions()[i]\n    const input = inputs().filter((input) => input.day === i + 1)[0].raw\n\n    for (let part = 0; part < 2; part++) {\n      const { output, dt } = await runOneSolution(part === 0 ? sol.part1 : sol.part2, input, true)\n      dts[part] += dt\n      const ok = output === sol.answers[0][part]\n      oks[part] &&= ok\n      outs[part] += ok ? '★' : '-'\n      setOutput((part + 1) as 1 | 2, outs[part], dts[part], oks[part])\n    }\n  }\n\n  setBusy(false)\n}\n\n/**\n *\n *\n *    HMR for solution/input modules\n */\n\nimport * as imported from './importer'\n\nconst onModuleImport = (mods: typeof imported) => {\n  setInputs(\n    Object.keys(mods.inputMods)\n      .map((path) => parseOneInputModule(path, mods.inputMods[path] as string))\n      .sort((a, b) => a.name.localeCompare(b.name))\n  )\n  setSolutions(\n    Object.keys(mods.solutionMods)\n      .map((path) => parseOneSolutionModule(path, mods.solutionMods[path] as SolutionMod))\n      .filter((soln) => soln.hasSolution)\n      .sort((a, b) => a.day - b.day)\n  )\n}\n\nif (import.meta.hot) {\n  import.meta.hot.accept('./importer', (mod) => onModuleImport(mod as unknown as typeof imported))\n}\n\n// app init\nonModuleImport(imported)\nsetDay(solutions().at(-1)?.day || 1)\n","import { output1, output2 } from '../state'\n\n//\n\nconst getOutputRows = (str = '') => {\n  const lines = str.split('\\n').length\n  return Math.min(lines, Math.max(lines, 1, 10))\n}\n\nexport const PartOutput = ({ part = 1 }) => {\n  const output = part === 1 ? output1 : output2\n  return (\n    <>\n      <div class=\"label\">\n        <h4>Part {part}:</h4>\n        <div class=\"time\">({output().time.toFixed(0)}ms)</div>\n      </div>\n\n      <textarea\n        class=\"output\"\n        disabled\n        value={output().value}\n        classList={{ 'correct-answer': output().knownGood }}\n        rows={getOutputRows(output().value)}\n      />\n    </>\n  )\n}\n","interface Props {\n  label: string\n  onClick: () => void\n  isToggled: boolean\n  classes?: Record<string, boolean>\n}\n\nexport const ToggleButton = (props: Props) => {\n  const classList = () => ({\n    ...props.classes,\n    button: true,\n    toggled: props.isToggled,\n  })\n  return (\n    <button classList={classList()} onClick={props.onClick}>\n      {props.label}\n    </button>\n  )\n}\n","import { day, inputNum, inputs, setInputNum } from '../state'\nimport { ToggleButton } from './ToggleButton'\n\n//\n\nexport const InputsNav = () => {\n  const buts = () =>\n    inputs()\n      .filter((input) => input.day === day())\n      .map((input, i) => ({\n        label: input.name,\n        isToggled: i === inputNum(),\n        onClick: () => setInputNum(i),\n        classes: { 'input-toggle': true },\n      }))\n\n  return (\n    <div class=\"label\" style=\"align-self: flex-start;\">\n      <h4>Input:</h4>\n      <br />\n      {buts().map((but) => (\n        <ToggleButton {...but} />\n      ))}\n    </div>\n  )\n}\n","import { day, setDay, solutions } from '../state'\nimport { ToggleButton } from './ToggleButton'\n\n//\n\nexport const DayButtons = () => {\n  return solutions().map((solution) => (\n    <ToggleButton\n      label={solution.day.toString().padStart(2, '0')}\n      isToggled={solution.day === day()}\n      onClick={() => setDay(solution.day)}\n    />\n  ))\n}\n","import { inputStr, setInputStr } from '../state'\n\n//\n\nconst TextArea = (props: { value: string; onUpdate: (s: string) => void }) => {\n  return <textarea rows=\"14\" value={props.value} onInput={(e) => props.onUpdate(e.target.value)} />\n}\n\nexport const InputArea = () => {\n  return <TextArea value={inputStr()} onUpdate={setInputStr} />\n}\n","import { catchErrors, setCatchErrors } from '../state'\nimport { ToggleButton } from './ToggleButton'\n\n//\n\nexport const CatchButton = () => {\n  return (\n    <div class=\"catch-area\">\n      Catch errors\n      <ToggleButton\n        label=\"x\"\n        classes={{ 'input-toggle': true, 'catch-button': true }}\n        isToggled={catchErrors()}\n        onClick={() => setCatchErrors((v) => !v)}\n      />\n    </div>\n  )\n}\n","import { runAllSolutions } from '../state'\nimport { ToggleButton } from './ToggleButton'\n\n//\n\nexport const RunAllButton = () => {\n  return (\n    <ToggleButton\n      label=\"Run all\"\n      classes={{ 'input-toggle': false, 'run-all-button': true }}\n      isToggled={false}\n      onClick={() => runAllSolutions()}\n    />\n  )\n}\n","/* @refresh reload */\n\nimport { PartOutput } from './components/PartOutput'\nimport { InputsNav } from './components/InputsNav'\nimport { DayButtons } from './components/DayButtons'\nimport { InputArea } from './components/InputArea'\nimport { createAllEffects } from './state'\nimport { CatchButton } from './components/CatchButton'\nimport { RunAllButton } from './components/RunAllButton'\n\n//\n\nexport const App = () => {\n  createAllEffects()\n\n  return (\n    <main>\n      <header>\n        <h2>Advent 2024</h2>\n      </header>\n      <article class=\"layout\">\n        {/* Day buttons */}\n        <div class=\"label\">\n          <h4>Days:</h4>\n        </div>\n        <div>\n          <DayButtons />\n          <br />\n          <RunAllButton />\n        </div>\n\n        {/* Part outputs */}\n        <PartOutput part={1} />\n        <PartOutput part={2} />\n\n        {/* Inputs */}\n        <InputsNav />\n        <InputArea />\n\n        {/* catch button */}\n        <div />\n        <CatchButton />\n      </article>\n    </main>\n  )\n}\n","import { render } from 'solid-js/web'\nimport './base.css'\nimport { App } from './App/App'\n\nconst root = document.getElementById('root')\n\nif (import.meta.env.DEV && !(root instanceof HTMLElement)) {\n  throw new Error('Missing root element')\n}\n\nrender(App, root as HTMLElement)\n"],"names":["equalFn","a","b","signalOptions","runEffects","runQueue","STALE","PENDING","UNOWNED","Owner","Transition","ExternalSourceConfig","Listener","Updates","Effects","ExecCount","createRoot","fn","detachedOwner","listener","owner","unowned","current","root","updateFn","untrack","cleanNode","runUpdates","createSignal","value","options","s","setter","writeSignal","readSignal","createRenderEffect","c","createComputation","updateComputation","createEffect","runUserEffects","updates","lookUpstream","sSlot","node","isComp","i","o","TransitionRunning","markDownstream","time","runComputation","nextValue","err","handleError","init","pure","state","runTop","ancestors","wait","res","completeUpdates","e","queue","userLength","ignore","source","index","obs","n","castError","createComponent","Comp","props","reconcileArrays","parentNode","bLength","aEnd","bEnd","aStart","bStart","after","map","sequence","t","$$EVENTS","render","code","element","disposer","dispose","insert","template","html","isImportNode","isSVG","create","delegateEvents","eventNames","document","l","name","eventHandler","setAttribute","addEventListener","handler","delegate","classList","prev","classKeys","prevKeys","len","key","toggleClassKey","classValue","parent","accessor","marker","initial","insertExpression","classNames","nameLen","oriTarget","oriCurrentTarget","retarget","handleNode","data","walkUpTree","path","unwrapArray","multi","cleanChildren","v","array","currentArray","normalizeIncomingArray","appendNodes","normalized","unwrap","dynamic","item","replacement","inserted","el","isParent","answers","part1","input","pairs","line","r","acc","part2","cts","total","nums","sign","ok","num","arr","check","copy","part","doPart","lines","get","j","dirs","row","char","di","dj","k","word","dx","dy","part1_impl","rulePairs","follows","wrongSets","ng","sum","start","seen","visited","dir","x","next","barriersByAxis","addBarrier","removeBarrier","getDistToBarrier","axis","y","barriers","barrierY","by","checkForLoop","seens","dist","ix","sacc","snum","__vite_glob_1_0","__vite_glob_1_1","__vite_glob_1_2","__vite_glob_1_3","__vite_glob_1_4","__vite_glob_1_5","__vite_glob_1_6","__vite_glob_1_7","__vite_glob_1_8","__vite_glob_1_9","__vite_glob_1_10","__vite_glob_1_11","__vite_glob_1_12","__vite_glob_1_13","__vite_glob_1_14","__vite_glob_1_15","__vite_glob_1_16","__vite_glob_1_17","__vite_glob_1_18","__vite_glob_1_19","__vite_glob_1_20","__vite_glob_1_21","__vite_glob_1_22","__vite_glob_1_23","__vite_glob_1_24","__vite_glob_1_25","__vite_glob_1_26","__vite_glob_1_27","__vite_glob_1_28","__vite_glob_1_29","__vite_glob_1_30","__vite_glob_1_31","__vite_glob_1_32","__vite_glob_1_33","__vite_glob_1_34","__vite_glob_1_35","__vite_glob_1_36","__vite_glob_1_37","__vite_glob_1_38","__vite_glob_1_39","__vite_glob_1_40","__vite_glob_1_41","__vite_glob_1_42","__vite_glob_1_43","__vite_glob_1_44","__vite_glob_1_45","__vite_glob_1_46","__vite_glob_1_47","__vite_glob_1_48","__vite_glob_1_49","__vite_glob_1_50","solutionMods","__vite_glob_0_0","__vite_glob_0_1","__vite_glob_0_2","__vite_glob_0_3","__vite_glob_0_4","__vite_glob_0_5","__vite_glob_0_6","__vite_glob_0_7","__vite_glob_0_8","__vite_glob_0_9","__vite_glob_0_10","__vite_glob_0_11","__vite_glob_0_12","__vite_glob_0_13","__vite_glob_0_14","__vite_glob_0_15","__vite_glob_0_16","__vite_glob_0_17","__vite_glob_0_18","__vite_glob_0_19","__vite_glob_0_20","__vite_glob_0_21","__vite_glob_0_22","__vite_glob_0_23","__vite_glob_0_24","inputMods","pathToDay","parseOneInputModule","raw","parseOneSolutionModule","mod","hasSolution","inputs","setInputs","solutions","setSolutions","day","setDay","inputNum","setInputNum","inputStr","setInputStr","output1","setOutput1","output2","setOutput2","busy","setBusy","catchErrors","setCatchErrors","setOutput","knownGood","clearOutputs","todaysInputs","todaysSolution","soln","createAllEffects","runSolution","sol","answer","output","dt","runOneSolution","solFn","shouldCatch","runAllSolutions","outs","dts","oks","onModuleImport","mods","imported","getOutputRows","str","split","length","Math","min","max","PartOutput","_el$","_tmpl$","_el$2","firstChild","_el$3","_el$5","nextSibling","_el$6","_el$7","_el$9","toFixed","_el$10","_tmpl$2","_$effect","_p$","_v$","_v$2","toggle","_$setAttribute","undefined","ToggleButton","classes","button","toggled","isToggled","_$addEventListener","onClick","label","_$classList","_$p","_$delegateEvents","InputsNav","buts","filter","_$createComponent","but","DayButtons","solution","toString","padStart","TextArea","$$input","onUpdate","target","InputArea","CatchButton","RunAllButton","App","_el$4","_$insert"],"mappings":"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","x_google_ignoreList":[0,1]}