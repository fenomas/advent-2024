{"version":3,"file":"index-1EBFvS5A.js","sources":["../../node_modules/.pnpm/solid-js@1.9.3/node_modules/solid-js/dist/solid.js","../../node_modules/.pnpm/solid-js@1.9.3/node_modules/solid-js/web/dist/web.js","../../src/advent/day01/solution.ts","../../src/advent/day02/solution.ts","../../src/advent/day03/solution.ts","../../src/advent/day04/solution.ts","../../src/advent/day05/solution.ts","../../src/advent/day06/solution.ts","../../src/advent/day07/solution.ts","../../src/advent/day08/solution.ts","../../src/advent/day09/solution.ts","../../src/advent/day10/solution.ts","../../src/advent/day11/solution.ts","../../src/advent/day12/solution.ts","../../src/advent/day13/solution.ts","../../src/advent/day14/solution.ts","../../src/advent/day15/solution.ts","../../src/advent/day16/solution.ts","../../src/advent/day17/solution.ts","../../node_modules/.pnpm/ts-priority-queue@0.1.1/node_modules/ts-priority-queue/src/BinaryHeapStrategy.js","../../node_modules/.pnpm/ts-priority-queue@0.1.1/node_modules/ts-priority-queue/src/PriorityQueue.js","../../node_modules/.pnpm/ts-priority-queue@0.1.1/node_modules/ts-priority-queue/index.js","../../node_modules/.pnpm/abstract-pathfinder@0.1.0/node_modules/abstract-pathfinder/dist/index.js","../../src/advent/day18/solution.ts","../../src/advent/day19/solution.ts","../../src/advent/day20/solution.ts","../../src/advent/day01/input-test.md?raw","../../src/advent/day01/input.md?raw","../../src/advent/day02/input-test.md?raw","../../src/advent/day02/input.md?raw","../../src/advent/day03/input-test.md?raw","../../src/advent/day03/input-test2.md?raw","../../src/advent/day03/input.md?raw","../../src/advent/day04/input-test.md?raw","../../src/advent/day04/input.md?raw","../../src/advent/day05/input-test.md?raw","../../src/advent/day05/input.md?raw","../../src/advent/day06/input-test.md?raw","../../src/advent/day06/input.md?raw","../../src/advent/day07/input-test.md?raw","../../src/advent/day07/input.md?raw","../../src/advent/day08/input-test.md?raw","../../src/advent/day08/input.md?raw","../../src/advent/day09/input-test.md?raw","../../src/advent/day09/input.md?raw","../../src/advent/day10/input-test.md?raw","../../src/advent/day10/input.md?raw","../../src/advent/day11/input-test.md?raw","../../src/advent/day11/input.md?raw","../../src/advent/day12/input-test.md?raw","../../src/advent/day12/input.md?raw","../../src/advent/day13/input-test.md?raw","../../src/advent/day13/input.md?raw","../../src/advent/day14/input-test.md?raw","../../src/advent/day14/input.md?raw","../../src/advent/day15/input-test.md?raw","../../src/advent/day15/input.md?raw","../../src/advent/day16/input-test.md?raw","../../src/advent/day16/input.md?raw","../../src/advent/day17/input-test.md?raw","../../src/advent/day17/input-test2.md?raw","../../src/advent/day17/input.md?raw","../../src/advent/day18/input-test.md?raw","../../src/advent/day18/input.md?raw","../../src/advent/day19/input-test.md?raw","../../src/advent/day19/input.md?raw","../../src/advent/day20/input-test.md?raw","../../src/advent/day20/input.md?raw","../../src/advent/day21/input-test.md?raw","../../src/advent/day21/input.md?raw","../../src/advent/day22/input-test.md?raw","../../src/advent/day22/input.md?raw","../../src/advent/day23/input-test.md?raw","../../src/advent/day23/input.md?raw","../../src/advent/day24/input-test.md?raw","../../src/advent/day24/input.md?raw","../../src/advent/day25/input-test.md?raw","../../src/advent/day25/input.md?raw","../../src/App/importer.ts","../../src/App/state.ts","../../src/App/components/PartOutput.tsx","../../src/App/components/ToggleButton.tsx","../../src/App/components/InputsNav.tsx","../../src/App/components/DayButtons.tsx","../../src/App/components/InputArea.tsx","../../src/App/components/CatchButton.tsx","../../src/App/components/RunAllButton.tsx","../../src/App/App.tsx","../../src/index.ts"],"sourcesContent":["let taskIdCounter = 1,\n  isCallbackScheduled = false,\n  isPerformingWork = false,\n  taskQueue = [],\n  currentTask = null,\n  shouldYieldToHost = null,\n  yieldInterval = 5,\n  deadline = 0,\n  maxYieldInterval = 300,\n  scheduleCallback = null,\n  scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n    port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = (n + m) >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;\n      else if (cmp < 0) n = k - 1;\n      else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n    timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {\n  context: undefined,\n  registry: undefined,\n  effects: undefined,\n  done: false,\n  getContextId() {\n    return getContextId(this.context.count);\n  },\n  getNextContextId() {\n    return getContextId(this.context.count++);\n  }\n};\nfunction getContextId(count) {\n  const num = String(count),\n    len = num.length - 1;\n  return sharedConfig.context.id + (len ? String.fromCharCode(96 + len) : \"\") + num;\n}\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return {\n    ...sharedConfig.context,\n    id: sharedConfig.getNextContextId(),\n    count: 0\n  };\n}\n\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst SUPPORTS_PROXY = typeof Proxy === \"function\";\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst NO_INIT = {};\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceConfig = null;\nlet Listener = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n    owner = Owner,\n    unowned = fn.length === 0,\n    current = detachedOwner === undefined ? owner : detachedOwner,\n    root = unowned\n      ? UNOWNED\n      : {\n          owned: null,\n          cleanups: null,\n          context: current ? current.context : null,\n          owner: current\n        },\n    updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    comparator: options.equals || undefined\n  };\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.tValue);\n      else value = value(s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);\n  else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);\n  else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  if (!options || !options.render) c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(\n      () => {\n        fn ? fn() : untrack(onInvalidate);\n        fn = undefined;\n      },\n      undefined,\n      false,\n      0\n    ),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0);\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction isPromise(v) {\n  return v && typeof v === \"object\" && \"then\" in v;\n}\nfunction createResource(pSource, pFetcher, pOptions) {\n  let source;\n  let fetcher;\n  let options;\n  if ((arguments.length === 2 && typeof pFetcher === \"object\") || arguments.length === 1) {\n    source = true;\n    fetcher = pSource;\n    options = pFetcher || {};\n  } else {\n    source = pSource;\n    fetcher = pFetcher;\n    options = pOptions || {};\n  }\n  let pr = null,\n    initP = NO_INIT,\n    id = null,\n    loadedUnderTransition = false,\n    scheduled = false,\n    resolved = \"initialValue\" in options,\n    dynamic = typeof source === \"function\" && createMemo(source);\n  const contexts = new Set(),\n    [value, setValue] = (options.storage || createSignal)(options.initialValue),\n    [error, setError] = createSignal(undefined),\n    [track, trigger] = createSignal(undefined, {\n      equals: false\n    }),\n    [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\n  if (sharedConfig.context) {\n    id = sharedConfig.getNextContextId();\n    if (options.ssrLoadFrom === \"initial\") initP = options.initialValue;\n    else if (sharedConfig.load && sharedConfig.has(id)) initP = sharedConfig.load(id);\n  }\n  function loadEnd(p, v, error, key) {\n    if (pr === p) {\n      pr = null;\n      key !== undefined && (resolved = true);\n      if ((p === initP || v === initP) && options.onHydrated)\n        queueMicrotask(() =>\n          options.onHydrated(key, {\n            value: v\n          })\n        );\n      initP = NO_INIT;\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          completeLoad(v, error);\n        }, false);\n      } else completeLoad(v, error);\n    }\n    return v;\n  }\n  function completeLoad(v, err) {\n    runUpdates(() => {\n      if (err === undefined) setValue(() => v);\n      setState(err !== undefined ? \"errored\" : resolved ? \"ready\" : \"unresolved\");\n      setError(err);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    }, false);\n  }\n  function read() {\n    const c = SuspenseContext && useContext(SuspenseContext),\n      v = value(),\n      err = error();\n    if (err !== undefined && !pr) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);\n          else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching !== false && scheduled) return;\n    scheduled = false;\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p =\n      initP !== NO_INIT\n        ? initP\n        : untrack(() =>\n            fetcher(lookup, {\n              value: value(),\n              refetching\n            })\n          );\n    if (!isPromise(p)) {\n      loadEnd(pr, p, undefined, lookup);\n      return p;\n    }\n    pr = p;\n    if (\"value\" in p) {\n      if (p.status === \"success\") loadEnd(pr, p.value, undefined, lookup);\n      else loadEnd(pr, undefined, castError(p.value), lookup);\n      return p;\n    }\n    scheduled = true;\n    queueMicrotask(() => (scheduled = false));\n    runUpdates(() => {\n      setState(resolved ? \"refreshing\" : \"pending\");\n      trigger();\n    }, false);\n    return p.then(\n      v => loadEnd(p, v, undefined, lookup),\n      e => loadEnd(p, undefined, castError(e), lookup)\n    );\n  }\n  Object.defineProperties(read, {\n    state: {\n      get: () => state()\n    },\n    error: {\n      get: () => error()\n    },\n    loading: {\n      get() {\n        const s = state();\n        return s === \"pending\" || s === \"refreshing\";\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        const err = error();\n        if (err && !pr) throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic) createComputed(() => load(false));\n  else load(false);\n  return [\n    read,\n    {\n      refetch: load,\n      mutate: setValue\n    }\n  ];\n}\nfunction createDeferred(source, options) {\n  let t,\n    timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(\n    () => {\n      if (!t || !t.fn)\n        t = requestCallback(\n          () => setDeferred(() => node.value),\n          timeout !== undefined\n            ? {\n                timeout\n              }\n            : undefined\n        );\n      return source();\n    },\n    undefined,\n    true\n  );\n  const [deferred, setDeferred] = createSignal(\n    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value,\n    options\n  );\n  updateComputation(node);\n  setDeferred(() =>\n    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value\n  );\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn, options) {\n  const subs = new Map();\n  const node = createComputation(\n    p => {\n      const v = source();\n      for (const [key, val] of subs.entries())\n        if (fn(key, v) !== fn(key, p)) {\n          for (const c of val.values()) {\n            c.state = STALE;\n            if (c.pure) Updates.push(c);\n            else Effects.push(c);\n          }\n        }\n      return v;\n    },\n    undefined,\n    true,\n    STALE\n  );\n  updateComputation(node);\n  return key => {\n    const listener = Listener;\n    if (listener) {\n      let l;\n      if ((l = subs.get(key))) l.add(listener);\n      else subs.set(key, (l = new Set([listener])));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(\n      key,\n      Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value\n    );\n  };\n}\nfunction batch(fn) {\n  return runUpdates(fn, false);\n}\nfunction untrack(fn) {\n  if (!ExternalSourceConfig && Listener === null) return fn();\n  const listener = Listener;\n  Listener = null;\n  try {\n    if (ExternalSourceConfig) return ExternalSourceConfig.untrack(fn);\n    return fn();\n  } finally {\n    Listener = listener;\n  }\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return prevValue;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null);\n  else if (Owner.cleanups === null) Owner.cleanups = [fn];\n  else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction catchError(fn, handler) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  Owner = createComputation(undefined, undefined, true);\n  Owner.context = {\n    ...Owner.context,\n    [ERROR]: [handler]\n  };\n  if (Transition && Transition.running) Transition.sources.add(Owner);\n  try {\n    return fn();\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = Owner.owner;\n  }\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  const prevListener = Listener;\n  Owner = o;\n  Listener = null;\n  try {\n    return runUpdates(fn, true);\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = prev;\n    Listener = prevListener;\n  }\n}\nfunction enableScheduling(scheduler = requestCallback) {\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t =\n        Transition ||\n        (Transition = {\n          sources: new Set(),\n          effects: [],\n          promises: new Set(),\n          disposed: new Set(),\n          queue: new Set(),\n          running: true\n        });\n      t.done || (t.done = new Promise(res => (t.resolve = res)));\n      t.running = true;\n    }\n    runUpdates(fn, false);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nconst [transPending, setTransPending] = /*@__PURE__*/ createSignal(false);\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createContext(defaultValue, options) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let value;\n  return Owner && Owner.context && (value = Owner.context[context.id]) !== undefined\n    ? value\n    : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  const memo = createMemo(() => resolveChildren(children()));\n  memo.toArray = () => {\n    const c = memo();\n    return Array.isArray(c) ? c : c != null ? [c] : [];\n  };\n  return memo;\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext());\n}\nfunction enableExternalSource(factory, untrack = fn => fn()) {\n  if (ExternalSourceConfig) {\n    const { factory: oldFactory, untrack: oldUntrack } = ExternalSourceConfig;\n    ExternalSourceConfig = {\n      factory: (fn, trigger) => {\n        const oldSource = oldFactory(fn, trigger);\n        const source = factory(x => oldSource.track(x), trigger);\n        return {\n          track: x => source.track(x),\n          dispose() {\n            source.dispose();\n            oldSource.dispose();\n          }\n        };\n      },\n      untrack: fn => oldUntrack(() => untrack(fn))\n    };\n  } else {\n    ExternalSourceConfig = {\n      factory,\n      untrack\n    };\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (runningTransition ? this.tState : this.state)) {\n    if ((runningTransition ? this.tState : this.state) === STALE) updateComputation(this);\n    else {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(this), false);\n      Updates = updates;\n    }\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  let current =\n    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;\n  if (!node.comparator || !node.comparator(current, value)) {\n    if (Transition) {\n      const TransitionRunning = Transition.running;\n      if (TransitionRunning || (!isComp && Transition.sources.has(node))) {\n        Transition.sources.add(node);\n        node.tValue = value;\n      }\n      if (!TransitionRunning) node.value = value;\n    } else node.value = value;\n    if (node.observers && node.observers.length) {\n      runUpdates(() => {\n        for (let i = 0; i < node.observers.length; i += 1) {\n          const o = node.observers[i];\n          const TransitionRunning = Transition && Transition.running;\n          if (TransitionRunning && Transition.disposed.has(o)) continue;\n          if (TransitionRunning ? !o.tState : !o.state) {\n            if (o.pure) Updates.push(o);\n            else Effects.push(o);\n            if (o.observers) markDownstream(o);\n          }\n          if (!TransitionRunning) o.state = STALE;\n          else o.tState = STALE;\n        }\n        if (Updates.length > 10e5) {\n          Updates = [];\n          if (false);\n          throw new Error();\n        }\n      }, false);\n    }\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const time = ExecCount;\n  runComputation(\n    node,\n    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value,\n    time\n  );\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        Listener = Owner = node;\n        runComputation(node, node.tValue, time);\n        Listener = Owner = null;\n      }, false);\n    });\n  }\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  const owner = Owner,\n    listener = Listener;\n  Listener = Owner = node;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    if (node.pure) {\n      if (Transition && Transition.running) {\n        node.tState = STALE;\n        node.tOwned && node.tOwned.forEach(cleanNode);\n        node.tOwned = undefined;\n      } else {\n        node.state = STALE;\n        node.owned && node.owned.forEach(cleanNode);\n        node.owned = null;\n      }\n    }\n    node.updatedAt = time + 1;\n    return handleError(err);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.updatedAt != null && \"observers\" in node) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: Owner ? Owner.context : null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null);\n  else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];\n      else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];\n      else Owner.owned.push(c);\n    }\n  }\n  if (ExternalSourceConfig && c.fn) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceConfig.factory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceConfig.factory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if ((runningTransition ? node.tState : node.state) === 0) return;\n  if ((runningTransition ? node.tState : node.state) === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (runningTransition ? node.tState : node.state) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n        prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if ((runningTransition ? node.tState : node.state) === STALE) {\n      updateComputation(node);\n    } else if ((runningTransition ? node.tState : node.state) === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;\n  else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!wait) Effects = null;\n    Updates = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);\n    else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition) {\n    if (!Transition.promises.size && !Transition.queue.size) {\n      const sources = Transition.sources;\n      const disposed = Transition.disposed;\n      Effects.push.apply(Effects, Transition.effects);\n      res = Transition.resolve;\n      for (const e of Effects) {\n        \"tState\" in e && (e.state = e.tState);\n        delete e.tState;\n      }\n      Transition = null;\n      runUpdates(() => {\n        for (const d of disposed) cleanNode(d);\n        for (const v of sources) {\n          v.value = v.tValue;\n          if (v.owned) {\n            for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n          }\n          if (v.tOwned) v.owned = v.tOwned;\n          delete v.tValue;\n          delete v.tOwned;\n          v.tState = 0;\n        }\n        setTransPending(false);\n      }, false);\n    } else if (Transition.running) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n  }\n  const e = Effects;\n  Effects = null;\n  if (e.length) runUpdates(() => runEffects(e), false);\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n    userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);\n    else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) {\n    if (sharedConfig.count) {\n      sharedConfig.effects || (sharedConfig.effects = []);\n      sharedConfig.effects.push(...queue.slice(0, userLength));\n      return;\n    }\n    setHydrateContext();\n  }\n  if (sharedConfig.effects && (sharedConfig.done || !sharedConfig.count)) {\n    queue = [...sharedConfig.effects, ...queue];\n    userLength += sharedConfig.effects.length;\n    delete sharedConfig.effects;\n  }\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;\n  else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      const state = runningTransition ? source.tState : source.state;\n      if (state === STALE) {\n        if (source !== ignore && (!source.updatedAt || source.updatedAt < ExecCount))\n          runTop(source);\n      } else if (state === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (runningTransition ? !o.tState : !o.state) {\n      if (runningTransition) o.tState = PENDING;\n      else o.state = PENDING;\n      if (o.pure) Updates.push(o);\n      else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n        index = node.sourceSlots.pop(),\n        obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n          s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (node.tOwned) {\n    for (i = node.tOwned.length - 1; i >= 0; i--) cleanNode(node.tOwned[i]);\n    delete node.tOwned;\n  }\n  if (Transition && Transition.running && node.pure) {\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = node.owned.length - 1; i >= 0; i--) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = node.cleanups.length - 1; i >= 0; i--) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;\n  else node.state = 0;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction castError(err) {\n  if (err instanceof Error) return err;\n  return new Error(typeof err === \"string\" ? err : \"Unknown error\", {\n    cause: err\n  });\n}\nfunction runErrors(err, fns, owner) {\n  try {\n    for (const f of fns) f(err);\n  } catch (e) {\n    handleError(e, (owner && owner.owner) || null);\n  }\n}\nfunction handleError(err, owner = Owner) {\n  const fns = ERROR && owner && owner.context && owner.context[ERROR];\n  const error = castError(err);\n  if (!fns) throw error;\n  if (Effects)\n    Effects.push({\n      fn() {\n        runErrors(error, fns, owner);\n      },\n      state: STALE\n    });\n  else runErrors(error, fns, owner);\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id, options) {\n  return function provider(props) {\n    let res;\n    createRenderEffect(\n      () =>\n        (res = untrack(() => {\n          Owner.context = {\n            ...Owner.context,\n            [id]: props.value\n          };\n          return children(() => props.children);\n        })),\n      undefined\n    );\n    return res;\n  };\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null);\n  else if (Owner.context === null || !Owner.context[ERROR]) {\n    Owner.context = {\n      ...Owner.context,\n      [ERROR]: [fn]\n    };\n    mutateContext(Owner, ERROR, [fn]);\n  } else Owner.context[ERROR].push(fn);\n}\nfunction mutateContext(o, key, value) {\n  if (o.owned) {\n    for (let i = 0; i < o.owned.length; i++) {\n      if (o.owned[i].context === o.context) mutateContext(o.owned[i], key, value);\n      if (!o.owned[i].context) {\n        o.owned[i].context = o.context;\n        mutateContext(o.owned[i], key, value);\n      } else if (!o.owned[i].context[key]) {\n        o.owned[i].context[key] = value;\n        mutateContext(o.owned[i], key, value);\n      }\n    }\n  }\n}\n\nfunction observable(input) {\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler =\n        typeof observer === \"function\" ? observer : observer.next && observer.next.bind(observer);\n      if (!handler) {\n        return {\n          unsubscribe() {}\n        };\n      }\n      const dispose = createRoot(disposer => {\n        createEffect(() => {\n          const v = input();\n          untrack(() => handler(v));\n        });\n        return disposer;\n      });\n      if (getOwner()) onCleanup(dispose);\n      return {\n        unsubscribe() {\n          dispose();\n        }\n      };\n    },\n    [Symbol.observable || \"@@observable\"]() {\n      return this;\n    }\n  };\n}\nfunction from(producer) {\n  const [s, set] = createSignal(undefined, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => (\"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub()));\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    len = 0,\n    indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n      newLen = newItems.length,\n      i,\n      j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newIndices, newIndicesNext, temp, tempdisposers, tempIndexes, start, end, newEnd, item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      } else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (\n          start = 0, end = Math.min(len, newLen);\n          start < end && items[start] === newItems[start];\n          start++\n        );\n        for (\n          end = len - 1, newEnd = newLen - 1;\n          end >= start && newEnd >= start && items[end] === newItems[newEnd];\n          end--, newEnd--\n        ) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, (len = newLen));\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    signals = [],\n    len = 0,\n    i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [],\n      newLen = newItems.length;\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newLen; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newLen;\n      items = newItems.slice(0);\n      return (mapped = mapped.slice(0, len));\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i]);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = untrack(() => Comp(props || {}));\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    if (property === $PROXY) return true;\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return !(s = typeof s === \"function\" ? s() : s) ? {} : s;\n}\nfunction resolveSources() {\n  for (let i = 0, length = this.length; i < length; ++i) {\n    const v = this[i]();\n    if (v !== undefined) return v;\n  }\n}\nfunction mergeProps(...sources) {\n  let proxy = false;\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    proxy = proxy || (!!s && $PROXY in s);\n    sources[i] = typeof s === \"function\" ? ((proxy = true), createMemo(s)) : s;\n  }\n  if (SUPPORTS_PROXY && proxy) {\n    return new Proxy(\n      {\n        get(property) {\n          for (let i = sources.length - 1; i >= 0; i--) {\n            const v = resolveSource(sources[i])[property];\n            if (v !== undefined) return v;\n          }\n        },\n        has(property) {\n          for (let i = sources.length - 1; i >= 0; i--) {\n            if (property in resolveSource(sources[i])) return true;\n          }\n          return false;\n        },\n        keys() {\n          const keys = [];\n          for (let i = 0; i < sources.length; i++)\n            keys.push(...Object.keys(resolveSource(sources[i])));\n          return [...new Set(keys)];\n        }\n      },\n      propTraps\n    );\n  }\n  const sourcesMap = {};\n  const defined = Object.create(null);\n  for (let i = sources.length - 1; i >= 0; i--) {\n    const source = sources[i];\n    if (!source) continue;\n    const sourceKeys = Object.getOwnPropertyNames(source);\n    for (let i = sourceKeys.length - 1; i >= 0; i--) {\n      const key = sourceKeys[i];\n      if (key === \"__proto__\" || key === \"constructor\") continue;\n      const desc = Object.getOwnPropertyDescriptor(source, key);\n      if (!defined[key]) {\n        defined[key] = desc.get\n          ? {\n              enumerable: true,\n              configurable: true,\n              get: resolveSources.bind((sourcesMap[key] = [desc.get.bind(source)]))\n            }\n          : desc.value !== undefined\n          ? desc\n          : undefined;\n      } else {\n        const sources = sourcesMap[key];\n        if (sources) {\n          if (desc.get) sources.push(desc.get.bind(source));\n          else if (desc.value !== undefined) sources.push(() => desc.value);\n        }\n      }\n    }\n  }\n  const target = {};\n  const definedKeys = Object.keys(defined);\n  for (let i = definedKeys.length - 1; i >= 0; i--) {\n    const key = definedKeys[i],\n      desc = defined[key];\n    if (desc && desc.get) Object.defineProperty(target, key, desc);\n    else target[key] = desc ? desc.value : undefined;\n  }\n  return target;\n}\nfunction splitProps(props, ...keys) {\n  if (SUPPORTS_PROXY && $PROXY in props) {\n    const blocked = new Set(keys.length > 1 ? keys.flat() : keys[0]);\n    const res = keys.map(k => {\n      return new Proxy(\n        {\n          get(property) {\n            return k.includes(property) ? props[property] : undefined;\n          },\n          has(property) {\n            return k.includes(property) && property in props;\n          },\n          keys() {\n            return k.filter(property => property in props);\n          }\n        },\n        propTraps\n      );\n    });\n    res.push(\n      new Proxy(\n        {\n          get(property) {\n            return blocked.has(property) ? undefined : props[property];\n          },\n          has(property) {\n            return blocked.has(property) ? false : property in props;\n          },\n          keys() {\n            return Object.keys(props).filter(k => !blocked.has(k));\n          }\n        },\n        propTraps\n      )\n    );\n    return res;\n  }\n  const otherObject = {};\n  const objects = keys.map(() => ({}));\n  for (const propName of Object.getOwnPropertyNames(props)) {\n    const desc = Object.getOwnPropertyDescriptor(props, propName);\n    const isDefaultDesc =\n      !desc.get && !desc.set && desc.enumerable && desc.writable && desc.configurable;\n    let blocked = false;\n    let objectIndex = 0;\n    for (const k of keys) {\n      if (k.includes(propName)) {\n        blocked = true;\n        isDefaultDesc\n          ? (objects[objectIndex][propName] = desc.value)\n          : Object.defineProperty(objects[objectIndex], propName, desc);\n      }\n      ++objectIndex;\n    }\n    if (!blocked) {\n      isDefaultDesc\n        ? (otherObject[propName] = desc.value)\n        : Object.defineProperty(otherObject, propName, desc);\n    }\n  }\n  return [...objects, otherObject];\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      sharedConfig.count || (sharedConfig.count = 0);\n      sharedConfig.count++;\n      (p || (p = fn())).then(mod => {\n        !sharedConfig.done && setHydrateContext(ctx);\n        sharedConfig.count--;\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    }\n    let Comp;\n    return createMemo(() =>\n      (Comp = comp())\n        ? untrack(() => {\n            if (false);\n            if (!ctx || sharedConfig.done) return Comp(props);\n            const c = sharedConfig.context;\n            setHydrateContext(ctx);\n            const r = Comp(props);\n            setHydrateContext(c);\n            return r;\n          })\n        : \"\"\n    );\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => (comp = () => mod.default)), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? sharedConfig.getNextContextId() : `cl-${counter++}`;\n}\n\nconst narrowedError = name => `Stale read from <${name}>.`;\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Show(props) {\n  const keyed = props.keyed;\n  const condition = createMemo(() => props.when, undefined, {\n    equals: (a, b) => (keyed ? a === b : !a === !b)\n  });\n  return createMemo(\n    () => {\n      const c = condition();\n      if (c) {\n        const child = props.children;\n        const fn = typeof child === \"function\" && child.length > 0;\n        return fn\n          ? untrack(() =>\n              child(\n                keyed\n                  ? c\n                  : () => {\n                      if (!untrack(condition)) throw narrowedError(\"Show\");\n                      return props.when;\n                    }\n              )\n            )\n          : child;\n      }\n      return props.fallback;\n    },\n    undefined,\n    undefined\n  );\n}\nfunction Switch(props) {\n  let keyed = false;\n  const equals = (a, b) => (keyed ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2];\n  const conditions = children(() => props.children),\n    evalConditions = createMemo(\n      () => {\n        let conds = conditions();\n        if (!Array.isArray(conds)) conds = [conds];\n        for (let i = 0; i < conds.length; i++) {\n          const c = conds[i].when;\n          if (c) {\n            keyed = !!conds[i].keyed;\n            return [i, c, conds[i]];\n          }\n        }\n        return [-1];\n      },\n      undefined,\n      {\n        equals\n      }\n    );\n  return createMemo(\n    () => {\n      const [index, when, cond] = evalConditions();\n      if (index < 0) return props.fallback;\n      const c = cond.children;\n      const fn = typeof c === \"function\" && c.length > 0;\n      return fn\n        ? untrack(() =>\n            c(\n              keyed\n                ? when\n                : () => {\n                    if (untrack(evalConditions)[0] !== index) throw narrowedError(\"Match\");\n                    return cond.when;\n                  }\n            )\n          )\n        : c;\n    },\n    undefined,\n    undefined\n  );\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn());\n}\nfunction ErrorBoundary(props) {\n  let err;\n  if (sharedConfig.context && sharedConfig.load)\n    err = sharedConfig.load(sharedConfig.getContextId());\n  const [errored, setErrored] = createSignal(err, undefined);\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(\n    () => {\n      let e;\n      if ((e = errored())) {\n        const f = props.fallback;\n        return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored())) : f;\n      }\n      return catchError(() => props.children, setErrored);\n    },\n    undefined,\n    undefined\n  );\n}\n\nconst suspenseListEquals = (a, b) =>\n  a.showContent === b.showContent && a.showFallback === b.showFallback;\nconst SuspenseListContext = /* #__PURE__ */ createContext();\nfunction SuspenseList(props) {\n  let [wrapper, setWrapper] = createSignal(() => ({\n      inFallback: false\n    })),\n    show;\n  const listContext = useContext(SuspenseListContext);\n  const [registry, setRegistry] = createSignal([]);\n  if (listContext) {\n    show = listContext.register(createMemo(() => wrapper()().inFallback));\n  }\n  const resolved = createMemo(\n    prev => {\n      const reveal = props.revealOrder,\n        tail = props.tail,\n        { showContent = true, showFallback = true } = show ? show() : {},\n        reg = registry(),\n        reverse = reveal === \"backwards\";\n      if (reveal === \"together\") {\n        const all = reg.every(inFallback => !inFallback());\n        const res = reg.map(() => ({\n          showContent: all && showContent,\n          showFallback\n        }));\n        res.inFallback = !all;\n        return res;\n      }\n      let stop = false;\n      let inFallback = prev.inFallback;\n      const res = [];\n      for (let i = 0, len = reg.length; i < len; i++) {\n        const n = reverse ? len - i - 1 : i,\n          s = reg[n]();\n        if (!stop && !s) {\n          res[n] = {\n            showContent,\n            showFallback\n          };\n        } else {\n          const next = !stop;\n          if (next) inFallback = true;\n          res[n] = {\n            showContent: next,\n            showFallback: !tail || (next && tail === \"collapsed\") ? showFallback : false\n          };\n          stop = true;\n        }\n      }\n      if (!stop) inFallback = false;\n      res.inFallback = inFallback;\n      return res;\n    },\n    {\n      inFallback: false\n    }\n  );\n  setWrapper(() => resolved);\n  return createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        let index;\n        setRegistry(registry => {\n          index = registry.length;\n          return [...registry, inFallback];\n        });\n        return createMemo(() => resolved()[index], undefined, {\n          equals: suspenseListEquals\n        });\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n}\nfunction Suspense(props) {\n  let counter = 0,\n    show,\n    ctx,\n    p,\n    flicker,\n    error;\n  const [inFallback, setFallback] = createSignal(false),\n    SuspenseContext = getSuspenseContext(),\n    store = {\n      increment: () => {\n        if (++counter === 1) setFallback(true);\n      },\n      decrement: () => {\n        if (--counter === 0) setFallback(false);\n      },\n      inFallback,\n      effects: [],\n      resolved: false\n    },\n    owner = getOwner();\n  if (sharedConfig.context && sharedConfig.load) {\n    const key = sharedConfig.getContextId();\n    let ref = sharedConfig.load(key);\n    if (ref) {\n      if (typeof ref !== \"object\" || ref.status !== \"success\") p = ref;\n      else sharedConfig.gather(key);\n    }\n    if (p && p !== \"$$f\") {\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(\n        () => {\n          if (sharedConfig.done) return set();\n          sharedConfig.gather(key);\n          setHydrateContext(ctx);\n          set();\n          setHydrateContext();\n        },\n        err => {\n          error = err;\n          set();\n        }\n      );\n    }\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) show = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return (flicker = undefined);\n        }\n        if (ctx && p === \"$$f\") setHydrateContext();\n        const rendered = createMemo(() => props.children);\n        return createMemo(prev => {\n          const inFallback = store.inFallback(),\n            { showContent = true, showFallback = true } = show ? show() : {};\n          if ((!inFallback || (p && p !== \"$$f\")) && showContent) {\n            store.resolved = true;\n            dispose && dispose();\n            dispose = ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered();\n          }\n          if (!showFallback) return;\n          if (dispose) return prev;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"F\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\n\nconst DEV = undefined;\n\nexport {\n  $DEVCOMP,\n  $PROXY,\n  $TRACK,\n  DEV,\n  ErrorBoundary,\n  For,\n  Index,\n  Match,\n  Show,\n  Suspense,\n  SuspenseList,\n  Switch,\n  batch,\n  cancelCallback,\n  catchError,\n  children,\n  createComponent,\n  createComputed,\n  createContext,\n  createDeferred,\n  createEffect,\n  createMemo,\n  createReaction,\n  createRenderEffect,\n  createResource,\n  createRoot,\n  createSelector,\n  createSignal,\n  createUniqueId,\n  enableExternalSource,\n  enableHydration,\n  enableScheduling,\n  equalFn,\n  from,\n  getListener,\n  getOwner,\n  indexArray,\n  lazy,\n  mapArray,\n  mergeProps,\n  observable,\n  on,\n  onCleanup,\n  onError,\n  onMount,\n  requestCallback,\n  resetErrorBoundaries,\n  runWithOwner,\n  sharedConfig,\n  splitProps,\n  startTransition,\n  untrack,\n  useContext,\n  useTransition\n};\n","import {\n  createRoot,\n  createRenderEffect,\n  untrack,\n  sharedConfig,\n  enableHydration,\n  getOwner,\n  createEffect,\n  runWithOwner,\n  createMemo,\n  createSignal,\n  onCleanup,\n  splitProps\n} from \"solid-js\";\nexport {\n  ErrorBoundary,\n  For,\n  Index,\n  Match,\n  Show,\n  Suspense,\n  SuspenseList,\n  Switch,\n  createComponent,\n  createRenderEffect as effect,\n  getOwner,\n  createMemo as memo,\n  mergeProps,\n  untrack\n} from \"solid-js\";\n\nconst booleans = [\n  \"allowfullscreen\",\n  \"async\",\n  \"autofocus\",\n  \"autoplay\",\n  \"checked\",\n  \"controls\",\n  \"default\",\n  \"disabled\",\n  \"formnovalidate\",\n  \"hidden\",\n  \"indeterminate\",\n  \"inert\",\n  \"ismap\",\n  \"loop\",\n  \"multiple\",\n  \"muted\",\n  \"nomodule\",\n  \"novalidate\",\n  \"open\",\n  \"playsinline\",\n  \"readonly\",\n  \"required\",\n  \"reversed\",\n  \"seamless\",\n  \"selected\"\n];\nconst Properties = /*#__PURE__*/ new Set([\n  \"className\",\n  \"value\",\n  \"readOnly\",\n  \"formNoValidate\",\n  \"isMap\",\n  \"noModule\",\n  \"playsInline\",\n  ...booleans\n]);\nconst ChildProperties = /*#__PURE__*/ new Set([\n  \"innerHTML\",\n  \"textContent\",\n  \"innerText\",\n  \"children\"\n]);\nconst Aliases = /*#__PURE__*/ Object.assign(Object.create(null), {\n  className: \"class\",\n  htmlFor: \"for\"\n});\nconst PropAliases = /*#__PURE__*/ Object.assign(Object.create(null), {\n  class: \"className\",\n  formnovalidate: {\n    $: \"formNoValidate\",\n    BUTTON: 1,\n    INPUT: 1\n  },\n  ismap: {\n    $: \"isMap\",\n    IMG: 1\n  },\n  nomodule: {\n    $: \"noModule\",\n    SCRIPT: 1\n  },\n  playsinline: {\n    $: \"playsInline\",\n    VIDEO: 1\n  },\n  readonly: {\n    $: \"readOnly\",\n    INPUT: 1,\n    TEXTAREA: 1\n  }\n});\nfunction getPropAlias(prop, tagName) {\n  const a = PropAliases[prop];\n  return typeof a === \"object\" ? (a[tagName] ? a[\"$\"] : undefined) : a;\n}\nconst DelegatedEvents = /*#__PURE__*/ new Set([\n  \"beforeinput\",\n  \"click\",\n  \"dblclick\",\n  \"contextmenu\",\n  \"focusin\",\n  \"focusout\",\n  \"input\",\n  \"keydown\",\n  \"keyup\",\n  \"mousedown\",\n  \"mousemove\",\n  \"mouseout\",\n  \"mouseover\",\n  \"mouseup\",\n  \"pointerdown\",\n  \"pointermove\",\n  \"pointerout\",\n  \"pointerover\",\n  \"pointerup\",\n  \"touchend\",\n  \"touchmove\",\n  \"touchstart\"\n]);\nconst SVGElements = /*#__PURE__*/ new Set([\n  \"altGlyph\",\n  \"altGlyphDef\",\n  \"altGlyphItem\",\n  \"animate\",\n  \"animateColor\",\n  \"animateMotion\",\n  \"animateTransform\",\n  \"circle\",\n  \"clipPath\",\n  \"color-profile\",\n  \"cursor\",\n  \"defs\",\n  \"desc\",\n  \"ellipse\",\n  \"feBlend\",\n  \"feColorMatrix\",\n  \"feComponentTransfer\",\n  \"feComposite\",\n  \"feConvolveMatrix\",\n  \"feDiffuseLighting\",\n  \"feDisplacementMap\",\n  \"feDistantLight\",\n  \"feDropShadow\",\n  \"feFlood\",\n  \"feFuncA\",\n  \"feFuncB\",\n  \"feFuncG\",\n  \"feFuncR\",\n  \"feGaussianBlur\",\n  \"feImage\",\n  \"feMerge\",\n  \"feMergeNode\",\n  \"feMorphology\",\n  \"feOffset\",\n  \"fePointLight\",\n  \"feSpecularLighting\",\n  \"feSpotLight\",\n  \"feTile\",\n  \"feTurbulence\",\n  \"filter\",\n  \"font\",\n  \"font-face\",\n  \"font-face-format\",\n  \"font-face-name\",\n  \"font-face-src\",\n  \"font-face-uri\",\n  \"foreignObject\",\n  \"g\",\n  \"glyph\",\n  \"glyphRef\",\n  \"hkern\",\n  \"image\",\n  \"line\",\n  \"linearGradient\",\n  \"marker\",\n  \"mask\",\n  \"metadata\",\n  \"missing-glyph\",\n  \"mpath\",\n  \"path\",\n  \"pattern\",\n  \"polygon\",\n  \"polyline\",\n  \"radialGradient\",\n  \"rect\",\n  \"set\",\n  \"stop\",\n  \"svg\",\n  \"switch\",\n  \"symbol\",\n  \"text\",\n  \"textPath\",\n  \"tref\",\n  \"tspan\",\n  \"use\",\n  \"view\",\n  \"vkern\"\n]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nconst DOMElements = /*#__PURE__*/ new Set([\n  \"html\",\n  \"base\",\n  \"head\",\n  \"link\",\n  \"meta\",\n  \"style\",\n  \"title\",\n  \"body\",\n  \"address\",\n  \"article\",\n  \"aside\",\n  \"footer\",\n  \"header\",\n  \"main\",\n  \"nav\",\n  \"section\",\n  \"body\",\n  \"blockquote\",\n  \"dd\",\n  \"div\",\n  \"dl\",\n  \"dt\",\n  \"figcaption\",\n  \"figure\",\n  \"hr\",\n  \"li\",\n  \"ol\",\n  \"p\",\n  \"pre\",\n  \"ul\",\n  \"a\",\n  \"abbr\",\n  \"b\",\n  \"bdi\",\n  \"bdo\",\n  \"br\",\n  \"cite\",\n  \"code\",\n  \"data\",\n  \"dfn\",\n  \"em\",\n  \"i\",\n  \"kbd\",\n  \"mark\",\n  \"q\",\n  \"rp\",\n  \"rt\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"small\",\n  \"span\",\n  \"strong\",\n  \"sub\",\n  \"sup\",\n  \"time\",\n  \"u\",\n  \"var\",\n  \"wbr\",\n  \"area\",\n  \"audio\",\n  \"img\",\n  \"map\",\n  \"track\",\n  \"video\",\n  \"embed\",\n  \"iframe\",\n  \"object\",\n  \"param\",\n  \"picture\",\n  \"portal\",\n  \"source\",\n  \"svg\",\n  \"math\",\n  \"canvas\",\n  \"noscript\",\n  \"script\",\n  \"del\",\n  \"ins\",\n  \"caption\",\n  \"col\",\n  \"colgroup\",\n  \"table\",\n  \"tbody\",\n  \"td\",\n  \"tfoot\",\n  \"th\",\n  \"thead\",\n  \"tr\",\n  \"button\",\n  \"datalist\",\n  \"fieldset\",\n  \"form\",\n  \"input\",\n  \"label\",\n  \"legend\",\n  \"meter\",\n  \"optgroup\",\n  \"option\",\n  \"output\",\n  \"progress\",\n  \"select\",\n  \"textarea\",\n  \"details\",\n  \"dialog\",\n  \"menu\",\n  \"summary\",\n  \"details\",\n  \"slot\",\n  \"template\",\n  \"acronym\",\n  \"applet\",\n  \"basefont\",\n  \"bgsound\",\n  \"big\",\n  \"blink\",\n  \"center\",\n  \"content\",\n  \"dir\",\n  \"font\",\n  \"frame\",\n  \"frameset\",\n  \"hgroup\",\n  \"image\",\n  \"keygen\",\n  \"marquee\",\n  \"menuitem\",\n  \"nobr\",\n  \"noembed\",\n  \"noframes\",\n  \"plaintext\",\n  \"rb\",\n  \"rtc\",\n  \"shadow\",\n  \"spacer\",\n  \"strike\",\n  \"tt\",\n  \"xmp\",\n  \"a\",\n  \"abbr\",\n  \"acronym\",\n  \"address\",\n  \"applet\",\n  \"area\",\n  \"article\",\n  \"aside\",\n  \"audio\",\n  \"b\",\n  \"base\",\n  \"basefont\",\n  \"bdi\",\n  \"bdo\",\n  \"bgsound\",\n  \"big\",\n  \"blink\",\n  \"blockquote\",\n  \"body\",\n  \"br\",\n  \"button\",\n  \"canvas\",\n  \"caption\",\n  \"center\",\n  \"cite\",\n  \"code\",\n  \"col\",\n  \"colgroup\",\n  \"content\",\n  \"data\",\n  \"datalist\",\n  \"dd\",\n  \"del\",\n  \"details\",\n  \"dfn\",\n  \"dialog\",\n  \"dir\",\n  \"div\",\n  \"dl\",\n  \"dt\",\n  \"em\",\n  \"embed\",\n  \"fieldset\",\n  \"figcaption\",\n  \"figure\",\n  \"font\",\n  \"footer\",\n  \"form\",\n  \"frame\",\n  \"frameset\",\n  \"head\",\n  \"header\",\n  \"hgroup\",\n  \"hr\",\n  \"html\",\n  \"i\",\n  \"iframe\",\n  \"image\",\n  \"img\",\n  \"input\",\n  \"ins\",\n  \"kbd\",\n  \"keygen\",\n  \"label\",\n  \"legend\",\n  \"li\",\n  \"link\",\n  \"main\",\n  \"map\",\n  \"mark\",\n  \"marquee\",\n  \"menu\",\n  \"menuitem\",\n  \"meta\",\n  \"meter\",\n  \"nav\",\n  \"nobr\",\n  \"noembed\",\n  \"noframes\",\n  \"noscript\",\n  \"object\",\n  \"ol\",\n  \"optgroup\",\n  \"option\",\n  \"output\",\n  \"p\",\n  \"param\",\n  \"picture\",\n  \"plaintext\",\n  \"portal\",\n  \"pre\",\n  \"progress\",\n  \"q\",\n  \"rb\",\n  \"rp\",\n  \"rt\",\n  \"rtc\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"script\",\n  \"section\",\n  \"select\",\n  \"shadow\",\n  \"slot\",\n  \"small\",\n  \"source\",\n  \"spacer\",\n  \"span\",\n  \"strike\",\n  \"strong\",\n  \"style\",\n  \"sub\",\n  \"summary\",\n  \"sup\",\n  \"table\",\n  \"tbody\",\n  \"td\",\n  \"template\",\n  \"textarea\",\n  \"tfoot\",\n  \"th\",\n  \"thead\",\n  \"time\",\n  \"title\",\n  \"tr\",\n  \"track\",\n  \"tt\",\n  \"u\",\n  \"ul\",\n  \"var\",\n  \"video\",\n  \"wbr\",\n  \"xmp\",\n  \"input\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\"\n]);\n\nfunction reconcileArrays(parentNode, a, b) {\n  let bLength = b.length,\n    aEnd = a.length,\n    bEnd = bLength,\n    aStart = 0,\n    bStart = 0,\n    after = a[aEnd - 1].nextSibling,\n    map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n      continue;\n    }\n    while (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? (bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart]) : after;\n      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a[aStart])) a[aStart].remove();\n        aStart++;\n      }\n    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      const node = a[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      const index = map.get(a[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i = aStart,\n            sequence = 1,\n            t;\n          while (++i < aEnd && i < bEnd) {\n            if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a[aStart];\n            while (bStart < index) parentNode.insertBefore(b[bStart++], node);\n          } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n        } else aStart++;\n      } else a[aStart++].remove();\n    }\n  }\n}\n\nconst $$EVENTS = \"_$DX_DELEGATE\";\nfunction render(code, element, init, options = {}) {\n  let disposer;\n  createRoot(dispose => {\n    disposer = dispose;\n    element === document\n      ? code()\n      : insert(element, code(), element.firstChild ? null : undefined, init);\n  }, options.owner);\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template(html, isImportNode, isSVG) {\n  let node;\n  const create = () => {\n    const t = document.createElement(\"template\");\n    t.innerHTML = html;\n    return isSVG ? t.content.firstChild.firstChild : t.content.firstChild;\n  };\n  const fn = isImportNode\n    ? () => untrack(() => document.importNode(node || (node = create()), true))\n    : () => (node || (node = create())).cloneNode(true);\n  fn.cloneNode = fn;\n  return fn;\n}\nfunction delegateEvents(eventNames, document = window.document) {\n  const e = document[$$EVENTS] || (document[$$EVENTS] = new Set());\n  for (let i = 0, l = eventNames.length; i < l; i++) {\n    const name = eventNames[i];\n    if (!e.has(name)) {\n      e.add(name);\n      document.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction clearDelegatedEvents(document = window.document) {\n  if (document[$$EVENTS]) {\n    for (let name of document[$$EVENTS].keys()) document.removeEventListener(name, eventHandler);\n    delete document[$$EVENTS];\n  }\n}\nfunction setProperty(node, name, value) {\n  if (isHydrating(node)) return;\n  node[name] = value;\n}\nfunction setAttribute(node, name, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttribute(name);\n  else node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttributeNS(namespace, name);\n  else node.setAttributeNS(namespace, name, value);\n}\nfunction setBoolAttribute(node, name, value) {\n  if (isHydrating(node)) return;\n  value ? node.setAttribute(name, \"\") : node.removeAttribute(name);\n}\nfunction className(node, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttribute(\"class\");\n  else node.className = value;\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    const handlerFn = handler[0];\n    node.addEventListener(name, (handler[0] = e => handlerFn.call(node, handler[1], e)));\n  } else node.addEventListener(name, handler, typeof handler !== \"function\" && handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value || {}),\n    prevKeys = Object.keys(prev);\n  let i, len;\n  for (i = 0, len = prevKeys.length; i < len; i++) {\n    const key = prevKeys[i];\n    if (!key || key === \"undefined\" || value[key]) continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i = 0, len = classKeys.length; i < len; i++) {\n    const key = classKeys[i],\n      classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue || !classValue) continue;\n    toggleClassKey(node, key, true);\n    prev[key] = classValue;\n  }\n  return prev;\n}\nfunction style(node, value, prev) {\n  if (!value) return prev ? setAttribute(node, \"style\") : value;\n  const nodeStyle = node.style;\n  if (typeof value === \"string\") return (nodeStyle.cssText = value);\n  typeof prev === \"string\" && (nodeStyle.cssText = prev = undefined);\n  prev || (prev = {});\n  value || (value = {});\n  let v, s;\n  for (s in prev) {\n    value[s] == null && nodeStyle.removeProperty(s);\n    delete prev[s];\n  }\n  for (s in value) {\n    v = value[s];\n    if (v !== prev[s]) {\n      nodeStyle.setProperty(s, v);\n      prev[s] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, props = {}, isSVG, skipChildren) {\n  const prevProps = {};\n  if (!skipChildren) {\n    createRenderEffect(\n      () => (prevProps.children = insertExpression(node, props.children, prevProps.children))\n    );\n  }\n  createRenderEffect(() => typeof props.ref === \"function\" && use(props.ref, node));\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));\n  return prevProps;\n}\nfunction dynamicProperty(props, key) {\n  const src = props[key];\n  Object.defineProperty(props, key, {\n    get() {\n      return src();\n    },\n    enumerable: true\n  });\n  return props;\n}\nfunction use(fn, element, arg) {\n  return untrack(() => fn(element, arg));\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== undefined && !initial) initial = [];\n  if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {\n  props || (props = {});\n  for (const prop in prevProps) {\n    if (!(prop in props)) {\n      if (prop === \"children\") continue;\n      prevProps[prop] = assignProp(node, prop, null, prevProps[prop], isSVG, skipRef, props);\n    }\n  }\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren) insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef, props);\n  }\n}\nfunction hydrate$1(code, element, options = {}) {\n  if (globalThis._$HY.done) return render(code, element, [...element.childNodes], options);\n  sharedConfig.completed = globalThis._$HY.completed;\n  sharedConfig.events = globalThis._$HY.events;\n  sharedConfig.load = id => globalThis._$HY.r[id];\n  sharedConfig.has = id => id in globalThis._$HY.r;\n  sharedConfig.gather = root => gatherHydratable(element, root);\n  sharedConfig.registry = new Map();\n  sharedConfig.context = {\n    id: options.renderId || \"\",\n    count: 0\n  };\n  try {\n    gatherHydratable(element, options.renderId);\n    return render(code, element, [...element.childNodes], options);\n  } finally {\n    sharedConfig.context = null;\n  }\n}\nfunction getNextElement(template) {\n  let node,\n    key,\n    hydrating = isHydrating();\n  if (!hydrating || !(node = sharedConfig.registry.get((key = getHydrationKey())))) {\n    return template();\n  }\n  if (sharedConfig.completed) sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction getNextMatch(el, nodeName) {\n  while (el && el.localName !== nodeName) el = el.nextSibling;\n  return el;\n}\nfunction getNextMarker(start) {\n  let end = start,\n    count = 0,\n    current = [];\n  if (isHydrating(start)) {\n    while (end) {\n      if (end.nodeType === 8) {\n        const v = end.nodeValue;\n        if (v === \"$\") count++;\n        else if (v === \"/\") {\n          if (count === 0) return [end, current];\n          count--;\n        }\n      }\n      current.push(end);\n      end = end.nextSibling;\n    }\n  }\n  return [end, current];\n}\nfunction runHydrationEvents() {\n  if (sharedConfig.events && !sharedConfig.events.queued) {\n    queueMicrotask(() => {\n      const { completed, events } = sharedConfig;\n      if (!events) return;\n      events.queued = false;\n      while (events.length) {\n        const [el, e] = events[0];\n        if (!completed.has(el)) return;\n        events.shift();\n        eventHandler(e);\n      }\n      if (sharedConfig.done) {\n        sharedConfig.events = _$HY.events = null;\n        sharedConfig.completed = _$HY.completed = null;\n      }\n    });\n    sharedConfig.events.queued = true;\n  }\n}\nfunction isHydrating(node) {\n  return !!sharedConfig.context && !sharedConfig.done && (!node || node.isConnected);\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.trim().split(/\\s+/);\n  for (let i = 0, nameLen = classNames.length; i < nameLen; i++)\n    node.classList.toggle(classNames[i], value);\n}\nfunction assignProp(node, prop, value, prev, isSVG, skipRef, props) {\n  let isCE, isProp, isChildProp, propAlias, forceProp;\n  if (prop === \"style\") return style(node, value, prev);\n  if (prop === \"classList\") return classList(node, value, prev);\n  if (value === prev) return prev;\n  if (prop === \"ref\") {\n    if (!skipRef) value(node);\n  } else if (prop.slice(0, 3) === \"on:\") {\n    const e = prop.slice(3);\n    prev && node.removeEventListener(e, prev, typeof prev !== \"function\" && prev);\n    value && node.addEventListener(e, value, typeof value !== \"function\" && value);\n  } else if (prop.slice(0, 10) === \"oncapture:\") {\n    const e = prop.slice(10);\n    prev && node.removeEventListener(e, prev, true);\n    value && node.addEventListener(e, value, true);\n  } else if (prop.slice(0, 2) === \"on\") {\n    const name = prop.slice(2).toLowerCase();\n    const delegate = DelegatedEvents.has(name);\n    if (!delegate && prev) {\n      const h = Array.isArray(prev) ? prev[0] : prev;\n      node.removeEventListener(name, h);\n    }\n    if (delegate || value) {\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    }\n  } else if (prop.slice(0, 5) === \"attr:\") {\n    setAttribute(node, prop.slice(5), value);\n  } else if (prop.slice(0, 5) === \"bool:\") {\n    setBoolAttribute(node, prop.slice(5), value);\n  } else if (\n    (forceProp = prop.slice(0, 5) === \"prop:\") ||\n    (isChildProp = ChildProperties.has(prop)) ||\n    (!isSVG &&\n      ((propAlias = getPropAlias(prop, node.tagName)) || (isProp = Properties.has(prop)))) ||\n    (isCE = node.nodeName.includes(\"-\") || \"is\" in props)\n  ) {\n    if (forceProp) {\n      prop = prop.slice(5);\n      isProp = true;\n    } else if (isHydrating(node)) return value;\n    if (prop === \"class\" || prop === \"className\") className(node, value);\n    else if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;\n    else node[propAlias || prop] = value;\n  } else {\n    const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n    if (ns) setAttributeNS(node, ns, prop, value);\n    else setAttribute(node, Aliases[prop] || prop, value);\n  }\n  return value;\n}\nfunction eventHandler(e) {\n  if (sharedConfig.registry && sharedConfig.events) {\n    if (sharedConfig.events.find(([el, ev]) => ev === e)) return;\n  }\n  let node = e.target;\n  const key = `$$${e.type}`;\n  const oriTarget = e.target;\n  const oriCurrentTarget = e.currentTarget;\n  const retarget = value =>\n    Object.defineProperty(e, \"target\", {\n      configurable: true,\n      value\n    });\n  const handleNode = () => {\n    const handler = node[key];\n    if (handler && !node.disabled) {\n      const data = node[`${key}Data`];\n      data !== undefined ? handler.call(node, data, e) : handler.call(node, e);\n      if (e.cancelBubble) return;\n    }\n    node.host &&\n      typeof node.host !== \"string\" &&\n      !node.host._$host &&\n      node.contains(e.target) &&\n      retarget(node.host);\n    return true;\n  };\n  const walkUpTree = () => {\n    while (handleNode() && (node = node._$host || node.parentNode || node.host));\n  };\n  Object.defineProperty(e, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node || document;\n    }\n  });\n  if (sharedConfig.registry && !sharedConfig.done) sharedConfig.done = _$HY.done = true;\n  if (e.composedPath) {\n    const path = e.composedPath();\n    retarget(path[0]);\n    for (let i = 0; i < path.length - 2; i++) {\n      node = path[i];\n      if (!handleNode()) break;\n      if (node._$host) {\n        node = node._$host;\n        walkUpTree();\n        break;\n      }\n      if (node.parentNode === oriCurrentTarget) {\n        break;\n      }\n    }\n  } else walkUpTree();\n  retarget(oriTarget);\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  const hydrating = isHydrating(parent);\n  if (hydrating) {\n    !current && (current = [...parent.childNodes]);\n    let cleaned = [];\n    for (let i = 0; i < current.length; i++) {\n      const node = current[i];\n      if (node.nodeType === 8 && node.data.slice(0, 2) === \"!$\") node.remove();\n      else cleaned.push(node);\n    }\n    current = cleaned;\n  }\n  while (typeof current === \"function\") current = current();\n  if (value === current) return current;\n  const t = typeof value,\n    multi = marker !== undefined;\n  parent = (multi && current[0] && current[0].parentNode) || parent;\n  if (t === \"string\" || t === \"number\") {\n    if (hydrating) return current;\n    if (t === \"number\") {\n      value = value.toString();\n      if (value === current) return current;\n    }\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data !== value && (node.data = value);\n      } else node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else current = parent.textContent = value;\n    }\n  } else if (value == null || t === \"boolean\") {\n    if (hydrating) return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\") v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    const currentArray = current && Array.isArray(current);\n    if (normalizeIncomingArray(array, value, current, unwrapArray)) {\n      createRenderEffect(() => (current = insertExpression(parent, array, current, marker, true)));\n      return () => current;\n    }\n    if (hydrating) {\n      if (!array.length) return current;\n      if (marker === undefined) return (current = [...parent.childNodes]);\n      let node = array[0];\n      if (node.parentNode !== parent) return current;\n      const nodes = [node];\n      while ((node = node.nextSibling) !== marker) nodes.push(node);\n      return (current = nodes);\n    }\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi) return current;\n    } else if (currentArray) {\n      if (current.length === 0) {\n        appendNodes(parent, array, marker);\n      } else reconcileArrays(parent, current, array);\n    } else {\n      current && cleanChildren(parent);\n      appendNodes(parent, array);\n    }\n    current = array;\n  } else if (value.nodeType) {\n    if (hydrating && value.parentNode) return (current = multi ? [value] : value);\n    if (Array.isArray(current)) {\n      if (multi) return (current = cleanChildren(parent, current, marker, value));\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else;\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, current, unwrap) {\n  let dynamic = false;\n  for (let i = 0, len = array.length; i < len; i++) {\n    let item = array[i],\n      prev = current && current[normalized.length],\n      t;\n    if (item == null || item === true || item === false);\n    else if ((t = typeof item) === \"object\" && item.nodeType) {\n      normalized.push(item);\n    } else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item, prev) || dynamic;\n    } else if (t === \"function\") {\n      if (unwrap) {\n        while (typeof item === \"function\") item = item();\n        dynamic =\n          normalizeIncomingArray(\n            normalized,\n            Array.isArray(item) ? item : [item],\n            Array.isArray(prev) ? prev : [prev]\n          ) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else {\n      const value = String(item);\n      if (prev && prev.nodeType === 3 && prev.data === value) normalized.push(prev);\n      else normalized.push(document.createTextNode(value));\n    }\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker = null) {\n  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === undefined) return (parent.textContent = \"\");\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i = current.length - 1; i >= 0; i--) {\n      const el = current[i];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i)\n          isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);\n        else isParent && el.remove();\n      } else inserted = true;\n    }\n  } else parent.insertBefore(node, marker);\n  return [node];\n}\nfunction gatherHydratable(element, root) {\n  const templates = element.querySelectorAll(`*[data-hk]`);\n  for (let i = 0; i < templates.length; i++) {\n    const node = templates[i];\n    const key = node.getAttribute(\"data-hk\");\n    if ((!root || key.startsWith(root)) && !sharedConfig.registry.has(key))\n      sharedConfig.registry.set(key, node);\n  }\n}\nfunction getHydrationKey() {\n  return sharedConfig.getNextContextId();\n}\nfunction NoHydration(props) {\n  return sharedConfig.context ? undefined : props.children;\n}\nfunction Hydration(props) {\n  return props.children;\n}\nconst voidFn = () => undefined;\nconst RequestContext = Symbol();\nfunction innerHTML(parent, content) {\n  !sharedConfig.context && (parent.innerHTML = content);\n}\n\nfunction throwInBrowser(func) {\n  const err = new Error(`${func.name} is not supported in the browser, returning undefined`);\n  console.error(err);\n}\nfunction renderToString(fn, options) {\n  throwInBrowser(renderToString);\n}\nfunction renderToStringAsync(fn, options) {\n  throwInBrowser(renderToStringAsync);\n}\nfunction renderToStream(fn, options) {\n  throwInBrowser(renderToStream);\n}\nfunction ssr(template, ...nodes) {}\nfunction ssrElement(name, props, children, needsId) {}\nfunction ssrClassList(value) {}\nfunction ssrStyle(value) {}\nfunction ssrAttribute(key, value) {}\nfunction ssrHydrationKey() {}\nfunction resolveSSRNode(node) {}\nfunction escape(html) {}\nfunction ssrSpread(props, isSVG, skipChildren) {}\n\nconst isServer = false;\nconst isDev = false;\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nconst hydrate = (...args) => {\n  enableHydration();\n  return hydrate$1(...args);\n};\nfunction Portal(props) {\n  const { useShadow } = props,\n    marker = document.createTextNode(\"\"),\n    mount = () => props.mount || document.body,\n    owner = getOwner();\n  let content;\n  let hydrating = !!sharedConfig.context;\n  createEffect(\n    () => {\n      if (hydrating) getOwner().user = hydrating = false;\n      content || (content = runWithOwner(owner, () => createMemo(() => props.children)));\n      const el = mount();\n      if (el instanceof HTMLHeadElement) {\n        const [clean, setClean] = createSignal(false);\n        const cleanup = () => setClean(true);\n        createRoot(dispose => insert(el, () => (!clean() ? content() : dispose()), null));\n        onCleanup(cleanup);\n      } else {\n        const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG),\n          renderRoot =\n            useShadow && container.attachShadow\n              ? container.attachShadow({\n                  mode: \"open\"\n                })\n              : container;\n        Object.defineProperty(container, \"_$host\", {\n          get() {\n            return marker.parentNode;\n          },\n          configurable: true\n        });\n        insert(renderRoot, content);\n        el.appendChild(container);\n        props.ref && props.ref(container);\n        onCleanup(() => el.removeChild(container));\n      }\n    },\n    undefined,\n    {\n      render: !hydrating\n    }\n  );\n  return marker;\n}\nfunction Dynamic(props) {\n  const [p, others] = splitProps(props, [\"component\"]);\n  const cached = createMemo(() => p.component);\n  return createMemo(() => {\n    const component = cached();\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(others));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = sharedConfig.context ? getNextElement() : createElement(component, isSvg);\n        spread(el, others, isSvg);\n        return el;\n    }\n  });\n}\n\nexport {\n  Aliases,\n  voidFn as Assets,\n  ChildProperties,\n  DOMElements,\n  DelegatedEvents,\n  Dynamic,\n  Hydration,\n  voidFn as HydrationScript,\n  NoHydration,\n  Portal,\n  Properties,\n  RequestContext,\n  SVGElements,\n  SVGNamespace,\n  addEventListener,\n  assign,\n  classList,\n  className,\n  clearDelegatedEvents,\n  delegateEvents,\n  dynamicProperty,\n  escape,\n  voidFn as generateHydrationScript,\n  voidFn as getAssets,\n  getHydrationKey,\n  getNextElement,\n  getNextMarker,\n  getNextMatch,\n  getPropAlias,\n  voidFn as getRequestEvent,\n  hydrate,\n  innerHTML,\n  insert,\n  isDev,\n  isServer,\n  render,\n  renderToStream,\n  renderToString,\n  renderToStringAsync,\n  resolveSSRNode,\n  runHydrationEvents,\n  setAttribute,\n  setAttributeNS,\n  setBoolAttribute,\n  setProperty,\n  spread,\n  ssr,\n  ssrAttribute,\n  ssrClassList,\n  ssrElement,\n  ssrHydrationKey,\n  ssrSpread,\n  ssrStyle,\n  style,\n  template,\n  use,\n  voidFn as useAssets\n};\n","export const answers = [\n  ['1580061', '23046913'], // real\n  ['11', '31'],\n]\n\n//\n//\n\nexport const part1 = (input = '') => {\n  const pairs = input //\n    .split('\\n')\n    .map((line) => line.split(/\\s+/))\n\n  const l = pairs.map(([a]) => +a).sort()\n  const r = pairs.map(([, b]) => +b).sort()\n\n  return l.reduce((acc, a, i) => acc + Math.abs(a - r[i]), 0)\n}\n\n//\n\nexport const part2 = (input = '') => {\n  const pairs = input //\n    .split('\\n')\n    .map((line) => line.split(/\\s+/))\n\n  const l = pairs.map(([a]) => +a)\n  const r = pairs.map(([, b]) => +b)\n\n  const cts = { ...[0] }\n  r.forEach((n) => (cts[n] = (cts[n] || 0) + 1))\n\n  return l.reduce((acc, a) => acc + a * (cts[a] || 0), 0)\n}\n","export const answers = [\n  ['341', '404'], // real\n  ['2', '4'],\n]\n\n//\n//\n\nexport const part1 = (input = '') => {\n  return input.split('\\n').reduce((total, line) => {\n    const nums = line.split(/ +/).map((s) => +s)\n    const sign = (nums.at(-1) || 0) > nums[0] ? 1 : -1\n    const ok = [1, 2, 3].map((n) => n * sign)\n\n    const safe = nums.every((num, i, arr) => {\n      if (i === 0) return true\n      return ok.includes(num - arr[i - 1])\n    })\n    return safe ? total + 1 : total\n  }, 0)\n}\n\n//\n\nexport const part2 = (input = '') => {\n  const check = (nums: number[], ok: number[]) =>\n    nums.every((num, i, arr) => {\n      if (i === 0) return true\n      return ok.includes(num - arr[i - 1])\n    })\n\n  return input.split('\\n').reduce((total, line) => {\n    const nums = line.split(/ +/).map((s) => +s)\n    const sign = (nums.at(-1) || 0) > nums[0] ? 1 : -1\n    const ok = [1, 2, 3].map((n) => n * sign)\n\n    const safe =\n      check(nums, ok) ||\n      nums.find((num, i, arr) => {\n        const copy = [...arr]\n        copy.splice(i, 1)\n        return check(copy, ok)\n      })\n\n    return safe ? total + 1 : total\n  }, 0)\n}\n","export const answers = [\n  ['187833789', '94455185'], // real\n  ['161', '161'],\n  ['161', '48'],\n]\n\n//\n//\n\nexport const part1 = (input = '') => {\n  let total = 0\n\n  input.matchAll(/mul\\((\\d{1,3},\\d{1,3})\\)/g)?.forEach(([, nums]) => {\n    const [a, b] = nums.split(',').map((s) => +s)\n    total += a * b\n  })\n\n  return total\n}\n\n//\n\nexport const part2 = (input = '') => {\n  let total = 0\n  input = 'do()' + input\n\n  input.split(\"don't()\").forEach((part) => {\n    const [, ...doPart] = part.split('do()')\n    total += part1(doPart.join(''))\n  })\n\n  return total\n}\n","export const answers = [\n  ['2575', '2041'], // real\n  ['18', '9'],\n]\n\n//\n//\n\nexport const part1 = (input = '') => {\n  const lines = input.split('\\n').map((line) => line.split(''))\n  const get = (i = 0, j = 0) => (lines[i] && lines[i][j]) || '-'\n\n  const dirs = [\n    [1, 0],\n    [-1, 0],\n    [0, 1],\n    [0, -1],\n    [1, 1],\n    [1, -1],\n    [-1, 1],\n    [-1, -1],\n  ]\n\n  let total = 0\n  lines.forEach((row, i) => {\n    row.forEach((char, j) => {\n      if (char !== 'X') return\n      dirs.forEach(([di, dj]) => {\n        const hit = 'XMAS'.split('').every((c, k) => get(i + k * di, j + k * dj) === c)\n        if (hit) total++\n      })\n    })\n  })\n  return total\n}\n\n//\n\nexport const part2 = (input = '') => {\n  const lines = input.split('\\n').map((line) => line.split(''))\n  const get = (i = 0, j = 0) => (lines[i] && lines[i][j]) || '-'\n\n  const dirs = [\n    [1, 1],\n    [-1, -1],\n    [1, -1],\n    [-1, 1],\n  ]\n\n  let total = 0\n  lines.forEach((row, i) => {\n    row.forEach((char, j) => {\n      if (char !== 'A') return\n      const word = dirs.map(([dx, dy]) => get(i + dx, j + dy))\n      if (word[0] === word[1]) return\n      if (word.sort().join('') !== 'MMSS') return\n      total++\n    })\n  })\n\n  return total\n}\n","export const answers = [\n  ['5964', '4719'], // real\n  ['143', '123'],\n]\n\n//\n//\n\nexport const part1 = (input = '') => part1_impl(input).total\n\nexport const part1_impl = (input = '') => {\n  const [rulePairs, data] = input.split('\\n\\n')\n\n  const follows = new Map()\n  rulePairs.split('\\n').forEach((line) => {\n    const [a, b] = line.split('|')\n    if (!follows.has(a)) follows.set(a, [])\n    follows.get(a).push(b)\n  })\n\n  let total = 0\n  const wrongSets = data\n    .split('\\n')\n    .map((line) => line.split(',').reverse())\n    .filter((nums) => {\n      const ng = new Set()\n      const ok = nums.every((a) => {\n        if (ng.has(a)) return false\n        ;(follows.get(a) || []).forEach((b = '') => ng.add(b))\n        return true\n      })\n      if (ok) total += +nums[nums.length >> 1]\n      return !ok\n    })\n  return { total, wrongSets, follows }\n}\n\nexport const part2 = (input = '') => {\n  const { wrongSets, follows } = part1_impl(input)\n\n  return wrongSets.reduce((sum, nums) => {\n    nums.sort((a, b) => {\n      if (follows.has(a) && follows.get(a).includes(b)) return -1\n      return 1\n    })\n    return sum + +nums[nums.length >> 1]\n  }, 0)\n}\n","export const answers = [\n  ['4789', '1304'], // real\n  ['41', '6'],\n]\n\n//\n//\n\nconst dirs = [\n  [-1, 0],\n  [0, 1],\n  [1, 0],\n  [0, -1],\n]\n\nconst part1_impl = (input = '') => {\n  const lines = input.split('\\n').map((line) => line.split(''))\n  const get = (i = 0, j = 0) => (lines[i] && lines[i][j]) || '-'\n\n  let start = [0, 0]\n  lines.find((row, i) => row.find((char, j) => char === '^' && (start = [i, j])))\n\n  const seen = new Set()\n  const visited = []\n  let dir = 0\n  let [i, j] = start\n  while (true) {\n    const [di, dj] = dirs[dir]\n    const x = i * lines.length + j\n    if (!seen.has(x)) visited.push([i, j])\n    seen.add(x)\n    const next = get(i + di, j + dj)\n    if (next === '-') break\n    if (next === '#') {\n      dir = (dir + 1) % 4\n    } else {\n      ;[i, j] = [i + di, j + dj]\n    }\n  }\n\n  return { visited, lines, start }\n}\n\nexport const part1 = (input = '') => part1_impl(input).visited.length\n\n//\n\nexport const part2 = (input = '') => {\n  const { visited, lines, start } = part1_impl(input)\n\n  const barriersByAxis: number[][][] = [\n    Array.from({ length: lines.length }, () => []),\n    Array.from({ length: lines.length }, () => []),\n  ]\n  const addBarrier = (i: number, j: number) => {\n    barriersByAxis[0][i].push(j)\n    barriersByAxis[1][j].push(i)\n  }\n  const removeBarrier = (i: number, j: number) => {\n    barriersByAxis[0][i] = barriersByAxis[0][i].filter((x) => x !== j)\n    barriersByAxis[1][j] = barriersByAxis[1][j].filter((x) => x !== i)\n  }\n  const getDistToBarrier = (i: number, j: number, dir: number) => {\n    const [di, dj] = dirs[dir]\n    const axis = di ? 1 : 0\n    const [x, y] = axis === 0 ? [i, j] : [j, i]\n    const barriers = barriersByAxis[axis][x]\n    const step = Math.sign(di || dj)\n    const barrierY =\n      step > 0\n        ? barriers.reduce((acc, by) => (by > y && by < acc ? by : acc), Infinity)\n        : barriers.reduce((acc, by) => (by < y && by > acc ? by : acc), -Infinity)\n    return isFinite(barrierY) ? Math.abs(barrierY - y) - 1 : -1\n  }\n\n  lines.forEach((row, i) => {\n    row.forEach((char, j) => {\n      if (char === '#') addBarrier(i, j)\n    })\n  })\n\n  const checkForLoop = () => {\n    let [i, j] = start\n    let dir = 0\n    const seens = dirs.map(() => new Set())\n    while (true) {\n      const [di, dj] = dirs[dir]\n      const seen = seens[dir]\n      const x = i * lines.length + j\n      if (seen.has(x)) return true\n      seen.add(x)\n      const dist = getDistToBarrier(i, j, dir)\n      if (dist === -1) return false\n      ;[i, j] = [i + di * dist, j + dj * dist]\n      dir = (dir + 1) % 4\n    }\n  }\n\n  let total = 0\n  if (checkForLoop()) total++\n\n  visited.shift() // starting loc\n  visited.forEach(([i, j]) => {\n    addBarrier(i, j)\n    if (checkForLoop()) total++\n    removeBarrier(i, j)\n  })\n  return total\n}\n","export const answers = [\n  ['1298103531759', '140575048428831'], // real\n  ['3749', '11387'],\n]\n\n//\n//\n\nexport const part1 = (input = '') => {\n  const check = (acc = 0, nums = [0], ix = 0): boolean => {\n    if (ix === 0) return acc === nums[0]\n    if (acc < 0 || acc !== Math.floor(acc)) return false\n    return check(acc - nums[ix], nums, ix - 1) || check(acc / nums[ix], nums, ix - 1)\n  }\n\n  return input.split('\\n').reduce((total, line) => {\n    const [res, b] = line.split(':').map((s) => s.trim())\n    const nums = b.split(/ +/).map((n) => +n)\n    const ok1 = check(+res, nums, nums.length - 1)\n    return ok1 ? total + +res : total\n  }, 0)\n}\n\nexport const part2 = (input = '') => {\n  const check = (acc = 0, nums = [0], ix = 0): boolean => {\n    if (ix === 0) return acc === nums[0]\n    if (acc < 0 || acc !== Math.floor(acc)) return false\n    const [sacc, snum] = ['' + acc, '' + nums[ix]]\n    if (sacc.endsWith(snum)) {\n      if (check(+sacc.slice(0, -snum.length), nums, ix - 1)) return true\n    }\n    return check(acc - nums[ix], nums, ix - 1) || check(acc / nums[ix], nums, ix - 1)\n  }\n\n  return input.split('\\n').reduce((total, line) => {\n    const [res, b] = line.split(':').map((s) => s.trim())\n    const nums = b.split(/ +/).map((n) => +n)\n    const ok1 = check(+res, nums, nums.length - 1)\n    return ok1 ? total + +res : total\n  }, 0)\n}\n","export const answers = [\n  ['249', '905'], // real\n  ['14', '34'],\n]\n\n//\n//\n\ntype Loc = [number, number]\n\nconst parse = (input: string) => {\n  const nodes = new Map()\n  let [si, sj] = [0, 0]\n\n  input.split('\\n').forEach((line, i) => {\n    line\n      .trim()\n      .split('')\n      .forEach((char, j) => {\n        si = Math.max(si, i + 1)\n        sj = Math.max(sj, j + 1)\n        if (char === '.') return\n        if (!nodes.has(char)) nodes.set(char, [])\n        nodes.get(char).push([i, j])\n      })\n  })\n  return { nodes, si, sj }\n}\n\nexport const part1 = (input = '') => {\n  const { nodes, si, sj } = parse(input)\n\n  const antinodes = new Set()\n  const maybeAdd = (i1 = 0, j1 = 0, i2 = 0, j2 = 0) => {\n    const [di, dj] = [i2 - i1, j2 - j1]\n    const [pi, pj] = [i1 - di, j1 - dj]\n    if (pi < 0 || pi >= si || pj < 0 || pj >= sj) return\n    antinodes.add(`${pi},${pj}`)\n  }\n\n  nodes.entries().forEach(([, locs]) => {\n    locs.forEach(([i1, j1]: Loc, i = 0) => {\n      locs.forEach(([i2, j2]: Loc, j = 0) => {\n        if (i === j) return\n        maybeAdd(i1, j1, i2, j2)\n        maybeAdd(i2, j2, i1, j1)\n      })\n    })\n  })\n  return antinodes.size\n}\n\nexport const part2 = (input = '') => {\n  const { nodes, si, sj } = parse(input)\n\n  const antinodes = new Set()\n  const maybeAdd = (i1 = 0, j1 = 0, i2 = 0, j2 = 0, mult = 1) => {\n    const [di, dj] = [i2 - i1, j2 - j1]\n    for (let k = 1; ; k++) {\n      const [pi, pj] = [i1 - di * mult * k, j1 - dj * mult * k]\n      if (pi < 0 || pi >= si || pj < 0 || pj >= sj) return\n      antinodes.add(`${pi},${pj}`)\n    }\n  }\n\n  nodes.entries().forEach(([, locs]) => {\n    locs.forEach(([i1, j1]: Loc, i = 0) => {\n      locs.forEach(([i2, j2]: Loc, j = 0) => {\n        if (i === j) return\n        maybeAdd(i1, j1, i2, j2, 1)\n        maybeAdd(i2, j2, i1, j1, 1)\n        maybeAdd(i1, j1, i2, j2, -1)\n        maybeAdd(i2, j2, i1, j1, -1)\n      })\n    })\n  })\n  return antinodes.size\n}\n","export const answers = [\n  ['6370402949053', '6398096697992'], // real\n  ['1928', '2858'],\n]\n\n//\n//\n\nexport const part1 = (input = '') => {\n  const nums: number[] = []\n  const gaps: number[] = []\n  input\n    .trim()\n    .split('')\n    .forEach((char, i) => (i % 2 ? gaps : nums).push(+char))\n\n  let checkSum = 0,\n    currNum = 0,\n    lastIx = nums.length - 1,\n    lastNum = nums.length - 1,\n    pos = 0\n\n  for (let i = 0; i < nums.length; i++) {\n    let num = nums[i]\n    while (num-- > 0) {\n      checkSum += currNum * pos++\n    }\n    currNum++\n\n    let gap = gaps[i] || 0\n    while (gap-- > 0) {\n      while (nums[lastIx] === 0) {\n        lastIx--\n        lastNum--\n      }\n      if (lastIx <= i) break\n      checkSum += lastNum * pos\n      pos++\n      nums[lastIx]--\n    }\n  }\n\n  return checkSum\n}\n\n//\n\nexport const part2 = (input = '') => {\n  const nums: number[] = []\n  const gaps: number[] = []\n  input\n    .trim()\n    .split('')\n    .forEach((char, i) => (i % 2 ? gaps : nums).push(+char))\n  const numVals = nums.map((_, i) => i)\n\n  for (let i = nums.length - 1; i > 0; i--) {\n    const num = nums[i]\n    if (num === 0) continue\n    const numVal = numVals[i]\n\n    let gapIx = 0\n    for (; gapIx < i; gapIx++) {\n      if (gaps[gapIx] >= num) break\n    }\n    if (gapIx >= i) continue\n\n    gaps[gapIx] -= num\n    nums[i] = 0\n    numVals[i] = 0\n    gaps[i] += num\n    nums.splice(gapIx + 1, 0, num)\n    numVals.splice(gapIx + 1, 0, numVal)\n    gaps.splice(gapIx, 0, 0)\n    i++\n  }\n\n  let checkSum = 0,\n    pos = 0\n  nums.forEach((num, i) => {\n    while (num-- > 0) {\n      checkSum += numVals[i] * pos\n      pos++\n    }\n    pos += gaps[i]\n  })\n  return checkSum\n}\n","export const answers = [\n  ['557', '1062'], // real\n  ['36', '81'],\n]\n\n//\n//\nconst dirs = [\n  [1, 0],\n  [-1, 0],\n  [0, 1],\n  [0, -1],\n]\n\nexport const part1 = (input = '') => {\n  const nines = new Set<string>()\n  const lines = input.split('\\n').map((line, i) =>\n    line.split('').map((char, j) => {\n      if (char === '9') nines.add([i, j].join(','))\n      return char\n    })\n  )\n  const get = (i = 0, j = 0) => (lines[i] && lines[i][j]) || '-'\n\n  return nines.keys().reduce((total, loc) => {\n    let curr = new Set<string>()\n    curr.add(loc)\n\n    for (let k = 9; k > 0; k--) {\n      const lower = new Set<string>()\n      curr.keys().forEach((loc) => {\n        const [i, j] = loc.split(',').map(Number)\n        dirs.forEach(([di, dj]) => {\n          const ht = get(i + di, j + dj)\n          if (ht === String(k - 1)) {\n            lower.add([i + di, j + dj].join(','))\n          }\n        })\n      })\n      curr = lower\n    }\n\n    return total + curr.size\n  }, 0)\n}\n\nexport const part2 = (input = '') => {\n  const nines = new Map<string, number>()\n  const lines = input.split('\\n').map((line, i) =>\n    line.split('').map((char, j) => {\n      if (char === '9') nines.set([i, j].join(','), 1)\n      return char\n    })\n  )\n  const get = (i = 0, j = 0) => (lines[i] && lines[i][j]) || '-'\n\n  let curr = nines\n  for (let k = 9; k > 0; k--) {\n    const lower = new Map<string, number>()\n    curr.entries().forEach(([loc, ct]) => {\n      const [i, j] = loc.split(',').map(Number)\n      dirs.forEach(([di, dj]) => {\n        const ht = get(i + di, j + dj)\n        if (ht === String(k - 1)) {\n          const key = [i + di, j + dj].join(',')\n          const lowerct = lower.get(key) || 0\n          lower.set(key, ct + lowerct)\n        }\n      })\n    })\n    curr = lower\n  }\n  return curr.values().reduce((a, b) => a + b)\n}\n","export const answers = [\n  ['222461', '264350935776416'], // real\n  ['55312', '65601038650482'],\n]\n\n//\n//\n\nconst impl = (input = '', iter = 1) => {\n  const xform = (num: string) => {\n    if (num === '0') return ['1', '']\n    if (num.length % 2) {\n      return [String(+num * 2024), '']\n    } else {\n      const a = num.slice(0, num.length / 2)\n      const b = num.slice(num.length / 2)\n      return [+a, +b].map(String)\n    }\n  }\n\n  const xform_cache = new Map<string, string[]>()\n  const xform_memo = (num: string) => {\n    if (xform_cache.has(num)) xform_cache.get(num)\n    const res = xform(num)\n    xform_cache.set(num, res)\n    return res\n  }\n\n  let nums = new Map<string, number>()\n  input.split(/ +/).forEach((num) => {\n    nums.set(num, (nums.get(num) || 0) + 1)\n  })\n\n  for (let i = 0; i < iter; i++) {\n    const next = new Map<string, number>()\n    nums.entries().forEach(([numStr, count]) => {\n      const [a, b] = xform_memo(numStr)\n      next.set(a, (next.get(a) || 0) + count)\n      if (b) next.set(b, (next.get(b) || 0) + count)\n    })\n    nums = next\n  }\n\n  return nums.values().reduce((a, b) => a + b, 0)\n}\n\nexport const part1 = (input = '') => impl(input, 25)\nexport const part2 = (input = '') => impl(input, 75)\n","export const answers = [\n  ['1550156', '946084'], // real\n  ['140', '80'],\n]\n\n//\n//\n\nconst dirs = [\n  [0, 1],\n  [0, -1],\n  [1, 0],\n  [-1, 0],\n]\n\nexport const part1 = (input = '') => {\n  const lines = input.split('\\n').map((line) => line.split(''))\n  const get = (i = 0, j = 0) => (lines[i] && lines[i][j]) || '-'\n\n  const marked = lines.map((line) => line.map(() => false))\n  const search = (i = 0, j = 0, char = '', onHit: (i: number, j: number) => unknown) => {\n    if (get(i, j) !== char) return\n    if (marked[i][j]) return\n    marked[i][j] = true\n    onHit(i, j)\n    dirs.forEach(([di, dj]) => search(i + di, j + dj, char, onHit))\n  }\n\n  const findPerimeter = (char: string, hits: number[][]) => {\n    let perim = 0\n    hits.forEach(([i, j]) => {\n      dirs.forEach(([di, dj]) => {\n        if (get(i + di, j + dj) !== char) perim++\n      })\n    })\n    return perim\n  }\n\n  let total = 0\n  lines.forEach((line, i) => {\n    line.forEach((char, j) => {\n      if (marked[i][j]) return\n      const hits: number[][] = []\n      search(i, j, char, (i, j) => hits.push([i, j]))\n      const perim = findPerimeter(char, hits)\n      total += perim * hits.length\n    })\n  })\n  return total\n}\n\n//\n\nexport const part2 = (input = '') => {\n  const lines = input.split('\\n').map((line) => line.split(''))\n  const get = (i = 0, j = 0) => (lines[i] && lines[i][j]) || '-'\n\n  const marked = lines.map((line) => line.map(() => false))\n  const search = (i = 0, j = 0, char = '', onHit: (i: number, j: number) => unknown) => {\n    if (get(i, j) !== char) return\n    if (marked[i][j]) return\n    marked[i][j] = true\n    onHit(i, j)\n    dirs.forEach(([di, dj]) => search(i + di, j + dj, char, onHit))\n  }\n\n  const countWalls = (char: string, hits: number[][]) => {\n    let walls = 0\n    const seen = new Set<string>()\n    hits.sort(([i1, j1], [i2, j2]) => i1 - i2 || j1 - j2)\n    hits.forEach(([i, j]) => {\n      dirs.forEach(([di, dj], dx) => {\n        if (get(i + di, j + dj) !== char) {\n          const key = [dx, i, j].join(',')\n          const n1 = [dx, i + dj, j + di].join(',')\n          const n2 = [dx, i - dj, j - di].join(',')\n          if (!seen.has(n1) && !seen.has(n2)) walls++\n          seen.add(key)\n        }\n      })\n    })\n    return walls\n  }\n\n  let total = 0\n  lines.forEach((line, i) => {\n    line.forEach((char, j) => {\n      if (marked[i][j]) return\n      const hits: number[][] = []\n      search(i, j, char, (i, j) => hits.push([i, j]))\n      const walls = countWalls(char, hits)\n      total += walls * hits.length\n    })\n  })\n  return total\n}\n","export const answers = [\n  ['29023', '96787395375634'], // real\n  ['480', '875318608908'],\n]\n\n//\n//\n\nexport const part1 = (input = '', add = 0) => {\n  let total = 0\n\n  input.split('\\n\\n').forEach((lines) => {\n    const [a, b, c] = lines.split(/\\n/).map((s) => s.split(':')[1])\n    const [ax, ay] = a.split(',').map((s) => Number(s.split('+')[1]))\n    const [bx, by] = b.split(',').map((s) => Number(s.split('+')[1]))\n    const [cx, cy] = c.split(',').map((s) => Number(s.split('=')[1]) + add)\n\n    // vec from origin along a: y = mx + b\n    const [ma, ba] = [ay / ax, 0]\n    // vec along b ending at [cx,cy]\n    const [mb, bb] = [by / bx, cy - (cx * by) / bx]\n\n    // x pos on both vectors\n    const x = (bb - ba) / (ma - mb)\n    const na = x / ax\n    const nb = (cx - x) / bx\n    if (Math.abs(na - Math.round(na)) > 0.0001) return\n\n    total += na * 3 + nb\n  })\n\n  return total\n}\n\nexport const part2 = (input = '') => part1(input, 10000000000000)\n","export const answers = [\n  ['221655456', '7858'], // real\n  ['12', '-1'],\n]\n\n//\n//\n\nexport const part1 = (input = '') => {\n  const [sx, sy] = input.length > 500 ? [101, 103] : [11, 7]\n  const dt = 100\n  const quads = [0, 0, 0, 0]\n  const mod = (a: number, b: number) => ((a % b) + b) % b\n\n  input.split('\\n').forEach((line) => {\n    const [a, b] = line.split(' ').map((s) => s.split('=')[1])\n    const [x, y] = a.split(',').map(Number)\n    const [vx, vy] = b.split(',').map(Number)\n    const [x2, y2] = [mod(x + vx * dt, sx), mod(y + vy * dt, sy)]\n    if (x2 === (sx - 1) / 2) return\n    if (y2 === (sy - 1) / 2) return\n    const ix = x2 < sx / 2 ? 0 : 1\n    const iy = y2 < sy / 2 ? 0 : 2\n    quads[ix + iy]++\n  })\n\n  return quads.reduce((a, b) => a * b, 1)\n}\n\n//\n\nconst LOG = false\n\nexport const part2 = (input = '') => {\n  const [sx, sy] = input.length > 100 ? [101, 103] : [11, 7]\n  const mod = (a: number, b: number) => ((a % b) + b) % b\n\n  const bots = input.split('\\n').map((line) => {\n    const [a, b] = line.split(' ').map((s) => s.split('=')[1])\n    const pos = a.split(',').map(Number)\n    const vel = b.split(',').map(Number)\n    return { pos, vel }\n  })\n\n  const log = (dt: number) => {\n    const txt = Array.from({ length: sy }, () => {\n      return Array.from({ length: sx }, () => 0)\n    })\n    bots.forEach(({ pos, vel }) => {\n      const x = mod(pos[0] + vel[0] * dt, sx)\n      const y = mod(pos[1] + vel[1] * dt, sy)\n      txt[y][x]++\n    })\n    const s = (n = 0) => '.123456789'[n]\n    console.clear()\n    console.log(txt.map((a) => a.map(s).join('')).join('\\n'))\n  }\n\n  const cts = Array.from(Array(sx + sy))\n  for (let dt = 5000; dt < 8000; dt++) {\n    cts.fill(0)\n    bots.forEach(({ pos, vel }) => {\n      const x = mod(pos[0] + vel[0] * dt, sx)\n      const y = mod(pos[1] + vel[1] * dt, sy)\n      cts[x]++\n      cts[sx + y]++\n    })\n    const hi = cts.reduce((acc, ct) => (ct < 15 ? acc : acc + 1), 0)\n    if (hi < 20) continue\n\n    if (LOG) log(dt)\n    return dt\n  }\n  return -1\n}\n","export const answers = [\n  ['1437174', '1437468'], // real\n  ['10092', '9021'],\n]\n\n//\n//\n\nconst dirs = {\n  '^': [-1, 0],\n  v: [1, 0], //     prettier strikes again!\n  '<': [0, -1],\n  '>': [0, 1],\n} as Record<string, [number, number]>\n\nexport const part1 = (input = '') => {\n  const [map, moves] = input.split('\\n\\n')\n  const spos = map.indexOf('@')\n  const lines = map.split('\\n').map((line) => line.split(''))\n  const get = (i = 0, j = 0) => (lines[i] && lines[i][j]) || '-'\n  const set = (i = 0, j = 0, value = '') => lines[i] && (lines[i][j] = value)\n\n  const si = lines[0].length + 1\n  const pos = [Math.floor(spos / si), spos % si]\n\n  moves.split('').forEach((char) => {\n    const move = dirs[char] || ''\n    if (!move) return\n    let [i, j] = pos\n    while (true) {\n      i += move[0]\n      j += move[1]\n      const ch = get(i, j)\n      if (ch === '#') return\n      if (ch === '.') break\n    }\n\n    set(pos[0], pos[1], '.')\n    pos[0] += move[0]\n    pos[1] += move[1]\n    set(pos[0], pos[1], '@')\n\n    while (pos[0] !== i || pos[1] !== j) {\n      set(i, j, 'O')\n      i -= move[0]\n      j -= move[1]\n    }\n  })\n\n  let total = 0\n  lines.forEach((line, i) => {\n    line.forEach((cell, j) => {\n      if (cell === 'O') total += 100 * i + j\n    })\n  })\n  return total\n}\n\n//\n\nexport const part2 = (input = '') => {\n  const mapTransform = {\n    '#': '##',\n    O: '[]',\n    '.': '..',\n    '@': '@.',\n  } as Record<string, string>\n\n  const [map, moves] = input.split('\\n\\n')\n  const spos = map.indexOf('@')\n  const lines = map.split('\\n').map((line) => {\n    return line\n      .split('')\n      .map((char) => mapTransform[char])\n      .join('')\n      .split('')\n  })\n  const get = (i = 0, j = 0) => (lines[i] && lines[i][j]) || '-'\n  const set = (i = 0, j = 0, value = '') => lines[i] && (lines[i][j] = value)\n\n  const sj = lines[0].length / 2 + 1\n  const pos = [Math.floor(spos / sj), 2 * (spos % sj)]\n\n  moves.split('').forEach((char) => {\n    const move = dirs[char] || ''\n    if (!move) return\n    const [di, dj] = move\n    const [pi, pj] = pos\n    const vert = dj === 0\n\n    const toMove = [[pi, pj]]\n    for (const [i, j] of toMove) {\n      const [mi, mj] = [i + di, j + dj]\n      const ch = get(mi, mj)\n      if (ch === '#') return\n      if (ch === '.') continue\n      toMove.push([mi, mj])\n      if (vert) {\n        if (ch === '[') toMove.push([mi, mj + 1])\n        if (ch === ']') toMove.push([mi, mj - 1])\n      }\n    }\n\n    const deduped = toMove.filter(\n      (a, i) => toMove.findIndex((b) => a[0] === b[0] && a[1] === b[1]) === i\n    )\n\n    for (let i = deduped.length - 1; i >= 0; i--) {\n      const [mi, mj] = deduped[i]\n      const ch = get(mi, mj)\n      set(mi + di, mj + dj, ch)\n      set(mi, mj, '.')\n    }\n    pos[0] += di\n    pos[1] += dj\n  })\n\n  let total = 0\n  lines.forEach((line, i) => {\n    line.forEach((cell, j) => {\n      if (cell === '[') total += 100 * i + j // wtf? directions clearly contradict this\n    })\n  })\n  return total\n}\n","export const answers = [\n  ['85432', '465'], // real\n  ['11048', '64'],\n]\n\n//\n//\n\nconst dirs = [\n  [-1, 0], // N\n  [0, 1], // E\n  [1, 0], // S\n  [0, -1], // W\n]\n\nconst parseAndFlood = (input = '') => {\n  const sposIx = input.indexOf('S')\n  const eposIx = input.indexOf('E')\n  const lines = input.split('\\n').map((line) => line.split(''))\n  const get = (i = 0, j = 0) => (lines[i] && lines[i][j]) || '#'\n\n  const si = lines[0].length + 1\n  const spos = [Math.floor(sposIx / si), sposIx % si]\n  const epos = [Math.floor(eposIx / si), eposIx % si]\n\n  const costs = new Map()\n  const key = (i = 0, j = 0) => [i, j].join(',')\n  const setCosts = (i = 0, j = 0, dir = 0, cost = 0) => {\n    const k = key(i, j)\n    const vals = dirs.map((_, ndir) => cost + [0, 1000, 2000, 1000][Math.abs(dir - ndir)])\n    if (!costs.has(k)) return costs.set(k, vals)\n    const nvals = costs.get(k).map((c = 0, i = 0) => Math.min(c, vals[i]))\n    costs.set(k, nvals)\n  }\n  const isCostBetter = (i = 0, j = 0, dir = 0, cost = 0) => {\n    if (!costs.has(key(i, j))) return true\n    return cost < costs.get(key(i, j))[dir]\n  }\n\n  setCosts(...spos, 1, 0)\n  const frontier = [spos]\n  while (frontier.length) {\n    const [i, j] = frontier.shift() || []\n    const costHere = costs.get(key(i, j))\n\n    dirs.forEach(([di, dj], ndir) => {\n      const [ni, nj] = [i + di, j + dj]\n      if (get(ni, nj) === '#') return\n      const ncost = costHere[ndir] + 1\n      if (isCostBetter(ni, nj, ndir, ncost)) {\n        setCosts(ni, nj, ndir, ncost)\n        frontier.push([ni, nj])\n      }\n    })\n  }\n  return { epos, costs, key }\n}\n\n//\n\nexport const part1 = (input = '') => {\n  const { epos, costs } = parseAndFlood(input)\n  return Math.min(...(costs.get(epos.join(',')) || Infinity))\n}\n\nexport const part2 = (input = '') => {\n  const { epos, costs, key } = parseAndFlood(input)\n  const ecosts = costs.get(key(...epos))\n  const ecost = Math.min(...ecosts)\n\n  const frontier = []\n  if (ecost === ecosts[0]) frontier.push([...epos, 0])\n  if (ecost === ecosts[1]) frontier.push([...epos, 1])\n\n  const seen = new Set()\n  while (frontier.length) {\n    const [i, j, dir] = frontier.pop() || []\n    seen.add(key(i, j))\n\n    const chere = costs.get(key(i, j))[dir]\n    dirs.forEach(([di, dj], ndir) => {\n      const [ni, nj] = [i - di, j - dj]\n      const nc = costs.get(key(ni, nj))\n      if (!nc) return\n      const cdiff = 1 + [0, 1000, 2000, 1000][Math.abs(dir - ndir)]\n      if (nc[ndir] === chere - cdiff) frontier.push([ni, nj, ndir])\n    })\n  }\n  return seen.size\n}\n","export const answers = [\n  ['7,1,5,2,4,0,7,6,1', '37222273957364'], // real\n  ['4,6,3,5,6,3,5,2,1,0', ''],\n  ['', '117440'],\n]\n\n//\n//\n\nexport const evalProg = (prog: string[], aval: number) => {\n  let a = BigInt(aval)\n  let b = BigInt(0)\n  let c = BigInt(0)\n\n  const literal = (op: string) => BigInt(+op)\n  const combo = (op: string) => {\n    if (op === '4') return a\n    if (op === '5') return b\n    if (op === '6') return c\n    return BigInt(+op)\n  }\n  const div = (op = '') => a / BigInt(2) ** combo(op)\n\n  const impls = {\n    '0': (op = '') => (a = div(op)),\n    '1': (op = '') => (b = b ^ literal(op)),\n    '2': (op = '') => (b = combo(op) % BigInt(8)),\n    '3': (op = '') => a !== BigInt(0) && (ix = Number(literal(op))),\n    '4': () => (b = b ^ c),\n    '5': (op = '') => output.push(Number(combo(op)) % 8),\n    '6': (op = '') => (b = div(op)),\n    '7': (op = '') => (c = div(op)),\n  } as Record<string, (op: string) => unknown>\n\n  let ix = 0\n  const output = [] as number[]\n  while (true) {\n    if (ix >= prog.length) return output\n    const inst = prog[ix]\n    const op = prog[ix + 1]\n    ix += 2\n    impls[inst](op)\n  }\n}\n\nexport const part1 = (input = '') => {\n  const [as, , , , progstr] = input.split('\\n')\n  const prog = progstr.split(': ')[1].split(',')\n  const a = +as.split(': ')[1]\n  return evalProg(prog, a).join(',')\n}\n\nexport const part2 = (input = '') => {\n  const prog = input.split('\\n')[4].split(': ')[1].split(',')\n  const nums = prog.map(Number)\n  let answer = 0\n\n  for (let i = 0; i < nums.length; i++) {\n    const tgt = nums.slice(nums.length - i - 1).join('')\n    for (let j = 0; j < 1e3; j++) {\n      const num = answer * 8 + j\n      if (tgt === evalProg(prog, num).join('')) {\n        answer = num\n        break\n      }\n    }\n  }\n  return answer\n}\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass BinaryHeapStrategy {\r\n    constructor(options) {\r\n        this.comparator = options.comparator;\r\n        this.data = options.initialValues ? options.initialValues.slice(0) : [];\r\n        this._heapify();\r\n    }\r\n    _heapify() {\r\n        if (this.data.length > 0) {\r\n            for (let i = 0; i < this.data.length; i++) {\r\n                this._bubbleUp(i);\r\n            }\r\n        }\r\n    }\r\n    queue(value) {\r\n        this.data.push(value);\r\n        this._bubbleUp(this.data.length - 1);\r\n    }\r\n    dequeue() {\r\n        const ret = this.data[0];\r\n        const last = this.data.pop();\r\n        if (this.data.length > 0 && last !== undefined) {\r\n            this.data[0] = last;\r\n            this._bubbleDown(0);\r\n        }\r\n        return ret;\r\n    }\r\n    peek() {\r\n        return this.data[0];\r\n    }\r\n    clear() {\r\n        this.data.length = 0;\r\n    }\r\n    _bubbleUp(pos) {\r\n        while (pos > 0) {\r\n            const parent = (pos - 1) >>> 1;\r\n            if (this.comparator(this.data[pos], this.data[parent]) < 0) {\r\n                const x = this.data[parent];\r\n                this.data[parent] = this.data[pos];\r\n                this.data[pos] = x;\r\n                pos = parent;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    _bubbleDown(pos) {\r\n        let last = this.data.length - 1;\r\n        while (true) {\r\n            const left = (pos << 1) + 1;\r\n            const right = left + 1;\r\n            let minIndex = pos;\r\n            if (left <= last && this.comparator(this.data[left], this.data[minIndex]) < 0) {\r\n                minIndex = left;\r\n            }\r\n            if (right <= last && this.comparator(this.data[right], this.data[minIndex]) < 0) {\r\n                minIndex = right;\r\n            }\r\n            if (minIndex !== pos) {\r\n                const x = this.data[minIndex];\r\n                this.data[minIndex] = this.data[pos];\r\n                this.data[pos] = x;\r\n                pos = minIndex;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return void 0;\r\n    }\r\n}\r\nexports.default = BinaryHeapStrategy;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst BinaryHeapStrategy_1 = require(\"./BinaryHeapStrategy\");\r\nclass PriorityQueue {\r\n    constructor(options) {\r\n        this._length = 0;\r\n        this._length = options.initialValues ? options.initialValues.length : 0;\r\n        this.strategy = new BinaryHeapStrategy_1.default(options);\r\n    }\r\n    get length() { return this._length; }\r\n    queue(value) {\r\n        this._length++;\r\n        this.strategy.queue(value);\r\n    }\r\n    dequeue() {\r\n        if (!this._length)\r\n            throw new Error(\"Empty queue\");\r\n        this._length--;\r\n        return this.strategy.dequeue();\r\n    }\r\n    peek() {\r\n        if (!this._length)\r\n            throw new Error(\"Empty queue\");\r\n        return this.strategy.peek();\r\n    }\r\n    clear() {\r\n        this._length = 0;\r\n        this.strategy.clear();\r\n    }\r\n}\r\nexports.default = PriorityQueue;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst PriorityQueue_1 = require(\"./src/PriorityQueue\");\r\nexports.default = PriorityQueue_1.default;\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Pathfinder = void 0;\nconst ts_priority_queue_1 = require(\"ts-priority-queue\");\nconst wrapNode = (node, previous, f = 0, g = 0, open = true) => {\n    return { node, previous, f, g, open };\n};\nclass Pathfinder {\n    methods;\n    maxIterations = 1e6;\n    constructor(params = {}) {\n        this.methods = {\n            nodeToPrimitive: (node) => node,\n            getNeighbors: () => [],\n            getMoveCost: () => 1,\n            getHeuristic: () => 1,\n            ...params,\n        };\n    }\n    findPath(start, goal) {\n        const startKey = this.methods.nodeToPrimitive(start);\n        const goalKey = this.methods.nodeToPrimitive(goal);\n        const open = new ts_priority_queue_1.default({ comparator: (a, b) => a.f - b.f });\n        const visited = {};\n        const startNode = wrapNode(start, null, 0, 0, true);\n        open.queue(startNode);\n        visited[startKey] = startNode;\n        let ct = 0;\n        while (open.length > 0) {\n            if (ct++ > this.maxIterations)\n                throw new Error('Infinite loop!');\n            const curr = open.dequeue();\n            if (!curr.open)\n                continue;\n            const currKey = this.methods.nodeToPrimitive(curr.node);\n            if (currKey === goalKey)\n                break;\n            curr.open = false;\n            this.methods.getNeighbors(curr.node).forEach((neighbor) => {\n                const moveCost = this.methods.getMoveCost(curr.node, neighbor);\n                if (moveCost < 0)\n                    return;\n                const neighborKey = this.methods.nodeToPrimitive(neighbor);\n                const nnode = visited[neighborKey];\n                const cost = curr.g + moveCost;\n                if (nnode && nnode.g <= cost)\n                    return;\n                const h = this.methods.getHeuristic(neighbor, goal);\n                if (nnode) {\n                    nnode.open = true;\n                    nnode.g = cost;\n                    nnode.f = cost + h;\n                    nnode.previous = curr;\n                    open.queue(nnode);\n                }\n                else {\n                    const newnode = wrapNode(neighbor, curr, cost + h, cost, true);\n                    visited[neighborKey] = newnode;\n                    open.queue(newnode);\n                }\n            });\n        }\n        open.clear();\n        const end = visited[goalKey];\n        if (!end)\n            return [];\n        const path = [end.node];\n        let p = end;\n        while (p.previous) {\n            path.push(p.previous.node);\n            p = p.previous;\n        }\n        return path.reverse();\n    }\n}\nexports.Pathfinder = Pathfinder;\n","import { Pathfinder } from 'abstract-pathfinder'\n\nexport const answers = [\n  ['336', '24,30'], // real\n  ['22', '6,1'],\n]\n\n//\n//\n\nconst dirs = [\n  [-1, 0], // N\n  [0, 1], // E\n  [1, 0], // S\n  [0, -1], // W\n]\n\nconst prepare = (input = '') => {\n  const [si, sj, ct] = input.length < 1000 ? [7, 7, 12] : [71, 71, 1024]\n  const locs = input.split('\\n').map((line) => line.split(',').map(Number))\n\n  const map = Array.from(Array(si)).map(() => Array.from(Array(sj)).fill('.'))\n  const get = (i = 0, j = 0) => (map[i] && map[i][j]) || '#'\n  const set = (i = 0, j = 0, v = '#') => {\n    if (map[i]) map[i][j] = v\n  }\n\n  const finder = new Pathfinder<number[]>({\n    nodeToPrimitive: (node) => node.join(','),\n    getNeighbors: ([i, j]) => dirs.map(([di, dj]) => [i + di, j + dj]),\n    getMoveCost: (_, [i, j]) => (get(i, j) === '.' ? 1 : -1),\n    getHeuristic: (a, b) => {\n      return Math.abs(a[0] - b[0]) + Math.abs(a[1] - b[1])\n    },\n  })\n  return { si, sj, ct, locs, set, finder }\n}\n\nexport const part1 = (input = '') => {\n  const { si, sj, ct, locs, set, finder } = prepare(input)\n  locs.forEach(([i, j], k) => k < ct && set(i, j, '#'))\n  return finder.findPath([0, 0], [si - 1, sj - 1]).length - 1\n}\n\nexport const part2 = (input = '') => {\n  const { si, sj, locs, set, finder } = prepare(input)\n  locs.forEach(([i, j]) => set(i, j, '#'))\n  return locs.reverse().find(([i, j]) => {\n    set(i, j, '.')\n    const path = finder.findPath([0, 0], [si - 1, sj - 1])\n    if (path.length !== 0) return [i, j].join(',')\n  })\n}\n","export const answers = [\n  ['369', '761826581538190'], // real\n  ['6', '16'],\n]\n\n//\n//\n\nconst getCounts = (input: string) => {\n  const [pstr, dstr] = input.split('\\n\\n')\n  const patterns = pstr.split(', ').map((s) => s.trim())\n  const designs = dstr.split('\\n').map((s) => s.trim())\n\n  const known = new Map([['', 1]])\n\n  const count = (des = '') => {\n    if (known.has(des)) return known.get(des) || 0\n    let ct = 0\n    for (const pat of patterns) {\n      if (des.startsWith(pat)) ct += count(des.slice(pat.length))\n    }\n    known.set(des, ct)\n    return ct\n  }\n\n  return designs.map(count)\n}\n\nexport const part1 = (input = '') => getCounts(input).filter((ct) => ct > 0).length\nexport const part2 = (input = '') => getCounts(input).reduce((a, b) => a + b, 0)\n","import { Pathfinder } from 'abstract-pathfinder'\n\nexport const answers = [\n  ['1389', '1005068'], // real\n  ['10', '285'],\n]\n\n//\n//\nconst dirs = [\n  [-1, 0], // N\n  [0, 1], // E\n  [1, 0], // S\n  [0, -1], // W\n]\n\nconst countSkips = (input: string, skipTime = 1, cutoff = 10) => {\n  const map = input.split('\\n').map((s) => s.trim().split(''))\n  const [si, sj] = [map.length, map[0].length]\n  const get = (i = 0, j = 0) => (map[i] && map[i][j]) || '#'\n\n  const sposIx = input.indexOf('S')\n  const eposIx = input.indexOf('E')\n  const spos = [Math.floor(sposIx / (si + 1)), sposIx % (si + 1)]\n  const epos = [Math.floor(eposIx / (si + 1)), eposIx % (si + 1)]\n\n  const finder = new Pathfinder<number[]>({\n    nodeToPrimitive: (node) => node.join(','),\n    getNeighbors: ([i, j]) => dirs.map(([di, dj]) => [i + di, j + dj]),\n    getMoveCost: (_, [i, j]) => (get(i, j) === '#' ? -1 : 1),\n    getHeuristic: (a, b) => {\n      return Math.abs(a[0] - b[0]) + Math.abs(a[1] - b[1])\n    },\n  })\n  const path = finder.findPath(spos, epos)\n  const times = new Map<number, number>()\n  const key = (i = 0, j = 0) => {\n    if (i < 0 || j < 0 || i >= si || j >= sj) return -1\n    return i * sj + j\n  }\n  path.forEach(([i, j], k) => times.set(key(i, j), k))\n\n  const offsets: number[][] = []\n  for (let di = -skipTime; di <= skipTime; di++) {\n    for (let dj = -skipTime; dj <= skipTime; dj++) {\n      const dist = Math.abs(di) + Math.abs(dj)\n      if (dist <= skipTime) offsets.push([di, dj, dist])\n    }\n  }\n\n  let skips = 0\n  path.forEach(([i, j]) => {\n    const t = times.get(key(i, j)) || 0\n    offsets.forEach(([di, dj, dist]) => {\n      const k = key(i + di, j + dj)\n      if (!times.has(k)) return\n      const save = (times.get(k) || 0) - t - dist\n      if (save >= cutoff) skips++\n    })\n  })\n  return skips\n}\n\nexport const part1 = (input = '') => countSkips(input, 2, input.length < 1000 ? 10 : 100)\nexport const part2 = (input = '') => countSkips(input, 20, input.length < 1000 ? 50 : 100)\n","export default \"3   4\\n4   3\\n2   5\\n1   3\\n3   9\\n3   3\"","export default \"77221   93653\\n61169   27995\\n49546   69782\\n11688   41563\\n15820   48282\\n63235   37517\\n28850   68189\\n80735   25255\\n42616   65322\\n55068   99897\\n30851   35509\\n14907   49013\\n64732   92011\\n16709   68830\\n67643   36207\\n44080   23559\\n96480   58330\\n99450   40186\\n21169   63410\\n58096   21671\\n53828   79572\\n47026   44529\\n90101   28656\\n45773   73412\\n71303   85991\\n45304   78294\\n96528   23559\\n19794   17882\\n74831   17211\\n88912   11644\\n98961   80435\\n15788   96101\\n16350   86995\\n96806   19028\\n99959   77868\\n58887   90255\\n42568   25255\\n29278   88912\\n94028   63269\\n42810   21548\\n97490   71747\\n89051   24477\\n73916   31808\\n97751   88912\\n73608   77868\\n62426   13754\\n29429   36177\\n11070   10894\\n78656   85185\\n31308   60500\\n96166   91114\\n36906   85134\\n99662   77868\\n66402   41563\\n37085   14475\\n80907   53324\\n61650   53324\\n84223   63753\\n83891   47827\\n15973   77536\\n68843   40593\\n98854   31274\\n42426   97404\\n25255   67531\\n44559   50141\\n93909   50674\\n28070   32858\\n24880   24813\\n29338   89795\\n64883   77868\\n66924   57646\\n32984   66502\\n32238   39062\\n38816   23559\\n58770   65322\\n74953   91636\\n70592   19028\\n93111   11644\\n31065   23537\\n67370   19028\\n18314   47412\\n71075   74334\\n21544   44529\\n59137   50980\\n20440   80749\\n14393   38495\\n72130   90255\\n43828   68830\\n23262   73660\\n11923   50980\\n47754   14164\\n96043   34362\\n27162   28090\\n20838   50713\\n75009   11121\\n92099   31274\\n22054   38248\\n43518   80106\\n68189   13153\\n50520   12727\\n51425   40674\\n42998   31053\\n52443   33051\\n37256   54436\\n16648   95555\\n81123   17329\\n46974   79835\\n36328   77868\\n76373   23559\\n82592   70046\\n70600   22417\\n27116   89690\\n28090   34969\\n86348   23559\\n53145   50980\\n30203   83301\\n23347   77681\\n76433   26236\\n28046   92869\\n58920   50980\\n25518   28090\\n12791   44529\\n61967   31808\\n98022   53056\\n24326   12263\\n41095   13121\\n24045   82448\\n31274   16530\\n78021   21589\\n63029   19658\\n75684   14475\\n31258   36493\\n40561   48589\\n20457   54974\\n14783   88465\\n39433   23537\\n34774   53324\\n10455   14329\\n26338   74416\\n55227   37003\\n36963   40380\\n31910   68189\\n94894   18220\\n23166   44111\\n48884   46787\\n73036   89795\\n83519   25205\\n50205   93653\\n85926   50141\\n69194   23559\\n25529   11642\\n10182   31274\\n13638   61987\\n83588   19028\\n75911   20768\\n44692   24325\\n43278   94888\\n48148   24394\\n86205   99327\\n82605   58818\\n52770   68189\\n89068   84917\\n66452   83679\\n50217   85099\\n64914   52073\\n76460   78294\\n43026   24410\\n44179   50980\\n47653   90255\\n78061   50980\\n14475   71478\\n77868   37150\\n99645   28090\\n86267   70055\\n58072   68830\\n96428   66585\\n77501   50141\\n52344   93653\\n49534   35509\\n46925   12437\\n40005   87987\\n17329   86995\\n17585   89795\\n32296   59660\\n81836   11644\\n89435   65322\\n55149   59423\\n56971   50141\\n26342   95142\\n57894   56227\\n49762   33007\\n48949   65641\\n40453   53505\\n67613   23537\\n27110   87987\\n25231   63910\\n92546   50713\\n70074   27554\\n39649   93653\\n93231   30520\\n60008   79179\\n18449   47209\\n68828   36207\\n18908   72254\\n55426   44661\\n62522   87987\\n60923   25255\\n85721   68107\\n35153   71814\\n20053   24813\\n24233   22904\\n36237   92731\\n92077   68189\\n30105   50674\\n37032   90255\\n12745   54116\\n41563   53324\\n24700   29145\\n60226   85335\\n50713   64775\\n29972   51790\\n79176   19794\\n40017   96101\\n90724   41345\\n51608   39176\\n46178   50141\\n26151   23489\\n19569   44529\\n34368   86052\\n18948   50801\\n62091   17329\\n89749   38984\\n68315   37514\\n52396   19794\\n14981   14475\\n36038   69571\\n50048   50980\\n60796   41563\\n69942   72877\\n80976   25234\\n56722   90255\\n49489   28090\\n60768   65557\\n70753   85065\\n15233   23522\\n94697   87600\\n40958   41532\\n91709   40116\\n83586   19028\\n88140   24977\\n56993   50980\\n17980   53324\\n12421   97982\\n30183   40884\\n50452   53324\\n91314   90651\\n69995   19028\\n16588   28090\\n22432   98658\\n86088   77868\\n46361   65322\\n97178   75705\\n37444   79320\\n12275   96101\\n47016   16942\\n36822   87327\\n62082   31274\\n68265   64314\\n87344   24603\\n40642   23559\\n87254   38755\\n62372   50713\\n89026   68830\\n88519   96101\\n53514   31808\\n24686   41563\\n23817   68705\\n26704   89031\\n37908   65322\\n22665   35601\\n75378   59200\\n16797   86995\\n55847   68189\\n55932   72688\\n41470   96101\\n43557   17329\\n45439   77868\\n41230   76226\\n25104   92869\\n43736   93653\\n85938   93653\\n74153   54726\\n73956   70350\\n70419   37102\\n81275   64160\\n30656   32684\\n46218   32617\\n67969   31808\\n61544   81806\\n39376   56568\\n14769   60336\\n10199   97703\\n61064   40091\\n75531   30486\\n17211   31808\\n75184   74633\\n24565   61765\\n83922   44529\\n11644   25255\\n71836   14393\\n53030   19028\\n83437   33190\\n33687   54998\\n92054   82083\\n48250   68533\\n10977   34363\\n51050   19028\\n80898   68276\\n26442   68830\\n39875   65514\\n24976   76417\\n31946   23537\\n95278   90255\\n71678   26450\\n49641   28580\\n12962   13674\\n13598   30362\\n40620   21256\\n49062   92869\\n88449   79529\\n80153   94081\\n36918   70556\\n77902   99228\\n41848   99097\\n26032   39378\\n23830   50980\\n49712   78294\\n95464   65322\\n76971   27393\\n67074   22132\\n17629   71246\\n92019   92869\\n20780   96521\\n68372   16880\\n49710   88060\\n94680   52634\\n28626   57101\\n31808   60809\\n25578   28090\\n12020   25255\\n46008   33046\\n27712   36207\\n17168   53033\\n92923   87987\\n94668   65843\\n59490   48858\\n69085   38485\\n28242   14664\\n18302   96101\\n64047   71241\\n62752   73532\\n28873   59278\\n22206   18029\\n57298   85374\\n26420   78294\\n74055   30817\\n74377   45566\\n81846   17058\\n35184   27305\\n72054   89795\\n78666   41563\\n80545   96101\\n69240   51322\\n76319   36831\\n23617   14475\\n53848   93653\\n65082   36888\\n18802   93491\\n63942   23559\\n80208   22876\\n17018   68830\\n78018   51611\\n35520   75130\\n43479   88543\\n18522   96101\\n41260   15010\\n58041   21675\\n96272   68830\\n73601   78294\\n44788   52104\\n67152   89795\\n57671   61399\\n33841   56764\\n41963   53394\\n41010   28090\\n53937   65322\\n75472   76675\\n22253   92068\\n24277   93653\\n62012   14475\\n27539   50141\\n29180   41637\\n27151   35922\\n28752   23559\\n31602   47673\\n80298   50906\\n94689   38297\\n87987   48139\\n51692   61967\\n93653   86995\\n99694   96638\\n50948   11644\\n87830   19794\\n57579   93403\\n60947   72082\\n18514   53324\\n99194   25255\\n57630   93653\\n49914   10526\\n34613   94340\\n32145   16105\\n39569   62764\\n14118   31274\\n38901   19016\\n47443   66925\\n83812   31274\\n61920   50141\\n88684   50713\\n32305   31808\\n58695   50713\\n20016   42720\\n68955   31976\\n96299   99509\\n83258   96101\\n49424   68830\\n97130   14043\\n34668   50936\\n27567   35509\\n57890   65959\\n58399   78860\\n88934   50980\\n70656   66788\\n91507   44529\\n53671   87987\\n75858   71137\\n14726   13674\\n25416   31274\\n90521   50075\\n37289   96101\\n79415   19028\\n21158   25355\\n53210   16168\\n35192   81526\\n67240   23559\\n42967   65310\\n81598   93094\\n12765   36207\\n23853   41643\\n78439   22984\\n13052   50141\\n56642   93653\\n19028   82791\\n89371   36244\\n89795   50799\\n41542   90489\\n49486   72630\\n26630   50763\\n35019   68830\\n62271   78294\\n16433   77868\\n42466   57338\\n63666   39984\\n56231   83564\\n51132   96101\\n33675   74200\\n94670   70445\\n51236   17822\\n52493   64460\\n45346   86995\\n41620   31274\\n80479   88912\\n46200   90255\\n13789   60686\\n98564   76843\\n44974   92717\\n76047   80674\\n60650   89430\\n55723   45722\\n89426   97853\\n33961   98414\\n32872   68189\\n65322   12029\\n29922   36159\\n74923   34697\\n37065   59688\\n66622   23559\\n68253   14475\\n28664   53324\\n62981   25761\\n83161   50674\\n22849   50980\\n11119   76308\\n22980   13794\\n76171   19411\\n96351   28221\\n45573   90255\\n19850   79146\\n97828   90483\\n23867   85271\\n36353   50141\\n46579   87987\\n73434   23559\\n57169   68189\\n68768   41682\\n59354   97617\\n62181   64641\\n34167   53324\\n28374   24803\\n55863   57352\\n25058   33040\\n76126   53005\\n97283   51641\\n25887   29253\\n43067   50713\\n51616   61868\\n97533   16129\\n50692   80951\\n43173   41626\\n93917   76055\\n84713   53465\\n24130   13599\\n56773   50980\\n15310   44529\\n63375   50141\\n75875   93653\\n22284   33135\\n46294   77836\\n29713   14393\\n95318   83346\\n83264   61967\\n39267   47771\\n61101   86995\\n47882   96101\\n24345   70347\\n50674   14475\\n17296   12880\\n52605   11644\\n40817   78294\\n36207   93653\\n16045   96101\\n91784   68830\\n34583   69934\\n71867   28090\\n74898   22671\\n54609   27206\\n33070   26257\\n18570   57394\\n16766   87036\\n62825   21503\\n39793   17504\\n12038   82452\\n37265   12706\\n69479   44529\\n96101   44260\\n49175   50713\\n70708   55412\\n50136   14475\\n27300   96101\\n75794   62368\\n10277   87990\\n30825   87987\\n35563   24149\\n12505   91890\\n11323   14393\\n89922   84455\\n10927   65359\\n50656   71304\\n47973   11644\\n17156   92869\\n98964   96101\\n50980   59345\\n94733   23559\\n22743   26134\\n90255   54273\\n80006   65322\\n10157   92869\\n70496   28090\\n25569   41226\\n79982   92869\\n34897   76485\\n83357   86388\\n26352   79503\\n67432   15174\\n49155   72153\\n36311   86995\\n14394   65333\\n70928   51667\\n67367   23559\\n48195   57003\\n52001   26154\\n63251   21651\\n21894   89795\\n50774   43252\\n85637   36207\\n79243   11644\\n49512   57954\\n22454   15919\\n84214   20805\\n67121   86995\\n49247   78035\\n79313   34840\\n33168   19814\\n48657   92888\\n59824   74905\\n30088   68830\\n74246   90052\\n78389   65322\\n88418   28090\\n93716   62226\\n74962   29324\\n47309   50980\\n93517   14393\\n23895   68175\\n34548   25255\\n32628   84730\\n55988   31274\\n82578   40953\\n51728   16926\\n19440   27805\\n42922   45159\\n52930   41563\\n91562   31274\\n23559   62680\\n92150   26879\\n78315   61783\\n43601   91325\\n87621   17838\\n78580   65350\\n94778   77868\\n68519   83273\\n35509   66389\\n82288   52439\\n65083   19794\\n86995   13010\\n66618   95850\\n18656   70145\\n98537   65322\\n60842   52161\\n68830   10132\\n99689   24077\\n33740   89795\\n45595   53090\\n78239   36207\\n20185   36207\\n87307   69366\\n83009   77868\\n34685   88642\\n13674   28090\\n82450   69909\\n44812   75146\\n54296   92869\\n73558   94990\\n21422   48229\\n49473   10547\\n66108   68189\\n71169   74202\\n78276   40690\\n82977   78294\\n61842   15634\\n31582   95459\\n39064   14475\\n70204   18593\\n71244   87987\\n31642   50490\\n98413   37109\\n61175   50141\\n37168   23559\\n44093   11032\\n18806   40848\\n91249   73483\\n95812   32572\\n93644   68189\\n30669   20850\\n75404   92869\\n53324   50141\\n80675   50216\\n14897   73401\\n34074   29952\\n16366   32630\\n95656   28090\\n73964   58896\\n90705   66916\\n92869   59662\\n99522   78294\\n35903   19794\\n33033   42610\\n55650   50980\\n29289   11753\\n32302   58345\\n76036   57644\\n74870   31274\\n85035   77868\\n79322   25255\\n50332   31274\\n78294   44529\\n93000   53324\\n36560   19028\\n40041   53525\\n70360   89795\\n19074   98749\\n32829   89603\\n61436   71046\\n89938   85369\\n52708   28090\\n83958   53324\\n88155   67097\\n32730   75527\\n64221   23559\\n60391   97432\\n70047   20185\\n12372   73527\\n46501   29274\\n66552   14746\\n56373   51614\\n95596   11782\\n81196   72623\\n32282   60515\\n49504   14393\\n57642   34348\\n95402   87987\\n81625   68830\\n28527   37199\\n71475   31808\\n94280   23005\\n55623   99355\\n46783   29073\\n36641   81559\\n74788   14535\\n87994   78773\\n80189   77868\\n33263   89795\\n23537   23537\\n25755   22264\\n67413   72800\\n74924   73774\\n81215   78294\\n78206   92869\\n36161   50141\\n54925   86995\\n66305   49951\\n42462   28090\\n99051   88912\\n44954   89795\\n88856   28090\\n63026   85778\\n22651   24813\\n39262   14475\\n86176   69982\\n65395   14393\\n12926   78294\\n81994   53324\\n16933   30191\\n46987   19794\\n37215   28090\\n15340   63748\\n40271   86674\\n23747   52856\\n61156   11644\\n65356   56048\\n72336   51278\\n21864   77868\\n99351   13349\\n24599   79046\\n62281   23361\\n81871   53324\\n14029   42297\\n50141   48720\\n46677   43636\\n10745   35965\\n39344   80864\\n38077   50038\\n13983   89795\\n66663   67877\\n64175   19028\\n62355   68830\\n96823   79443\\n46436   44754\\n53388   68830\\n45987   92723\\n87646   11707\\n75997   45545\\n69968   93653\\n30425   44529\\n83211   88109\\n28725   64932\\n47043   89795\\n34475   31274\\n42302   94895\\n66558   92753\\n48964   50713\\n19546   78294\\n51026   89795\\n89346   57408\\n52993   54676\\n29577   38385\\n85932   60320\\n18030   22556\\n65993   19922\\n74692   23559\\n61588   89795\\n50688   69541\\n93760   44529\\n75094   96101\\n68976   86835\\n46278   50980\\n97836   44529\\n17576   32708\\n48519   46071\\n72647   93653\\n54724   34155\\n45186   43448\\n44529   41828\\n90404   86357\\n63175   44529\\n88381   25963\\n32140   23537\\n43348   36423\\n41733   88912\\n84065   98953\\n20389   96101\\n38749   93788\\n37929   35143\\n63747   35340\\n72249   93653\\n98042   59381\\n22741   95783\\n88124   33425\\n16493   44529\\n36599   69408\\n50436   41563\\n67695   86149\\n89091   20022\\n60708   92607\\n28750   68830\\n80224   39113\\n34580   96101\\n79688   34798\\n14870   68189\\n47719   29252\\n57652   33458\\n65541   87987\\n86435   19794\\n95204   81239\\n43800   50980\\n94063   11644\\n24096   36588\\n36628   95478\\n81443   17329\\n61221   57166\\n52782   78294\\n16740   31274\\n68369   45653\\n28895   44529\\n39222   65582\\n97201   77602\\n81119   11644\\n41083   50141\\n72917   25255\\n46148   21269\\n44495   18020\\n99464   90525\\n67254   58381\\n52750   28135\\n63899   55754\\n14617   50713\\n36962   50713\\n41322   73436\\n22504   38709\\n72577   39875\\n67799   68830\\n68284   71156\\n46011   61967\\n50367   31808\\n45832   87987\\n88775   87987\\n32562   26340\\n43756   49887\\n73444   16547\\n67302   92449\\n22133   85451\\n17768   77868\\n69281   39885\\n87364   25255\\n41209   27363\\n37792   77868\\n66667   73746\\n22195   28090\\n65037   37556\\n28634   89795\\n23901   50674\\n40511   95801\\n47779   45253\\n76489   86807\\n77873   66992\\n87523   35509\\n32876   50980\\n62342   50980\\n84222   41563\\n88205   40382\\n78856   20051\\n97888   68189\\n22233   17329\\n35868   81437\\n80155   93653\\n82730   78294\\n12733   19794\\n55038   26258\\n50682   23250\\n42043   74279\\n54719   71512\\n54474   23991\\n61776   25255\\n55564   41563\\n39404   31274\\n94954   14475\\n76258   89795\\n87689   67995\\n65619   59930\\n41846   17435\\n21990   22185\\n60161   53026\\n44955   57523\\n84178   39875\\n32693   87987\\n19125   44529\\n96731   93653\\n98080   44529\\n72947   95746\\n67285   23344\\n78101   77580\\n43064   11644\\n81350   23483\\n46937   11644\\n97686   79381\\n66339   60744\\n39269   50674\\n61837   77868\\n97647   86995\\n44613   93568\\n73127   68830\\n64048   80370\\n15530   87987\\n63926   51860\\n95853   91981\\n26155   28090\\n82222   19794\\n10035   87445\\n16445   93653\\n67972   15558\\n51780   68830\\n52358   31274\\n83942   60096\\n64899   11955\\n56009   96101\\n42288   36590\\n53349   65322\\n76255   50713\\n53044   26351\\n37184   31274\\n24813   19028\\n62309   52490\\n93607   19028\\n27423   45568\\n26128   78294\\n72691   50141\\n42162   60052\\n78247   10613\\n80209   31808\\n38310   93653\\n59228   47607\\n24897   23559\\n55176   37760\\n33062   53324\\n26521   39170\\n93209   68189\\n89881   23559\\n11418   50980\\n16884   78294\\n31995   50980\\n17858   98671\\n49107   96101\\n50512   54526\\n56890   65322\\n76173   65309\\n51569   52845\\n73919   23537\\n62591   16739\\n53735   79935\\n14454   69804\\n19976   46609\"","export default \"7 6 4 2 1\\n1 2 7 8 9\\n9 7 6 2 1\\n1 3 2 4 5\\n8 6 4 4 1\\n1 3 6 7 9\"","export default \"66 67 68 71 72 69\\n72 75 78 79 79\\n38 40 41 42 44 47 48 52\\n86 87 88 91 96\\n30 33 34 36 39 36 38 40\\n77 78 79 80 79 76\\n84 87 89 86 87 87\\n7 10 13 14 16 19 18 22\\n22 25 28 26 28 29 32 38\\n47 50 53 53 54 56 57 60\\n67 69 71 73 73 72\\n15 16 16 19 21 23 23\\n87 88 90 92 92 96\\n20 21 24 24 29\\n18 20 22 24 28 29 31 33\\n86 87 88 91 95 97 96\\n13 16 19 22 26 26\\n28 31 35 38 42\\n35 37 41 44 49\\n33 36 42 45 46\\n78 81 82 85 90 87\\n44 47 49 54 55 57 57\\n50 52 53 58 62\\n72 75 80 81 82 89\\n12 10 12 14 15 16 19 22\\n40 39 41 42 45 47 49 46\\n23 21 24 27 29 30 30\\n11 8 11 14 15 18 19 23\\n21 19 22 23 26 27 34\\n62 61 58 59 60\\n52 50 53 52 50\\n3 1 2 5 7 4 4\\n68 65 68 67 68 72\\n45 42 40 43 49\\n5 4 7 9 11 11 14 17\\n7 4 5 7 10 10 7\\n64 62 64 64 66 67 67\\n87 86 86 88 91 92 96\\n64 62 62 63 64 65 68 73\\n64 61 62 63 67 68\\n12 9 13 15 13\\n83 81 84 88 90 93 95 95\\n6 3 5 9 10 12 16\\n38 35 39 41 47\\n62 60 63 70 71 74\\n56 55 60 61 63 64 62\\n44 43 44 45 47 53 53\\n61 60 67 69 73\\n73 70 73 74 77 82 84 89\\n8 8 10 11 14 17\\n55 55 56 57 59 56\\n75 75 76 79 81 82 84 84\\n72 72 75 78 80 84\\n69 69 72 75 76 77 82\\n49 49 51 49 51\\n38 38 41 44 45 43 42\\n15 15 17 16 16\\n25 25 26 24 25 26 29 33\\n18 18 20 22 21 22 29\\n81 81 81 83 84 85 86\\n86 86 86 89 92 89\\n27 27 30 31 32 32 35 35\\n33 33 33 34 37 40 42 46\\n50 50 50 52 53 56 58 65\\n65 65 66 70 73\\n65 65 66 67 71 70\\n8 8 9 12 14 18 18\\n70 70 73 77 81\\n65 65 66 68 69 73 79\\n25 25 28 35 36\\n41 41 48 51 53 56 55\\n87 87 88 95 95\\n70 70 75 76 79 81 83 87\\n10 10 12 13 18 23\\n69 73 75 77 78 81 83 86\\n62 66 68 70 72 71\\n81 85 88 89 92 92\\n33 37 39 42 45 49\\n49 53 56 57 58 60 67\\n18 22 20 21 24 26\\n80 84 87 90 88 85\\n17 21 22 21 22 25 25\\n29 33 35 34 38\\n5 9 6 7 9 16\\n19 23 26 29 29 32\\n49 53 56 57 60 61 61 60\\n63 67 69 71 71 73 76 76\\n77 81 83 83 85 89\\n23 27 27 30 36\\n37 41 43 45 48 49 53 55\\n23 27 31 32 35 32\\n52 56 58 62 62\\n15 19 23 26 30\\n60 64 66 67 70 74 76 82\\n61 65 66 72 74 76\\n5 9 10 17 16\\n36 40 41 47 50 53 53\\n30 34 35 40 41 45\\n28 32 35 37 43 46 51\\n22 29 31 34 37\\n30 36 37 39 38\\n24 31 34 37 37\\n4 11 13 16 19 23\\n37 43 44 45 48 50 55\\n34 40 37 38 40 42 44\\n11 17 18 19 21 19 20 18\\n53 59 61 59 61 62 64 64\\n58 65 68 65 67 69 73\\n79 86 89 88 89 92 94 99\\n15 20 21 22 22 23 25 27\\n28 33 36 36 38 37\\n88 95 97 97 99 99\\n34 39 41 44 45 48 48 52\\n6 11 11 12 14 16 17 22\\n59 65 69 72 73 76\\n54 61 63 67 69 72 74 71\\n22 29 30 32 34 37 41 41\\n61 68 70 74 78\\n28 33 37 39 40 47\\n13 19 21 24 30 32\\n69 76 78 80 82 84 89 86\\n8 15 18 20 25 26 26\\n67 74 77 82 86\\n13 18 19 25 27 30 37\\n67 64 62 60 57 55 53 55\\n70 69 66 63 60 58 55 55\\n48 45 43 42 41 37\\n62 60 59 58 53\\n15 14 13 12 14 13 10 8\\n29 27 29 28 25 28\\n71 69 66 64 65 62 62\\n17 15 13 15 12 10 6\\n97 96 97 95 94 92 86\\n33 30 27 24 21 18 18 17\\n24 21 20 19 16 16 14 15\\n43 40 40 38 36 35 35\\n59 58 55 52 52 49 45\\n14 12 12 11 5\\n94 91 89 87 83 82 79\\n21 18 16 12 10 11\\n69 66 64 62 58 55 55\\n88 86 83 82 79 78 74 70\\n56 54 50 47 40\\n21 18 13 11 8 5\\n31 28 26 25 23 20 14 17\\n52 50 49 43 40 39 39\\n37 34 31 25 23 19\\n35 32 30 24 22 21 16\\n65 68 65 63 61 60 58 55\\n55 56 53 52 49 52\\n9 12 11 9 8 5 5\\n35 36 33 32 31 29 25\\n62 65 62 59 56 55 50\\n77 79 82 81 79\\n65 68 67 65 68 69\\n26 29 28 31 30 29 29\\n93 95 94 95 91\\n81 84 85 83 76\\n34 37 37 34 31 29 28 25\\n38 40 39 36 33 33 30 33\\n54 57 54 51 48 48 48\\n44 47 47 44 40\\n88 91 91 89 84\\n48 50 48 47 44 40 39 37\\n86 89 85 84 82 79 76 77\\n80 82 78 76 73 70 70\\n87 89 86 82 79 77 73\\n45 47 43 42 41 39 37 32\\n39 40 35 33 32 31\\n52 53 50 43 40 42\\n36 38 37 36 31 29 29\\n76 79 73 72 71 68 64\\n87 88 86 85 78 76 73 68\\n39 39 36 33 31\\n36 36 35 33 31 29 30\\n88 88 86 85 82 82\\n9 9 6 5 1\\n99 99 97 94 92 90 88 81\\n62 62 59 60 57 56\\n41 41 40 37 34 36 34 36\\n90 90 88 85 88 85 83 83\\n59 59 60 59 56 53 49\\n89 89 92 89 87 82\\n72 72 72 70 68\\n20 20 18 18 20\\n48 48 47 46 44 44 44\\n26 26 24 22 22 18\\n94 94 94 93 92 91 89 82\\n25 25 24 20 17 16 15\\n64 64 61 58 55 51 50 53\\n85 85 81 80 79 76 76\\n56 56 52 49 45\\n91 91 90 86 80\\n58 58 56 49 48\\n86 86 79 78 76 74 77\\n80 80 79 76 75 72 65 65\\n36 36 29 28 27 26 25 21\\n22 22 17 16 9\\n18 14 11 9 6\\n59 55 53 50 47 50\\n43 39 38 35 34 32 30 30\\n37 33 32 31 29 26 22\\n46 42 39 37 35 34 27\\n91 87 90 89 88 85 83\\n53 49 48 49 48 46 48\\n95 91 90 87 89 86 86\\n25 21 19 17 18 17 13\\n65 61 59 61 60 53\\n58 54 54 53 52 50\\n58 54 54 51 52\\n37 33 33 32 29 29\\n71 67 65 63 62 62 58\\n62 58 56 55 55 53 51 46\\n23 19 16 15 12 8 5\\n76 72 68 67 70\\n48 44 40 38 35 35\\n87 83 81 77 75 74 70\\n66 62 59 55 49\\n20 16 13 8 6 4 1\\n56 52 51 49 42 44\\n31 27 22 20 19 18 18\\n30 26 24 19 17 16 12\\n30 26 23 20 15 14 12 5\\n51 45 42 40 38\\n34 29 27 24 25\\n51 44 43 42 42\\n33 26 24 22 18\\n82 76 74 73 67\\n61 54 55 52 51 50\\n74 68 66 69 72\\n14 7 8 7 7\\n62 56 55 57 55 52 48\\n50 45 42 44 37\\n19 12 12 9 7 6\\n39 34 34 31 29 30\\n65 58 55 53 51 51 51\\n84 79 77 75 75 71\\n84 79 78 75 75 73 67\\n43 37 36 32 31 28 25 23\\n77 70 66 63 61 58 60\\n48 43 39 37 37\\n78 72 68 67 64 61 57\\n25 18 14 12 5\\n71 66 65 58 55 53\\n90 84 82 81 76 75 74 77\\n54 47 46 41 41\\n41 35 33 28 24\\n78 73 72 71 64 62 56\\n10 11 12 13 15 16 14\\n49 50 51 53 56 58 60 60\\n20 21 22 25 27 30 34\\n70 71 74 77 78 80 86\\n44 45 48 45 46 48 50 53\\n62 64 65 68 71 73 70 69\\n73 75 76 79 82 81 81\\n34 35 32 35 39\\n75 76 78 80 78 80 85\\n91 92 95 95 98\\n22 25 25 26 27 29 31 28\\n27 30 31 31 34 36 39 39\\n55 56 56 58 62\\n25 28 28 31 34 39\\n57 60 63 64 68 70 72 73\\n60 62 65 69 72 70\\n46 47 48 52 54 54\\n19 22 23 25 29 33\\n83 84 86 90 91 93 98\\n41 42 44 49 52 55 56 57\\n16 19 21 24 27 34 37 36\\n27 29 32 35 38 43 43\\n30 31 33 40 43 47\\n39 40 41 47 48 49 56\\n83 81 83 85 86 89 91\\n48 46 49 52 54 55 53\\n73 71 73 74 75 78 78\\n71 70 71 73 74 77 79 83\\n39 36 38 41 42 44 45 52\\n86 85 86 84 86 87 89 91\\n44 42 45 48 46 45\\n86 85 86 89 87 87\\n4 1 2 1 5\\n46 45 44 46 47 50 56\\n89 86 86 89 90 91\\n73 71 72 75 76 77 77 76\\n24 22 23 23 25 27 27\\n29 28 29 29 33\\n69 66 69 69 71 73 76 83\\n61 59 63 65 67\\n67 66 70 71 69\\n53 50 53 57 59 60 60\\n72 70 72 76 80\\n38 35 38 42 49\\n50 48 51 58 61\\n70 68 70 76 73\\n61 60 61 67 69 69\\n30 27 29 31 33 38 42\\n4 1 2 5 8 14 16 23\\n12 12 15 16 19 21\\n37 37 39 40 38\\n2 2 5 7 9 10 11 11\\n3 3 6 7 11\\n18 18 20 23 30\\n70 70 72 73 70 73 75\\n38 38 40 37 39 42 43 42\\n71 71 74 73 73\\n65 65 64 67 68 71 75\\n35 35 36 37 36 43\\n30 30 31 31 32 35\\n93 93 95 95 96 94\\n27 27 27 30 32 33 36 36\\n36 36 36 38 40 44\\n18 18 20 21 22 25 25 30\\n62 62 64 68 70 73\\n90 90 94 95 96 99 97\\n44 44 48 49 51 51\\n68 68 69 73 75 79\\n60 60 64 66 72\\n20 20 22 24 31 33 36 37\\n34 34 37 43 45 43\\n58 58 63 64 67 67\\n54 54 60 61 64 67 71\\n67 67 68 70 77 80 86\\n75 79 81 84 87 89\\n45 49 51 53 50\\n5 9 12 15 17 19 19\\n47 51 54 55 56 60\\n76 80 81 83 86 89 90 97\\n83 87 89 88 91 92\\n29 33 31 34 31\\n51 55 57 60 57 59 59\\n35 39 40 39 40 44\\n1 5 8 5 8 13\\n74 78 79 79 80\\n57 61 61 62 65 63\\n4 8 8 10 10\\n67 71 74 74 77 81\\n42 46 47 50 50 55\\n36 40 41 45 47\\n53 57 60 64 67 64\\n6 10 11 13 17 17\\n78 82 84 88 90 94\\n79 83 86 89 93 98\\n34 38 45 46 49 52\\n50 54 59 62 64 66 65\\n58 62 69 71 72 72\\n56 60 65 66 67 71\\n22 26 28 30 32 37 38 44\\n84 89 91 93 94 95\\n58 63 64 67 65\\n36 41 44 47 50 52 55 55\\n62 67 68 69 73\\n70 77 80 81 84 86 92\\n68 73 74 71 72 75 78 81\\n73 79 76 79 76\\n53 58 55 56 57 58 59 59\\n31 36 34 37 40 44\\n37 43 41 43 50\\n14 20 22 22 25\\n70 75 77 80 80 81 84 83\\n51 56 59 59 59\\n2 8 9 12 12 14 16 20\\n50 55 57 58 60 60 65\\n58 63 64 66 70 72\\n81 88 90 93 97 95\\n26 33 37 39 41 41\\n74 80 82 86 90\\n26 33 37 38 44\\n68 75 81 82 83 84\\n13 18 19 21 26 27 29 27\\n53 59 60 66 69 70 70\\n17 22 29 30 33 35 38 42\\n42 47 48 49 50 52 58 65\\n84 83 81 79 76 78\\n61 58 55 54 54\\n77 75 73 70 67 63\\n86 85 84 83 80 77 76 70\\n44 41 42 39 38 37 35\\n22 19 16 13 16 13 11 14\\n86 85 84 87 86 86\\n32 31 30 29 31 28 24\\n18 15 12 9 7 9 7 1\\n84 81 81 78 76 74\\n11 10 7 6 6 4 3 5\\n20 19 19 18 18\\n16 13 13 10 6\\n99 96 94 91 89 86 86 80\\n27 24 23 22 21 17 16\\n50 49 45 43 42 39 38 39\\n85 83 79 78 75 75\\n19 16 12 10 9 8 4\\n28 27 23 21 16\\n91 88 83 80 77\\n17 16 14 9 11\\n74 71 66 64 64\\n40 38 33 30 28 24\\n66 64 63 56 53 46\\n33 34 33 32 31 28 27\\n52 54 52 50 47 46 43 46\\n60 63 61 59 57 54 54\\n82 84 82 81 78 77 74 70\\n36 39 37 35 28\\n67 69 66 64 67 65 64\\n45 46 45 48 51\\n83 84 82 83 81 80 80\\n33 36 38 36 32\\n88 91 88 87 89 86 80\\n43 44 42 39 39 38 37\\n35 36 36 33 30 31\\n3 4 4 2 2\\n77 79 76 74 74 71 67\\n89 92 92 90 88 87 85 79\\n45 48 44 41 40\\n33 36 33 30 28 27 23 25\\n66 69 68 65 61 59 57 57\\n88 89 88 84 80\\n46 47 43 42 36\\n97 98 96 94 89 88 87 84\\n11 14 12 5 3 6\\n80 83 82 81 74 74\\n24 26 23 16 12\\n63 64 57 54 48\\n86 86 85 83 82\\n24 24 21 20 21\\n56 56 53 52 51 51\\n60 60 58 55 54 50\\n93 93 90 87 86 83 78\\n13 13 16 13 12 11 8 7\\n64 64 63 66 64 66\\n50 50 49 51 51\\n34 34 33 32 35 31\\n82 82 79 77 80 78 73\\n47 47 47 46 43\\n95 95 95 94 96\\n48 48 48 45 44 44\\n18 18 18 16 14 10\\n87 87 85 84 84 83 81 75\\n72 72 68 67 66 63\\n65 65 64 61 57 55 52 54\\n91 91 90 86 86\\n46 46 42 39 35\\n53 53 51 50 47 44 40 33\\n85 85 78 76 75\\n70 70 68 63 61 62\\n47 47 44 38 35 33 31 31\\n79 79 78 72 68\\n73 73 68 65 58\\n75 71 69 68 65\\n52 48 46 43 40 38 35 37\\n21 17 15 12 12\\n41 37 35 32 28\\n88 84 83 81 78 72\\n68 64 61 63 61\\n18 14 15 12 13\\n62 58 56 53 54 51 51\\n24 20 18 19 15\\n93 89 87 89 84\\n41 37 35 34 34 33 32\\n44 40 39 36 36 34 35\\n22 18 16 16 16\\n86 82 80 77 77 74 73 69\\n34 30 29 28 27 26 26 19\\n93 89 87 83 80 79\\n59 55 54 51 47 46 45 47\\n20 16 13 12 8 6 4 4\\n27 23 20 17 15 14 10 6\\n25 21 17 16 11\\n98 94 88 87 84\\n65 61 58 55 52 47 44 46\\n32 28 26 20 20\\n82 78 77 74 72 67 63\\n55 51 49 47 45 44 37 32\\n36 31 28 27 26 23 21 20\\n90 85 83 80 77 76 74 76\\n15 10 8 7 6 5 3 3\\n57 51 49 46 45 44 42 38\\n29 24 21 20 19 13\\n82 76 74 72 71 72 69 66\\n10 4 7 4 5\\n37 32 34 32 29 28 26 26\\n56 50 52 50 46\\n53 46 49 47 46 45 43 38\\n76 71 68 68 65 64\\n88 81 81 79 77 74 76\\n83 76 76 73 73\\n66 59 59 58 54\\n98 93 92 90 90 84\\n27 22 18 17 14 11\\n29 24 20 19 17 15 18\\n81 76 74 71 67 65 62 62\\n69 63 60 56 55 51\\n86 81 77 74 67\\n74 67 62 59 58\\n66 60 55 54 56\\n53 46 39 37 35 33 33\\n29 23 20 14 10\\n33 28 27 26 19 16 15 8\\n60 61 56 55 51\\n97 91 88 87 86 80 81\\n74 73 68 67 64 60\\n23 21 17 15 12 12\\n47 53 55 56 59 60 63 65\\n38 38 38 36 34\\n69 62 59 57 54\\n13 13 12 9 8 7 7 9\\n32 34 34 37 39 41 42 43\\n81 77 75 74 75 73 72\\n2 3 5 7 12 14 11\\n43 43 41 40 40 39 33\\n27 25 27 28 32\\n47 51 53 55 62 63 69\\n29 32 34 33 30 26\\n51 58 60 61 65 68 68\\n66 69 68 69 71 73 73\\n84 84 86 83 79\\n59 60 56 53 51\\n15 20 22 23 27 29 32 39\\n4 11 12 10 11 13\\n39 35 33 31 33 31 31\\n29 30 32 33 35 35\\n84 83 84 84 87 88 91 96\\n20 15 14 11 12\\n16 16 14 15 14 13 11 12\\n49 43 41 37 38\\n9 16 20 22 25 28 32\\n18 18 19 21 25 26\\n72 74 75 78 82 82\\n19 23 28 31 35\\n86 79 78 74 70\\n14 14 17 14 15 18 22\\n59 52 51 54 51 48 46\\n1 1 2 5 7 12 11\\n54 50 49 47 43 43\\n81 85 86 87 88 89 87 90\\n7 8 11 13 16 22\\n4 10 7 8 12\\n70 64 63 60 62 62\\n6 6 9 14 16 18 21 28\\n56 61 58 60 62 67\\n44 37 35 31 28 26 21\\n14 18 20 23 27 27\\n44 44 42 39 37 37 35 31\\n95 95 97 99 97 99 96\\n62 64 61 61 58 55\\n52 58 58 59 60 61\\n30 28 30 33 33 36\\n51 47 44 41 40 37\\n81 78 76 73 75 72\\n23 24 28 30 33 35 38 40\\n12 10 7 5 4 4 5\\n16 19 19 22 26\\n79 80 83 82 83 86 88\\n76 69 66 65 62 62 61 62\\n14 13 7 5 4 7\\n56 50 48 45 45 41\\n62 64 65 69 73\\n64 68 71 72 75 74 74\\n43 47 51 54 56 59 63\\n60 56 53 51 50 47 46 42\\n75 78 77 77 75 75\\n53 53 57 60 61 66\\n82 85 84 82 80 82 79 74\\n66 61 58 51 49 47 46\\n35 39 39 40 42 44 48\\n42 35 34 31 28 21 20 20\\n94 87 85 86 83 79\\n53 55 56 59 62 66\\n10 9 13 14 12\\n19 25 27 29 32 39 39\\n79 77 80 82 85 82 79\\n39 35 33 34 33 30 26\\n64 71 73 76 83 85 84\\n64 65 63 66 70\\n73 74 81 84 85 85\\n34 34 35 36 36\\n63 69 70 72 75 81 84 88\\n66 70 77 79 82 85\\n80 81 79 75 68\\n91 87 86 85 82 80 83 86\\n50 50 56 59 62\\n2 7 7 10 14\\n61 62 66 67 68 70 71 70\\n43 43 45 47 47 48 48\\n29 27 24 18 16 9\\n17 21 23 23 29\\n84 77 75 74 73 70 63\\n32 30 29 26 22 21 16\\n25 18 15 17 14 12 9 3\\n82 85 88 90 92 90\\n21 18 21 18 21\\n76 82 82 83 85 87 87\\n52 50 47 42 41\\n22 26 28 29 30 30\\n17 17 18 18 20 22\\n26 26 22 20 14\\n34 32 37 38 40 43 45 46\\n60 60 62 65 62\\n20 17 20 21 24 27 34 34\\n41 40 41 42 43 47 50 50\\n56 49 45 42 42\\n21 21 25 26 29 30 32 36\\n48 44 44 43 40 38\\n94 93 91 93 92 88\\n70 73 70 69 64 63\\n42 46 47 50 54\\n25 26 24 22 19 17 19\\n95 95 94 92 90 93 90 88\\n23 22 24 23 27\\n75 76 75 72 71 68\\n74 73 71 70 69 66 59 59\\n14 20 22 24 26 29 27\\n15 18 22 23 24 29\\n50 50 51 54 56 57 59\\n41 39 39 41 43 44 47 51\\n22 22 19 19 18 18\\n63 63 66 68 69 70 74\\n21 20 19 18 16 13 12 5\\n72 69 66 66 65 61\\n61 68 69 71 74 75 75\\n81 75 74 73 72 66 60\\n18 18 19 19 20 22 19\\n78 74 72 69 65 64 61 62\\n30 26 24 21 19 19 19\\n76 76 78 79 80 78 78\\n32 38 40 43 50\\n63 56 56 54 54\\n81 82 81 79 79 81\\n85 85 86 86 87 88 94\\n65 61 59 56 49\\n1 5 8 10 8 10 9\\n63 64 67 67 68 69 67\\n44 44 45 49 49\\n87 83 82 79 82\\n54 59 60 63 64 67 70 74\\n13 12 11 9 8 8\\n30 32 31 30 24 21 16\\n77 75 72 71 73 70 67 67\\n86 86 91 93 93\\n70 70 67 62 60 59 58\\n44 50 51 57 59 60 62\\n84 84 90 91 95\\n42 46 47 50 53 58 58\\n31 27 25 25 28\\n1 1 4 1 1\\n47 52 52 54 57 64\\n38 36 38 37 37\\n49 49 45 43 42 41\\n20 19 26 28 33\\n50 53 55 54 56 63\\n19 26 30 33 35 34\\n73 73 76 79 82 82 86\\n40 36 33 32 35 29\\n50 51 53 54 60 67\\n68 72 74 77 79 81 81 84\\n76 79 82 84 91 94 98\\n8 6 7 9 11 11\\n56 50 48 48 46\\n14 17 14 14 10\\n9 13 18 19 17\\n57 58 55 55 52 50 49 43\\n85 82 80 77 74 71 68\\n80 81 82 84 86 88\\n17 19 20 21 23 24 25\\n85 83 81 80 78\\n50 47 46 44 42\\n71 69 66 65 63 62\\n80 78 75 73 70\\n28 29 32 33 34 36\\n36 33 30 28 25 22 20\\n66 68 70 71 74 75\\n36 33 32 30 29 27 26 23\\n67 66 64 62 61 59 58 55\\n45 43 40 39 36 34 31 30\\n25 23 20 19 16 15 14\\n67 65 63 60 59 58\\n3 6 9 10 12 15 17 20\\n45 42 40 38 37 34\\n67 69 72 74 77 80 81 84\\n86 84 82 80 77\\n13 11 10 7 6 4 2\\n18 20 21 23 26 28 31\\n79 80 83 85 88 89 92 95\\n70 72 74 76 77 78 81 82\\n43 45 48 51 52\\n66 63 62 61 60 57 55\\n15 12 11 8 5\\n86 83 82 81 78\\n75 78 81 82 85\\n28 29 32 33 36 38\\n72 75 78 80 81 83 86 88\\n23 21 18 16 14\\n98 96 94 93 90\\n76 75 74 71 69 68 65 62\\n66 65 64 61 60 57 54 53\\n73 71 70 67 66 65 62 59\\n41 44 45 48 50 53\\n27 24 23 22 19\\n17 14 13 12 10 9 6 5\\n36 33 30 28 26 24 21\\n94 92 89 88 85\\n50 53 55 57 60 61\\n62 65 66 69 70 73\\n47 46 44 41 38 35 34 31\\n48 51 53 54 55 56 59\\n78 79 80 81 82 85 87 89\\n51 54 56 58 61 64 65\\n50 52 53 54 55 58 61 62\\n76 75 74 71 69 66 64\\n61 64 67 69 70 72 73\\n75 74 72 71 70 67\\n38 39 41 42 43 45 46\\n76 79 81 84 85 86 89 91\\n59 58 57 56 55 54 51 50\\n88 85 84 82 81 80 79 76\\n15 12 9 8 7 4 1\\n37 36 34 33 31 30 29\\n66 69 72 74 77 78 79 81\\n54 51 49 46 44\\n65 63 60 59 58\\n31 33 34 36 39 40\\n7 10 11 13 15 18 21\\n17 19 21 23 24 27 29 30\\n33 30 27 24 23 22 20 18\\n47 46 45 44 42 39 36 35\\n45 42 40 38 37\\n31 33 34 37 40 41 42 44\\n95 93 90 89 86 84 82\\n53 50 49 47 45 43 41 39\\n38 37 34 31 30 27 26\\n48 50 52 53 54\\n9 10 12 13 16 17 18 19\\n75 77 80 83 85\\n39 40 43 45 48 49\\n89 90 92 94 95 98 99\\n78 77 76 74 73 71\\n32 35 36 38 39 42\\n95 94 93 90 89 86 83 82\\n63 62 59 57 54 52 49 46\\n45 46 47 49 52 54\\n86 85 84 83 80 77\\n61 58 56 54 53\\n42 40 38 35 32 30\\n86 87 90 91 93 94 96 99\\n45 48 51 53 56\\n49 50 51 53 55 57\\n16 15 13 10 8 7 6\\n37 40 41 43 46\\n83 82 79 76 75\\n9 12 15 18 20\\n31 30 29 27 24 22\\n30 33 35 37 39 41 43\\n25 22 20 19 16 15 13 12\\n53 51 48 45 42 39 37\\n30 29 27 26 25 23 20 18\\n36 38 41 42 43 44 46 49\\n22 21 18 15 14 11 9\\n46 47 48 51 54\\n39 41 44 45 47 49 51\\n52 50 48 45 42 41\\n38 39 42 45 48 50 53 56\\n50 51 53 56 58 59\\n86 85 83 80 78 76 75 73\\n59 58 57 54 51\\n22 24 25 27 29 30 32 35\\n11 13 15 16 19 21\\n36 33 31 29 28 27 25 22\\n43 42 39 37 35 33 31 30\\n69 67 66 64 61\\n80 77 75 72 70 68 67\\n55 57 60 63 66 68\\n80 77 76 73 72\\n19 17 15 14 13\\n50 48 45 44 42\\n6 7 10 13 14\\n50 52 55 57 60\\n67 64 62 60 59 56 54 52\\n25 28 30 32 35\\n80 77 76 73 72 70 69\\n36 35 32 29 28 27 26 25\\n64 62 61 60 57 54\\n76 78 79 81 84 87 90 91\\n69 71 72 75 78\\n22 19 16 15 13 12 11\\n95 92 91 88 86 84 81\\n76 79 80 82 83 86 88 89\\n25 26 28 29 30 32\\n4 7 10 12 15\\n70 71 74 77 78 81\\n27 29 32 35 38 41 44 46\\n73 72 69 66 64\\n17 14 13 10 7 5\\n47 44 42 40 37 36\\n28 30 32 33 34 37 39 41\\n86 88 89 90 93\\n79 78 76 74 71\\n44 46 47 48 51 53 54\\n82 84 87 88 91 92 95 96\\n24 22 21 18 16 14\\n48 47 46 45 42\\n73 76 77 80 81\\n29 28 27 26 24\\n59 56 54 52 49 47\\n43 45 46 49 51 53 56 59\\n25 24 23 21 18 16 13 12\\n60 59 57 54 52 50\\n23 20 18 15 14 12\\n53 55 56 58 59 60\\n86 89 92 94 96\\n21 20 18 16 14 11\\n61 63 66 68 70 71 73\\n49 46 45 42 40 38 37\\n9 11 14 16 19 20\\n41 39 36 33 30 28 25 23\\n52 54 55 56 57 58 59 62\\n20 18 15 13 11 10\\n62 60 57 56 53 52 50 49\\n69 72 75 77 79 81\\n80 81 84 87 90 92 93\\n34 32 31 28 26 24 22\\n21 20 18 15 14 11 9 6\\n89 87 86 83 80 79 77 74\\n29 32 33 34 35 37 38\\n29 27 26 24 21 18\\n38 41 42 45 46 49 50\\n63 64 67 69 71 73 74\\n40 42 45 48 49\\n17 18 19 21 22 23\\n5 6 9 10 13 15 17\\n44 47 50 52 55 58 60 62\\n28 25 24 21 18 16 15\\n39 38 36 35 34 33 31\\n78 76 75 74 73 70\\n69 68 65 64 63\\n80 82 83 85 88 91 94 96\\n76 74 71 70 69 68\\n81 84 86 88 89\\n40 42 44 45 46 48 51 53\\n50 51 52 54 55 57\\n57 60 62 63 65 67 70\\n46 45 42 39 37 36\\n72 71 70 68 66\\n37 40 42 45 47\\n53 56 58 59 62\\n87 85 84 82 79 77 75 72\\n82 81 80 77 74 71 70\\n28 30 31 32 33\\n37 36 33 30 27 26 24 22\\n60 59 58 56 54\\n86 85 83 80 78 75 72 71\\n20 21 22 25 27\\n39 41 43 44 47 48 49 50\\n33 32 29 27 26 23 20 18\\n40 37 36 33 31 30\\n23 25 28 30 32 35\\n82 81 79 76 75 73 71 68\\n79 77 76 75 73 72 70 69\\n82 85 86 89 91 94 97\\n87 88 90 91 93\\n14 17 19 20 22 25 26 27\\n82 79 76 75 72 70 68\\n88 87 84 81 79 77\\n15 13 12 10 9 8 7\\n1 2 5 6 9 11\\n20 18 15 14 12 11 9 6\\n11 9 6 3 1\\n66 65 63 60 57 54\\n64 63 62 61 58 57\\n79 77 75 74 72\\n62 60 59 58 57 54 53\\n17 16 13 10 8\\n59 62 64 65 68 69\\n82 80 79 77 74 72\\n16 13 11 8 7 4\\n17 14 12 9 7 4\\n46 45 43 40 39 36 33\\n85 86 87 89 92 94 96 99\\n50 52 55 57 60 62\\n64 65 67 68 70 73 76 79\\n54 53 51 49 47 44 42 39\\n29 30 31 34 35 36 38\\n40 37 34 33 31 30 27 24\\n68 70 71 74 76 77 78\\n62 61 59 58 57 56 55 52\\n4 5 8 9 12 13\\n89 86 85 82 80 79\\n5 8 9 10 13 14 17\\n84 82 81 78 76 73 71\\n84 86 87 90 93 96 97\\n32 31 29 28 26 23\\n17 19 21 23 26 29 31\\n62 65 66 67 69 72\\n43 45 47 48 50 52 55\\n36 35 34 33 31 29 27\\n18 15 14 13 11\\n36 35 32 30 27\\n13 16 17 19 20 21 23\\n98 97 95 93 90 87 86\\n95 93 91 90 88 85 82\\n28 26 24 21 19 18 16 13\\n61 58 57 54 53 51 49 47\\n81 84 86 88 90 92 93\\n45 46 49 50 51\\n48 51 53 54 56 57 58 60\\n73 70 69 68 66 64\\n75 72 70 67 65 64 62\\n50 48 45 42 41 38 37 36\\n44 42 39 37 34 32\\n46 45 44 42 40\\n51 48 46 44 41 39 37\\n19 18 16 15 12 11\\n39 40 42 45 46\\n76 77 78 81 82 83 86 87\\n90 89 88 85 83 82 81 79\\n72 74 76 78 79 80\\n65 66 67 68 70 72\\n49 51 54 56 59 62 63\\n37 35 32 30 28 25 24 22\\n90 87 86 84 82\\n61 64 65 67 68 71 74 77\\n1 3 4 7 10\\n61 60 59 58 57 55 54 52\\n6 8 9 11 13 14 17 19\\n56 57 58 59 61 63\\n58 60 63 66 67\\n22 20 17 16 15 14 13 10\\n66 63 62 60 57 56 55 53\\n61 64 67 70 71 74 77\\n88 86 84 82 80 78 77 75\\n6 9 11 14 16\\n75 76 79 82 83 85 86\\n78 79 80 81 84 85\\n14 11 8 5 2 1\\n24 27 30 31 32 35\\n85 84 83 80 77\\n68 71 74 76 79 81 82 85\\n21 19 17 16 14 11 9\\n93 92 90 87 85\\n80 78 76 75 72 69\\n84 87 88 90 93 94 97\\n54 53 50 49 48 45\\n41 42 44 45 47\\n24 26 29 32 35 38 39 41\\n54 52 49 47 44 42 41 40\\n39 42 43 44 45 48 50\\n82 81 79 76 73 71\\n70 67 65 64 63 61\\n57 56 53 51 49 46\\n74 76 79 81 83 85 87 90\\n56 59 61 64 67 70 71\\n31 29 28 27 24 23\\n59 57 55 52 50\\n82 85 88 91 94 95 97\\n60 58 55 53 51\\n57 58 60 63 65 68\\n41 44 46 48 50 51 53\\n44 46 47 50 53\\n33 34 36 38 41 42 44\\n18 20 22 23 26 28 29\\n51 48 47 45 44 42\\n23 21 19 17 14 12\\n58 56 53 52 49 47 46 44\\n98 96 95 94 91\\n80 78 76 75 73\\n58 61 63 64 66\\n83 85 87 88 89\\n23 21 19 17 15 14 12 9\\n60 62 63 64 65 68\\n42 41 38 37 36 33\\n93 92 90 88 87 86 84 82\\n31 32 34 36 39 42\\n8 10 12 13 16 17 18 19\\n14 17 18 20 23 24\\n8 11 13 14 17 18 21\\n69 68 66 63 61 58 55\\n90 87 85 82 80 79\\n38 35 32 30 28\\n18 20 23 26 28 29 30\\n17 16 13 10 8 7 5\\n83 82 80 77 75 72 69 66\\n87 88 89 92 94\\n69 71 72 74 76 78 81 82\\n49 46 43 40 37 34 33\\n30 28 26 24 23 20\\n44 43 40 39 37 34 33 31\\n21 23 26 29 32 33 34 36\\n61 59 58 56 54 52 50 48\\n53 50 49 48 45 42\\n63 66 68 71 73 76\\n57 55 53 50 49\\n54 57 60 62 65\\n21 22 25 27 29 30\\n12 14 15 18 20 21 22 23\\n68 71 73 74 76 77 80\\n15 13 12 9 6 5 2\\n35 37 40 41 42 45 46\\n56 55 53 52 50\\n38 39 42 43 44\\n48 46 45 43 42\\n95 92 91 88 86 84 83 80\\n48 51 52 55 58\\n40 42 44 46 49 51\"","export default \"xmul(2,4)%&mul[3,7]!@^do_not_mul(5,5)+mul(32,64]then(mul(11,8)mul(8,5))\"","export default \"xmul(2,4)&mul[3,7]!^don't()_mul(5,5)+mul(32,64](mul(11,8)undo()?mul(8,5))\"","export default \"?% mul(948,148)why() %how(670,744)mul(590,32);where())#}from()>how()mul(611,372)}{~^?>from()^mul(835,665)who()]#^don't()select()select())mul(724,851)[>&mul(188,482)$mul(781,111)[who()<why(),!]mul(678,13)why()$#%who()mul(620,771)<!^}@^+what()mul(281,719)(]'what()where()>&from():!mul(147,678)how(){mul(938,510)where()!$?*['mul(103,563)where())mul(4,125)$*>>^mul(126,929)]& %~mul(161,418)who()>>do()]-''?mul(416,366)~?/where()]who()mul(459,47))>what(){@[(mul(219,400)+do()when()from():who()when()]&{{%mul(804,830)-select()what()*what()%}mul(861,992)who()!',mul(159,874)#<)''<mul(460,777)?mul(909,244)how()+what()]<do()?}mul(749,87)from()(who();why()mul(430,124)/$>how()@$%mul(214,139)&how()>mul(112,835)select()*from()@why()?[{mul(209,568)/; ~)mul(630,749):mul(841,589)/;who()>[mul(778,567)+when() how()<#mul(544,851)what(){+mul(327,103)from()what()/[~-mul(995,415)/when()-mul(880,153)}:}mul(368,920)'how()mul(864,419)from()what()@mul(208,291)who()<?}?what()',[{mul(575,454)*&(<{how()[mul(557,489){{why(){how()@who()~mul(423,703)mul(910,916)+what()^/<-*from()'mul(746,826),-*)/+>}^from()mul(154,571)++:>,mul(601,458)why()<;how()~from(172,16)mul(333,315)?[mul(513,260) {*mul(117,759)%]mul(77,644){($%>]&~mul(238,306)~select()from();-'who()'mul(460,352); ?select()>[[(from() mul(337,294)why()how()</$<where()don't()(?]{why()%}from()mul(367,653)~mul(910,873)^why()>mul(499,785)>what()[*:#where()*what()mul(765,210)*$[]mul(461,957)##)+}when()-@:mul(198,90)what()what()how()') )mul(258,966)]+(when()mul(535,417)where()!don't()@mul(939,319)?mul(751,538))! mul(758,675)~how()[how(),@>[where()when(29,965)mul(358,39){^what();/(where()how()mul(271,786)why():mul(792,761)do()$]%mul(740,232)>who(949,378)what()[(where()who(){who()#mul(595,343)%+mul(194,296)'mul(161,747): '{where(12,567),@mul(234,39)!+do()/who()[where()&'what()when()how())mul(138,925)),#;where()>{mul(738,864){mul(605,662)*when()%when()+( /~&mul(633,935)when()];mul(263/}*<!where(),- ~when()mul(512,798)]}where())when()who()mul(933,447)where()}mul(33,935*mul(15,975)mul(574,550)+#^;'$from(280,157)$^what()mul(919,849)@mul(18,160))$&^]how()what() when()where()mul(88,657):/from())+:/when()@]mul(71,74)from()'*:@{>mul(127,821)^how()$$select()select()@^{:mul(867,979)&%/>{%^how()what(499,657)+do()%what()(~;-:*mul(438,941)<]?]mul(208,834when()&^;]from()when(613,710)^}+$mul(809,573)mul^)*:from(379,983)mul(47,786)}when()-what()how(450,632)> where()how()mul(810,597 ;;{%(select()select()&,mul(356,249)from()/!{#&^mul(23,248)(!who()]-+,mul(873,987)]{what()<  )-{^mul(591,317)/mul(382,188)mul(476,338)*why()$]mul(865,625)who()})?select():*@[)don't()/ ,mul(737,418)select(318,357);+ what()<mul(41,445)mul(236,630)$}from()]$^$,(do()-select()mul(369,197)from()]#};^mul(561,752)+&#+}?}:mul(18,235)<'& ,(*mul(645,811)why()select()who()[>where()don't()%#>!>/@what()[mul(490,823)&^( ,'@ [do()@mul(855,491)*^why()[,mul(348,679)how()$who() '&how(16,459)/!;mul(43,422)#^from()![}select()mul(976,749)-}select()-where()select()mul(223,589)%[why()mul(868,881)mul(178,790)$,{who()from()#,mul(318,399):where()?[mul(182,864)where() mul(156,690) -]mul(857,353)#'%,},>?+@mul(914,528)where()$mul(785,748)<$who()[mul(453,859)%'@ mul(84,729)/{do()(?$<}mul(820,286)?:*?}#when()(%mul(245,958when()?from(),+mul(128,335)mul(463,102);:]@-~-%mul(914,398)\\n+mul(720,985)how(340,568)^!what()[),[mul(734,270)~')?who()]]mul(964,739)from()?who()$when() /mul(566,142)}*,?how()~mul(733,766)when()mul(319,914)when()mul(808,141)*@:&who();mul(736,736)where(){&!$when()]^mul(612,574)how()mul~]what()!!'[:mul(805,568),<^+~ #)&who()mul(810,729),[~/^<&mul(706,233)!-'{why(),(?&mul(28,746)%mul(127,170)-?} #don't()from(),[@,mul(282,734)mul(332,651)[:~mul(771,888)#who()^select(110,751)>who(){mul(655,334)why()+~&}mul(129,762)mul(597,498))*~-}who()who()~'$mul(235,859)where()^-,,@mul(661,707)[ ~,<-mul(502,445)?why(){why()from()-how()*>&mul(237,280)how()mul(669,512)#$< mul(426,417)[what()why()~select()*%,'where()mul(213,617)##>mul(148-how()&]mul(437,581)who()'<from()>%[:how()mul(985,24);mul(446,704)who(),mul(549#}%>[mul(58,502)%mul(55,502)~<where()''who()}<mul(678,579)mul(457,825)+how()from()'(*#+$$mul(266,507)mul(925,485)^why()mul(605,592)[}<>^<mul(173,922)@:<where()/-]'mul(110,899%select()why()why()>[%%;mul(63,642)>how())<*{mul(155,625)]mul(238,47)where()&@mul(630,112)who() mul(570,946)mul(299,320){({mul(307,251)%[]$%mul(621,739)^!}{^-+what())mul(350,650)!>who()what()]^,*mul(154,394)&?^mul(410,870)[-select()why()<who():+%don't()where()$]/when() how()when()mul(708from()]&?mul(589,972)*mul(167,814)[mul(807?%don't()])?'(who()mul(614,926)mul(404,930)'?+;mul(252how()^who(529,21)'who()%mul(675,37)mul(362*what(640,926)select()'?what(){'>mul(744,141)why():))from()^select()what()mul(991,854){-]+mul(64,859))~>>%>%select()#-mul(282,835)'select()'%<$!from(299,765)don't()-'mul(352,659),mul(366,409),when()mul(672,590)#@#}/(##  mul(550,937)$#/^~mul(458,447)mul#(,/<mul(538,275)}where()'?'!-)mul<^>(how(),mul(465,230)^select()$<from(595,221):mul(704,141)what()]when()^select()^)^%'mul(260,350)>how()what()#@};(from()~mul(716,318)from()+]<!?mul(625,41)#[,~ /mul(19}mul(760,4)@how()mul(508,977)@select())][[mul(261,452 $mul(11,905)how(731,838)[mul(823,988)?!?@&&'mul(929,818)(>mul(701,784)!;>do()'&)when()select()mul(945,704)mul(250,874)who()]@don't()why(51,895)-,how()*+{why()%/mul(964,293)&<^where()<select();&mul(900,32)]where()$from()&#from()who()({mul(755,539)mul(26,466)how()$when()%&$~)mul(926,673)$what()!select(),do()~select()#^mul(272,306)~%'mul(22,647)$mul(904,943)^>-from()mul(635,212)when()how()[mul(314,335)%(-  + ~mul(635,915)~[[do(){where(307,78)(who()(why()where();mul(450from()mul(903,662)>$mul(924,200),why()select()$mul(418,533)where()[where()mul(266,643):~^/#(:[from()mul(81,715),who()@:~+who()'%mul(79?who()select();# mul(436,105)#*why() #~[,where()'mulwho()[(~)[mul(119,92)]where(),select()why()?mul(639,691):+<why()why()mul(815,366)*where()-what()/?>mul(188,19)who()(select()what()mul(916,808));~mul(630,228)-)where()[~mul(586/[how()+~!>}>[how()mul(106,235)do()>why(416,339):mul(788,357)[when(442,691)what()how()where()$from()who()mul(471,832)]/*mul(837,328)<)>!mul(389,633)'from(),mul(70when()!from()select()$](when()*%mul(903,43)where(62,223)^from();@()mul(852,198)-when()?mulhow(168,455)(select()how();from()/mul(918,330)what()'how(215,263)$:{~how()*mul(136,552)from(363,441)-when()how()what()-+mul(229,899)!where()when()from(){mul(47,875)~mul(500,586)/&&where(),where()mul(571,252))%}^~when()mul(979,493)do()@!+~>^mul(568,461)]where()$who(){from();mul(743,403)@?[mul(117,954))/mul(382,589)<:what() mul(578,730)#/<,when()#)select()}mul(889,462){how(562,136)select()when()^>mul(150,815)/$from()?what()mul(842,604)**?'-^>;~'mul(622,493)\\nmul(901,810)[<,^$do()<#why()<why()},,select()mul(257,221)mul(393,412)-from()&$]mul(198,284)/>;/why()mul(296,969)@mul(224,163)#<$what():,what()mul(995,485)$~)who()mul(382,831)'&~mul(146,234)mul(228,532)mul(944,430)!!who()<;'$(%do()%'{mul(588,828)~$why():where()mul(753(select()/':~$[mul(785,897)/<(#$)@mul(821,858)$what()+@/*mul(545,209)where();what()mul-why()>mul(808,588),where()];;}mul(431,815)<<;how()?@why()(^don't()select()$)!mul(832,43)what()[where()mul(935,377)from()++where()$-]@mul(793,489)*&mul(910,985)mul(340,122);from(87,683)[[]]'mul(659>from()['from()~,;@:^mul(420,510)/mul{from()$ >! -mul(508,275)!()@+{!mul(134,503)how()?mul(717,994)@}what()}[@<do()~'[??from() #&}mul(443,258)){do()^mul(894,293),@from()mul(470,736)/select()where()from()how()mul(769,763)/-'mul(436,853)from()mul(955,870);#why()how()how()mul(807,205)#do()select()<@$when()*select()>mul(899,477)who(88,557){[?-mul[how()>>@mul(113,239)&;?what(825,719)from()}@mul(717,829)when()who()%@what()when()#':mul(644,495)]^$ >[~don't()!#mul(175,323)><$>do()[[$what()/>(#~mul(976,792))what()#{how()-$?mul(534,805))what()@mul(600from()'from()mul(859,367)from()mul(852,796)?{[]/'~mul(624,853($:;^mul(522,963)+mul(143,246)[,what()#*when()',why()mul(435,720)mul(812,909)'<? /;when()}*how()do()mul(49,504)how()when()/!mul(799,134)$mul(213,950)from(182,488)];]do()mul(325,689)(@mul(485,128)who()mul(376~when()(%-what()(mul(776,635)#: from(788,757)}mul(997,619)-from(919,426)where()where()how() mul(370,735)*what(),*%$mul(408,722)}#mul(990,90)(<where()*don't()*@:(;what()%:*#mul(804,562)mul(162,269)]mul mul(267,461)%#{(};^~[mul(124,671) ~-<$<from()<from()mul(401,89)>&!!who()how()/,who()>mul(179,82))]don't()@(}<who()where()%<from()]mul(950,333) }&mul(420,707)mul(293,223)what()(/mul(131,775)>@<mul(498,349)mul(416,808)*how(676,683)select()&@mul(100,528)'&from()/[<,%>!mul(224,804'}-mul(180,723)#+@mul(144,160 +#<]where()+!from()select()(mul(614,183)mul(123,655)*+##mul(744,352):#$when()~&,what(625,950)select()'mul(468,293)*]+#mul/$why()where(623,670)%@;mul(722,469)&(%;do()) from()mul(557,124)/}:mul(928,793>]how(){?who()'<mul(74,894)%mul(312,960)'(,]%^mul(560,307<where();when()}how()%>[mul(624,959)&mul(765,13):who()<),who()& mul(639,802)&;(@:why(988,378):mul(677,987)~@-! ;!^do()mul(29,935)mul(134,862)when()+{what()when()who()}~why()mul(541,335)who()@[<mul(342what()select()who();mul(833,47)when()%@}${why()mul(891,370)(@*@[^mul(652,523)}why()&-(?'*mul(906,962) )mul(691,622)~(!<--when(506,845)</$mul(603,406)'how(83,339)mul(44,583)<:-^/why()mul(812,857$what()<-:$]what()?mul(226,418)!>'+why();when()&mul(127,948)$mul(485,474))?$mul(278,206)select()mul(641,623){} @{*where()'?mul}>mul(792,193) [#;*%->~what()mul(876,897)/@+'mul(341,837)^)why()?;@+^^~mul(718,922)[why()when()/,{}select()who())mul(941,117)/}/who()why(293,857))mul(414,482)what()! how()who()mul(910,766)!]what(),how()*mul(6,611)~;{who()who()[--mul(720,952)why(546,471)!)from()/?mul(971,461)}&/$@'mul(452,187)#who():(mul(44,298)mul(530,770)']:who()&$from()mul(544,752)mul(375,827))&@select()^;who()where()how()mulselect()^%^,/&mul(204,187)when()&,}$(who();mul(60,317)+who()$from()(how(942,734);@mul(239,338)!?:%)}@select()(mul(284,525)select()what()where()@^#~[mul(718,185)&!*{';when()@when()mul(272,161)how()%how()?mul(66,988)@)@,::>)mul(930,190)why(),~when()%<@&where(),mul(143,136)why()-,/*-what()+mul(73,408)~ who()%*select()'+where()#!/usr/bin/perlmul(379,680)\\n;@mul(257,25)[!mul(646,635)>?who()who()from()mul(25,275(select()+why()%mul(102,254)%}/where()$mul(608,18)when()*#mul(343,951) mul(337,866)*^?#@why(805,831)-mulwhen()from()mul(854,5)when()@$why()mul(896,11)^mul(451,271)'how()?who()?)<%[}don't()who()/[{]-?from()when()?mul(198,238)])mul(750,760)+/-!what()~?#mul(880,271)%?select();where()(<^select()mul(373@from()where(),mul(700,15),mul(406,120)mul(551,206)mul(636,315);+{mul(261,201)mul,:-/&mul(267,217)/,'mul(132,410)@@;;who()when()]do()why()mul(4,121)#from()/mul(242what()how(277,558)<how()from()+:who()from()what()when()mul(27,714)who()why()what()mul(676,758)+^@*'}mul(274,109)-}]),select()*when()]why()mul(60,516)when()when(708,630)%%where():mul(34,59)from()#]how()+who()%who()*don't()select()&~(;where()/mul(548,869)&mul(439,68)]@}%)~&mul(46,712)when()+[&]where(),+mul(940,261)^who()where()mul(655,165) >'how()how(){mul(12,537)&[>}mul(322,676)[#,do()@,mul(248,663),when()-do()^what()]when()who()what()how())mul(864,73)how()?]*mul(653,55)when()from()from()how()@ }mul(94,590)]~what()mul(164,505)]from()when()]mul(218,565)(from() why()[*when()}[mul(306,447)*]][> #mul(783,715?)+^~mul(308,994):<*~)>from()why()*mul(508,139)>from()@;+~#mul(652,903)#[/?mul(407,208]how(){when(),**@*:/mul(849,965)mul(69,198<'#%[?mul(236,808)what()from()%from()why()^/,don't()select()&where()@mul(888,101) mul(332,775)who()):select()),:-mul(119,209)%how()mulfrom()select()don't(){mul(838,613)why() '({*<!mul(372,376)mul(407,117$who()[ mul(171,741)where();mul(742,142)mul(34#^+:who()mul(157,514)>~>*mul(466,106)mul(883,754->(%%who()[!mul(587,792)'((!?select()&}<mul(791,734){how()&;+<(mul(655,63):why(){!{)mul(320,950)->-'#)why()#[mul(234,162),what(497,671)why()#mul(985,797)>}~;from()select()mul(117,492)&~+from()]%>*$&mul(451,669))}'/@how()?where()why(694,295)'mul(676,756){~;select()what()}what()^}mul(963,857);%/how()?mul(944,194);select()<&^how(){->mul(195,702))?select()why()&~%}why()#mul(90,304)@%why(673,634)*/where()- <:do(){}!mul;who()]where()]-@?<mul(919,817),>when()how()how()>mul(875,604)select()%do()%mul(790,136)*$,mul(853,95)[how()>!%?mul(246,573)&!what()/#from()!mul(382,307),!#[-mul(32,733)$+[*mul(192,47)(@who()mul(304,303)@mul(167,528):select())!:how(){what()(}mul(933,177))#>$#,$:mul(81,603)<mul(40,227)mul(717,937)mul(853,848)mul(66,164)where())^<>what()?how()when()mul(206,607)<where()[$)}when()how()select()*mul(265,447)*/what())%+'[ from()mul(358,747)what()+%how()#from():,what()@mul(791,401)~where()[mul(990,778)?~[!:>!'^mul(666,852)mul(651,206)!+]}from()don't():*]#what()mul(359*%who()^)'mul(190,764)who()when()}select()~(~mul(547,102)mul(406,618)%when()>)<mul(822,907)?/[/from()mul(945,506)>![#mul(890,746)#who()$'~%]',+mul(341,395)who()--mul(285,533)}how()@<}!mul(715}>+~ select()where()$ (mul(894,62)?]}who()&when(652,875)%:}from(24,82)mul(713,250))-^{*%mul(548,903)&]]<]why(){from()when() mul(796,100)-(how()$%~mul(589,969)  :who()  @mul(271,734)<}mul(761,8)}@['- ['$mul(178,28)who()who(282,161)@$from()mul(413,253)#when()?(mul(585,394))select():$?#?>who()?mul(245,344)who()^who()where()why()~@why()don't()why()how()who(450,27)who()(!mul(951,644):select()-)%?*don't(), mul(189,841)]* why()*>'mul(758,690)what()<select()~>@>mul(728,932)how()?select()what()}mul(716,985){where()who()+who():mul(840,772)%how()>:;where()mul(139,830)$select()),mul(730,4)when(305,277);[$!,)mul(278,740)who(856,922)who()#<where()*>mul(212,541)((]mul(689,475)mul(814,611)'}&~{~~mul(716,817)who()mul(21,315))don't())(why()')$<mul(541,349)\\n$)mul(257,544)+where()how()-[how()^+ mul(986,808){[<why()%!;mul(940,137)who()-+(from()**^mul{>)who()how()?%why()}!<mul(908,379)select(811,438)mul(15,196)from(623,826)-from()+!mul(38,667){>{<{mul(41,189)-<how()*%when()}what(539,203)]mul(813,528)who())why()( ]how()why()how(){mul(299,367)]{[(@^mul(131,889)?:&who())when()'why()$&mul(728,552)^}when()@~mul(842,113)from()),?{!mul(811,809)*how(15,189)#>&+from(544,351)~&mul(516,38)]?;-@?don't()@}*mul(792,426when();#~ >%why()(/$mul(755,392)*(#]where()@select(),^select()mul(630]>*who(267,517)why()-;(mul(176,492)select()from()}~:who()mul(761,226)&,((mul(750,451)@/%select()from()mul(345,75)what()/who(); ~mul(431<)&mul(693,289)?~/mul(693,335)'mul(475,545){(*+~ mul(668,535)how()don't()?,<@mul(980,251)*why()$when()*-)mul(886,969):?/':]}-who()(mul(686,683)#}+($why()mul*^*$){&-(mul(94,775)- @when()?%]{when()mul(376,100)''/,&]^<mul(853,752)when()%who(),[^@where()!do()who()when()how()when(474,246)mul(318,180)do()%~(mul(216,96) ;}]why(907,964)$+when(680,212)?mul(442,979)why()what();##select()%mul(34,342)mul(641,907)@]who()@^:^mul(648,605)how()<}]when()!mul(567,219)?where()$what()~+from(),%how()mul(549,85)$-&(mul(94,269)~how(811,581)who(596,80)-how()~mul(510,591)mul(586,482)who()?#-<[[select()*}mul(249]{%<,where()*~^mul(628,294)]+what())why()mul(312,879&,?+don't()mul(100,514)when()select()mul(621,918)@select(813,295)/{^'%+mul(239,859) ']<*)mul(868,763)where()[/when()@)#{^mul(209,999)how()do()*#}},},&>mul(70/:from(184,559)>mul(679,138))<mul(454,112)[@)-?*where()mul(573,473)[(-/mul(867,232)~]/^/!'&where()mul(391,655)[%'mul(73,32)/{->)(~mul(929,872)'%#)mul(563,750)>(mul(324,725)what()why()[@$mul(186,770)?mul(719,251)[mul(270,934)+>when()'$when()mul(647,486)how()from(947,190),!(?mul(113,517) %[select()what()^)!mul(299,591)]:@' *where(145,530)/mulwhen()mul(811,260)mul(80,605)  where(296,197))])>from()mul(324,361)select(){[/';/},mul(648,947&how(){who()/'-%*]mul(949,359){mul(288,162)&];&:^mul(188,899)select()where()]%mul(248,30)#[&+'why()'') don't()][}& mul(808,221)what()@>><;>*mul{;>what()what()+mul(646,752)select()<from()why(211,37)~~~:mul(196,842)}where(690,849)where()[$select(571,536)how()from()<mul(6,129)what()what()?]]how()mul(116,23)who(205,335)>)'where()!mul(748,585)>?<##mul(381,399)mul(597,746)) *mul(881,573)/:({why()'mul(527,57)@/what()?mul(395,551)%who()when()%'mul(713,766)[<mul(749,438)'(}^when();{mul(43,565)what()% #mul(653,209)what():!-mul(64,870)#from()select()from()mul(206,327)?(mul(678,256)^{mul(311,65)who()when()<(when()mul(552,622)*how()%?~;:;;)mul(767,192)--&$mul(512,806)['?')who()mul/({what()&/#'!mul(811,828)]select()~@!/(}$)mul(683,153)&}&~how()from()mul(815,380),?$*+mul(133,342)mul(867,908)!;&why()?(+!mul(915,100))when(895,91)&select()!({where(758,740)mul(759,261)-from()&])mul(365,436)from()&' &^mul(541,400)~from()-what()!mul(679,638)mul(107^#,%~#>[)*select()mul(313,218))when()when()mul(360,494<-select():::- [/mul(517,923)*from(),from()how()+]mul(870,559)}{*?do()>~mul(704,518)where()!)select()?from()where()&'do();mul(270,449)~[*mul(774,600)how():>why()[!when()mul(338,711){]mul(962,193)*where()#![-+mul(511,924):[who()why()}mul(252,534when())when()when()()'!why(230,750)-mul(543,358)~~ -mul(394,506){mul(176,192)who()from()%@mul(181,776)%[ don't()when()where(229,174)+}@who()where()]>mul(553,452)@{/mul(790,202)&&-]mul(783,999)'mul(123,410)<,#what()}how()when()from()$~mul(674,974)why()#>do()'[$]}when()mul(907,824)from()select(){what()mul(584,273)#<>>do()mul(767,778)how()how()from()[#<$from()how()>mul(133,565):mul(888,792)\\nwho()where()don't()]mul(891,277)~mul(160,638)('don't()/@/%{mul(462,975)!^:+mul(317,407){who()/from()/mul(424,628) when()select()mul(415,352)!?[where(){?how()/mul(661^, -mul(141,973)(/where()!#who()(what()#$mul(916,889)when()$ )mul(945,846)why()+#where()@how()mul(147,694)%select()mul(414,149)< when(){)what()&[how()mul(903,731)~#mul(389,694)mul(72,447)mul(490,881)?++from()>+ ^(mul(703,722)mul(622,578)from() }@^)+mul(642,732)>from()where()@>${who()mul(526,211$why()[why()mul(349,908)who(635,389)from()what()*$*>@mul(180,150)//: ^mul(622,131);[-^~-mul(32,430)mul(306,173)~where()how() (mul(292,552)<mul(422,363)^<<!#when(304,583)who()mul(348,963)': #select(875,567)#>'where()!do() why()~] who()@^mul(20,119)?[$+/$^mul(242,536)who()'-&'from()mul(351,640){,]~mul(152,587)@select(140,751)<+mul(387,212)[where()%when())how()& >mul(916,539)~]?[when()>!when()??mul(322,151)!]!]~!;mul(27,537); ##;^}}mul(538,277)why()mul(205,526)mul(412,826)^@?where()'mul(957from(193,394)from(863,680)!@how()mul(771,563)( who()mul(377,655) ]select();who()mul(360,272)-select()$what(){mul(291,618)})from()^when(),how()where()don't()why()+&mul(462,803)^$,mul(788,584)@ %?:![:mul(439,528)mul(129,761)]!~mul(321,102)mul(41,728){&what()how()mul(93,933))[ where()^*@+mul(553,965select() '&{-mul(712,817)/<why()[:>/&mul(482,328)when()'mul(957,978)-}{[>{@what()who()mul(48,186)?]how()$what()&,)mul(33,872)#mul(125,207):;mul(143,386)how(),select()don't()}#when()%]&^@?^mul(107,59)&%?don't()mul(183,332):{}/[(#%-+mul(766,627)from()who() what()-+$^mul(41,791)who()] ;-#select()~mul(939,288)[:(</{$how()%select()mul(624,973) ]%mul(780,706)why(677,630);don't()+mul(3,844)$)$$where(),!why()[:mul(506,60)( <>@what()who()?mul(210,210)?select()why()select()where()-how()^mul(755,497)+?^(mul(860,478)^}+$from()(mul(565,649)}mul(184,450) ;/+%[why()mul(752,488)$how()mul(349,56)#'%,+mul(571,637)(mul(186,674)?how() </~@:%mul(295,276)'~where()-&%!mul(72,565);mul(140,645)%#-#*mul(258,568)!/select()why():&}from()from()don't()mul(458,777)#>,'^#!mul(577,819)mul(767,490)how()@when(359,565)mul(97,67)when()?where()>,'(-mul(267,998)%where()why()where():mul(593,317)<mul(514,327)how()~$[{mul(942,232)how()(who() 'from())mul(752,235)?/!'/*#mul(291,995){who()%!,%mul(873,542)%mul(543,144)from())'select()mul(317,658)+mul(819,545)<&what()who()$#who()how()$*mul(849,792)<;-mul(401,327)select()^}?mul(184,612))(where()what()[where()where()@}'mul(532,791)how()how()from()$*~:mul(963,569)when()%- :}why()^~$mul(520,245))^):{do()!mul(900,510)$ %who(615,822)mul(374,872)''/ mul(808,426)select()mul(268,752)&why(),</%!:!/don't()who(){when()*(where()mul(403,172)^mul(185,447)}mul(233,330)why()/&&%who()#/^mul(705,506)?%from();mul(494,15)['}]-}mul(45,474)who()@who()@why()don't()mul(174,355)?what(),@*$+#&mul(9,768);:^mul(381,691)when()&$/]?what(564,603)^how()mul(468,953)[@when()}mul(702,659) where()?where(){**mul(535,116)~where()$('}^~from()mul(926,18)&who()$when()where()>from(),mul(541,30)/why()${[from()who()  mul(732,465)[<!{mul(794,385)mul(676,776)who()]/mul(45,904)<~+who()@-!)&where()mul(49,63))mul(710,576)+mul(279,872)&<{what()-how(),&how()~\"","export default \"MMMSXXMASM\\nMSAMXMSMSA\\nAMXSXMAAMM\\nMSAMASMSMX\\nXMASAMXAMM\\nXXAMMXXAMA\\nSMSMSASXSS\\nSAXAMASAAA\\nMAMMMXMMMM\\nMXMXAXMASX\"","export default \"XSXMAAXXSSMMMXMXSXMSXMXSAMXSXMASMMSSMMSASXSAAXAAMXMMAMAMXMXSMXSAMXAXSAMXSSSXMASAMXAAMXSXMASAMXXMAXXSAXAMXMMSAASMXMXMASMMAMXXXSAMMSMMSXMASXAA\\nXXAMMSMMXMAMAASXSAMAMSAMASASMSASAAAAAXSASAMMMXSMXSAMSSMMASMSAAXXSXAMSAMXMMXMSAMXXXMSMAMMAMXMSSMMMSSMMSASMSXAMMMAASMASAMXSSXSASMSXMAMSASXMMSS\\nSSSMAAXAAXAMMXSASXMAMMASAMXSAMAXMMSMMMMAMXMAXXAAASAMAAMSMSAMMMSMXMSAXASXSAAMMXSAMXMAMMSMXMAMAAMXAXAAASXMAMXMXAMSAMAXMASAXAXMAMXXAMMMMAMASAMX\\nXAAMSSSSMSSXSAMAMAMXMSXMASAXMMAMXMXMMAMAMXSAMSMMMSXMMSMAAMXMMXSAAAMSSXMAMSMSAAXAXASMSAMMAXMMSSMMMSMMMXAMSMAXSXMMAMXXXXXMMMMMSMMSXMASXSSMMSXM\\nMSMMAXXAAXAAMXMASAMXASXSXMASXSXMASXAXMAXXXMMMMAAAXAMXMMMSMAMXAXXMSXAMXMXMAMMMMSMSMSXMAMSSSXAXAMAASAMSSMMASXMAMXSAMXSMSMXAXAAAAXXAXAMAMXXXMXX\\nXMASMMSMMMMMMAXAXMSMMSAMXAMXXASMAMMMMSSSMSSMASXMMSSMAMAMAXAXMSSXMXMMMXMAMMSSSXMAAAXXSMMSAMMXSMMMMXAMXAXSMXXXXAMXAMAMAAASXSMMSSMMMMAMSXAMAMMX\\nSSMMMAMXAAAAXMMMSMXAXMAMXSXMAMAMASAMXXAAAAAMXSAAXAAMMSMMMSSSMAAXSAXMAXXASXAAMAMSMMSXMAMMAMXXMXAXMSSMSSMMASMSMSSSXMAMSMXAMAXAXAAASXSAXMASASAM\\nMAASMSMSSSSSMSAAAXMAMMXMAXAMXXMSASASMMSMMSSMASXMMSSMAXMSMAAAMMSMSASMAXSMMMMSMAMXAASMSAMSSMMXMASMXAAXAXXSMSAAAXAAASAMMXMASAMXSXSMSAMMMAXAMSMS\\nSSMMAAAAAXXAASMSMMMSMSSMMXAMAMXXXSMMXAAXMMAXAMMSMAAMSSMAMXSMMMXMXAMMMXSXAAXAMAXSMMXAXSXXXAXASAXMMSSMMSMAXMXMMMMSXMASMXSAMASMSAMXMXMMASMMASMM\\nAAAMXMASMMMMMMAAXAAXAAXAMSMMASMMMMASMSSSSSSMXSAAMASAAMXASMAMXSASMSMXXAMMSMSAMXXSXSMSMMMSSSMXSAMXAAAAAXAMXMAXSAMXXSAMMAMXSSMAXMASMSXSMXAXAMAS\\nSSMMXSXMASXAAMSMMMSSMMMXMAAXMSXAAAMXAXAAMAAAXMXMSXMMXMMMMAAMASASAXMSMASMMAXMSMMMAMAXAAXMAMMAMXMMMSMSMMMXASXMSASAMXASMMMAMXMXMSMSXSASAXXMXXAM\\nMMMMAMASXMASXXASXAAXAASASMSMASAXMXXSMMMXMSMMMASXSXSAMXASXSSSMMMMAMAMMAMMMSMAAAXMAMASXMSMSMMASAMMMXMMASXSXSMASXMAXSXMAAXAAMSSMMAXAMAMSXXASMSS\\nMAAMASAMAMMMMSASMMMSSMXASAAMSMMSMSAMMAXXMXXASAMAMAXAMSAMAAAXXAMMMMXMMMSXAMMSSSMXXSAMAASAAXSAMAMSASASAMXAAMMAMAMXMSSSMMXMXAAAAMMMMMXMASMAMAMA\\nSSMSXMASASAAXMAMXAMMXAMSMXMXMAAAAMXMMASMMMSMSAMAMXMXMMAMMMMSSMMAASASAASMMSAAAAXAMMMSMMMSMMMAMSMMASXMASXMMMMXSXSXAMASAMASXMSSMMSAXASMAXMAMAMX\\nMMMXXMASASMMSMMMSMSAMXMMAMXASMMMXMAXXXSASAAXSXMXASMMXXXMSAMXAMMXMSAMMSMAXMMMMMMMSAMAMXXAXXMXMXAMXMASMMAXSAMXMAXAMMAMXMAXAAAXAXMAMMXAMXMXSXXS\\nMAXMAMXMXXASXAXAMMMAMMMMAMMMSXAMAXSSSMSAMSSMMSXMXAAMSSMXSASXMMSXMMMMXXMSMMASAXAASXMAXSAMXSSMMSAMXSXSASAMXASMMAMAXMXMMMMSMMMMMMXAMXXXMSXAAMXS\\nSAXSAMXAMSXMSMMSSMSAMAAXAMXAXMSXSAAAMAMXMAXAXMXAXMAMAAMMSAMXAASASAXXASXMAXAMMXMMSXAXXAXXMMMAAMMMXMAMAMAMXXMAMASMSSSMSSMAMMSAAXMMXXXAXXMMXSAX\\nMAMSAMXMXMAAAXMXAASASMSMMSMSSXMAXMMMMSMAMMMMMMSMMSAMSSMAMXMMMMMAMXSMAMASMMMMMXMXMMSMMMSMASMSMSSSMMAMAMAMMMXSSMSAAAAXAASMXAMSSMAMSAMXMMMSAMMS\\nXMMSAMXMASXSMSMXMMMAXAMAAAAMMAMXMXSXXASMMMASAMAAXMAXMAMMSMSMSSMAMAMMSMMMMXXAXAXAAAAAAAAXXAAMAMAAASASASASXXAMAMMMMMMMSMMMMMXAMMXMAMAAAAAAAMXS\\nAMXXMAXXAMMAXAMASMMSMAMMSMSMSAMMMASMXMASXSASASMSMMSAMMXSAAAAAMMMMSXAMMSASASMSMSMMMMMMSSSSMXMAMMMMXASMMMSMSXSAMMXXAXAXAAAAXAMXSMMXMSSSMSSSMAS\\nXXAASASMAMSSSXSAXAAXMXMXMMMASASXMASAAXAXMMASMMAMMAAASXXSXMMSMXAXAAMXMASAMASAAAMMSSMXMXMAAXSSXXXAXMXMXSAMAAASASMMSSMSSMMMMSSXAMAAXMXAAAAAAMAM\\nMMSXMAXMXMXAAXMMXMMSAMXASXSASAMMMASXSMXSAMXMAXSAMXSSMAMMSMAMASXSMXAXMXMMMMMMMMMAAAMMMAMSMMXAASXMMSAAAMAMMMMMMXAAXASAMXXXXAMMMXAMMMMXMMMXMMAS\\nAAXAMMMMMMMMXMASAXXAMXMASASAMAMAMAXMMAAAMSSMMSAMXAXMMMSAAMAMXMAAXAMMXMAMXXAAXXMMSSMASAMAMMMMAMAAASMSMSXMMSAMXSMSMMMMXSSMMMSASAAXAASMSMSAXXAM\\nMXXAMMAAAXAXXMAMMSSMMAMAMAMMMXMMMXSSXSMMASAASAMAMMSAAAMMMXMXAMXMMSSMMSMMMMSSXSAMXAMMSASXMAAXXSSMMSXXAMAMXMASXMAAMAAXMAMAAXSASXSSSXSAAASASMSS\\nXSSMMSSSXSAMMMSXMAAAMXSXMXMMAXXXXMXMAMXXXMMMMAXXSASMMSSMMASXMMAMXAAAASAXSAMAASXMSSMMSAMMSXSSMMMAMXMMSMXMAMSMAMSMSSSSSMSMMMMAMAMXMSMMMMMAXAAX\\nMMASMXXAXMASXAMXMSSSMMMAMXMAASMMSXAMAMXXSSMSMSMMMASMAXAAMAXAAASMMSSMMSAMXMMMMMAAAAAXMAMMSAAMAXMXMXMAAAXSXSMSAMXXXMAXXAAMMAMXMAMAXXMAMAMXMMMS\\nMSAMMSMSMSMMMMXAXMAXMASAMASMMSAASXMMMMSAMMASAMSAMSMMMSAMMSSMMMXAAAAAXMXMSMAXASMMSSMMSMMAMMMSXMSMSAMMMSXMSAMXXXXMSAMXMSMSXXMASAMXXMSSSMSASAMX\\nMMASXMAAAAXXAMSSMMMMSASASXSAASMMMMXAAAMAMMAMMMSXSAAAAXAMAMAMXXSMMSAMXAXMXSAMXXXAXAMMAMMSXSASXAAASMSSXMASAMSMMMMXSXXXAAAMMMMASASMSMAAAAXAMXSS\\nXMAMAMSMMMSAXMAMXXAMMAMASMSMMSAAAXSMMMSMMMXSMASMSMSMSXXMXSAMXXMXMAXMMMMMAMMSSSMSSMMSASAMSMASMSMMMAAXASMMXXAASXAAMMMSSMSMASMMSAXAAMMSMMMSMSMM\\nSMSXMMMXMSMMMMMMAMSMMSMMMAXMASMMSMXAAMAMXMASMASASAMXMAMXASASMMSAMAMXAAAMASXAAAXAAXMSAMXXAMXMAXMSMMMSMMMMMSASMMMXMAMXMAMXAXAXMMMSMMAMAAAAMAAX\\nAXXASASAMAAAXAAAAAXAAXAXMMMMXMAXXAXMMSASAMXSMMMXMAMASXAMMSMMAXSXSSSSSSSSXSMMSMMMSMXMASMSMSXSXMXMAXMAAAXXAAXMMXAMXXMXMAXMSSSMAAAMAMASXMSMSSSM\\nMMSMMASMSSSMMXMSMSXMASXMXMASASMMMMSMASASASASASXSSXMASAMMXSMSSMMAXAAAAAAAMXMAXXSXMAXMXAXAAMAMAASASXSSSMSMSSMMXMXSAMSMMASAAAMSSMMXAMAXMXMMXAAX\\nXAAAMMMAAXMAXSAAAXAMAXAXXXAMMSAAXAAMXMASXMASAMAMAMMXXAXSAMAAXAMAMMMMMMMMSAMXMASASMXXMMMMSMAMSXMAMMAMXAMAAMAXXAAMMMAAXMAXMMMXMAMSAMXSMAMMMXMM\\nMSSSMAMMMXSAAMSMMMXMASMMMMSSXMMMMSSSXMXMXSXMAMAMAXXAMSMMASMMSSMXMAAAAAAXSMXMSXSAMXSXMXAAAMXMMAMSMSSSMXMMMSSMAMMSXSSSMMSXXXAMMAMMMMXAMASAXMXM\\nXXAXXASMSXMXSMXXXAMAMSXAAMXAMXASXXMAXMMAMAMSAXMMXMMMXXASXMAXXMASXSMSMSSMMSAMXAMXMAXAMSMSSSMSSMMAAMAXMASXMAMSAMXMAMMAMAAMXMAMMASXSXSMMMSAMSAS\\nAMAMXMSXMASXMMSMXMSAMXXSXMSAMSXSASMASXAAAMXSAMSASASXMSAMXSXMXMSMAXXMXMMXAAXXMAMXMMSMMAMAAXXXASXMSMXMASXAMAMAXMAMAMSAMXSSSXMASMSAMXXAAMMMMSAS\\nXMASAMXMXMMXMASAMAXAXAMMMMMAMXAMASMAXASXSXAMMMXAXASMMMSMAAAAAMMMAMAXXSAMSMSXXAXMAXAMXAMMSMMMAMXMAXSMMXMXSSSMMSMMXMMASAMAMXAAXAMAMAMXMSASMMMM\\nASASAMMMAMXXMMMXAMMSMSXSASXSMMAMAMMSSXMAAMXSSMMMMXMAAAAMASMSMSAMMSSMAMMMMAMASMXMSSXSSMMMMMSAMMXSMSXAAMXAMMAXAASMSMSMMXMAMSMMSSSSMXSAAMXMAMXX\\nMMASAMSXMMMXMSMSSXAXAXASXMAAASMMXSAAXAMSSMAMXXAMXXXSMSXSAAAAASXSAAAMXMSAMAMAMXAXMAXXASAAAAXMMMXMXAMSMSMMSSSMSSMXAAXXXSSXMXAXAAAXMASMMMMSXMSS\\nXMXMMMMASXSXSAAAAMMSAMXMAMSMMMXSAMXSMXMXAMXMASMSMMMMAMAMXSMMMMMMMSXMXSMMSSMXSMXMMXMXAMSXMSSMASAMMAMXASAMXAAAXMXSMMMMXMAXSSSMSMSMSAMXASXMASXA\\nXSAMXSSMMAAXMMMMSAAAXXAMAMAAMXXMASXMASXSXMAAXMMAASXSAMXMXAMXAXAAXXMSMXAAAAAAMMSXSASMMMAXSAMXXMASXSSMMMAXMSMMMAAMMAAMMMSMXAMAMAXMMMXSAMAXMMSM\\nMXMXMAAAMMMMMSAMXMSSSSSSMMXXMSAMXSXMSMMXMSSSMMSSMMAMXMXMSXMSMSSSMMAAAXXMSSMMSMAAMAXXAMASMASXXSAMAAXMMSSMAMXMMMMSSSSMMAMXMXMAMMMSAAMMMSXMAAAX\\nMMMAXMSMMMSAAMASXMAMMAMXMASXMSAAAXMXMXMXMAXAMAAXAMXMAMAAMAMMXXXMMMSMMMAMXMAMAMMSMMXSXSMSXMMAMMAMMMMXASXMAMMMASXMAAAMMASASXMMSMAMXMXAAAASMSSS\\nSASMSAXMAAMMXSAMAMMSSMSAMXAAASAMXSMAMAMASMSSMMSSSMMSSSMXMAMAXXAXMXAASXMMASAMMXAXAXXMASMMASMXMXAMAAAMXSXSASASASAMMMMSSXSASAXAAMMSASMMMSMMAMAM\\nSMSAXMAMMXSAXMASXMXMAASXMASMMMXSAMMASASASAAAAXAXMAMXXAASXSMMSSMMSAMXMAASASXSXMSSMMMSAMASAMXAMSMSSXSAXMASXSXMASMMMXAMXXMASAMSMSASMMSAMXMMXMAM\\nMXSMAXSXXAMMSMAMXMAMMMMAMAMXMSAMASMMSXXAMMMMMMSMSAMSMMMAAXAXAXMAMMXSSSMMAMXAMXAAAAXMAXAMAXMXXAMXXXAMAMAMXMAMXMAAXMSSXMAXMAMMAMASAMSMMSMXXXAM\\nMAMXMSXSMAMMMXAXAMMMMXSXMAMMXMAMAMXAMXXXSASXMAXASAXXAAXMMMMMSSMXSXAXMAASAMAXMMXSMMSSMMASAMSSMAXAMMSMXMXSMMSXMXSMSXXAXMXXMAMMMMAMXMXXAMMAMSAS\\nMASAMXAMSSMMMSXXMXSASAMXMAMXXXMMSSMMASAASMMSMXSMMSSSSMSXMAAAAAAAXMASXSMMASMMXXXAMXAAXSAMAXAASMMMAAAMAMMMMAAASMMASMSMMMSMSMMAXMXMSMMMSSMMMAMX\\nSASAXMAMAMAAAXMSMAAAMXSAMXASXMMAAAASASMXMAAXMMMMAXMAMXMASXSMSSMMXSXAMAXXAMXMASAMXMMSMMASMMSMMSAXSSMSASXSMMSSMASASAAXAXAAAASMMMXXSAMAAAMSMASM\\nMASAMSMMMSSMXXAAMXSMMMMAMXXAAAMMSSMMASXMSMMMXAXMASMAMMMXMMAAXXAMASMXSAMMSSMMASMMXSMXMMMAXXMAMXXXXAASASMAXAXXMAMAMMMSMXMSMMAMSMSXXAMMSXMAAXMM\\nMAMAMSAMXAAAAMXMSMXAXXSAMXMAMMMAAAAMXMAMAAMSMSSXXXMAXXXMMXMXMMMMASAAMASAAAXMASASAMMAXAXMASXSMMSSMMMMXMASMXSASXMAMAMAXAAAMXMAAAAXSSMMMASXXMXX\\nMMSMMSAMXSMMMSAAAASXMXMASAASMSXMSSMMSSMSSSMAAMAMSXSASMMSMSMASAMXMMMMSXMMXSMMASXMAMSAMXXSMXAAXXAAMMMMAMSMMXSAMXMAXMSASMSMSAXXMXMXAMAAXMMASXXS\\nMMXMASAMXMASASMSMMSMSSSMMXSMAMAMXXMAAAMMAMXMMMAMXAMASAAAAMSAMAXMMSMMMXXAAXAMAMAXAMMMMSAXXMSMMMMSMAASAXAASAMXMASXSAMXSAMASASXSMXMASMMXAMXMXAA\\nSAMMMSAMXSAMXXAXXAXAAAASXXXAAMMMMAMMSSMMAMXMXSXMMMMAMMSMSMSSSSXSAAXAAXMXMSAMSMSMAMAAAMXMAMAAXXAXMSMSSSMSMXSAMMSXAXXXMXMASAMASMASXMMXAMXSMMAM\\nSAMXXSAMXMMSMMSMMMMMMSMMMASXMXXAXAMXXAXSXMASAMXSAXMXSAMAMXMAXAAMSMSMMSMMMSMMXAXSMMMMMXASMSMSMMXMAXAMXMXAAASASXXXMMSMMSSMMAMAMMXSMAAASXMAMAAM\\nSAMSMSAXMAXAAXXAMXSXAAAXMAMXAXSXSASXSMMSASASASAMSSXAMMSAMSMXMMMMAXXAXAAAMMAMMXMAMXAASXMSAAAAXXXMASAXAMSMMMSMMMMMXAXAAMAASXMAMMXMXMMMMASMXSMS\\nSAMXAMXMMMSMSSXXMAMMXXMMMXXMSMAAMAMAMXASAMXSXMASAMMMSASAMXAXSXSMSMSXSSMSXSAMXASAMXMMMAAMXMSMMXMAMXMMAXMAMMXAASASMSSSMSXMMMSXMSAAXXMASAMMAMAM\\nXAMXMMSSMMAMXAXSMSXSASMMSAXSAAMXMAMAMMXMAMAXMMXMMSAMMMSAMMMMMASAMXXMAAAMAXAXXMXAMSSSSMMMMMMXXMAAMAXMXMSAMSSSXSMSAMMXXSMMAXAAASMMMXSAMXMMASAA\\nXXXAXSXAASMMXSMMAMAMAXMAMMMSASMSSMXSMSASAMMXXXAXXMAXAASXMAASMAMAMAXASMMMASMMSSSSMAAAXXMXXAAAMAXAXXSMSAXXSAMXMMXMAMAXXMASMSMMMSAXSAMASMMMMSMM\\nMSAMXAMMMMAMXXAMAMXMXMMAMMMSAMXXASAAASASXSXXMSMSAAMSMMSMSASMMMSAMSSMAXXXXSXAXAAMMMMMMXSMSMXSASMSMAMMMSXMAXXMASASAMXMMSAMXXXMAXXMMASAMMAAAMAX\\nAAMMXMSSMSAMXSSMSSSXMMSMMAMMMMAMAMMMMMAXMAMAAAXMASXAMMMXXXXMXXMAAMAXMSXSAMXSMMMMXXXXMXMAAAAAMXAMAAXAAMMMMMMMMSXSXSAXMAMSXAMXSXAMSXMMSXSSSSMM\\nSSXSMXMAASMSXMXMMAXSAMAMSMSASXSMSXXXAMXMXAXMSMASAMXXXAMMSMSMSXSMMSMMXSAMXMAXASMXMXMMAAMXMMMSXMMMXMXMMSAAAMXXXXAXAMMXXMSMMMMAXMMXMXMASAMAAXXA\\nXMAMAAMMMMAMAMXSMXMXMMAXAASASAXAMXMXASMMSSMMAXXMASASMMMAAAAAXAXAAXXMAMXMAMASAMAAMAAXSASXXSAXXAXSASXAAXXSSMMAMXAAMSMSMMAXAAMXSAXMMXMAMSMMMMMS\\nMMMMSXSXMAMSAMAMMSMXMSSSMXMMMXMMMASAMXAAAAMMSMXMAMXMASMXMSMSMMMMXMASAMASASAMXMSSSMSXMAXXASXSXSASASMSMXXXMAASXAMSXAMAASASXSSSMXSAMAMMSXXMAMAX\\nXSXAXASAXAXSXMASAAMAMAXAXMAMASMXSASASXMMSSMAMMSMXMAMXMSAAXXXAMASAMXASMAXASMXAXAMXMXAMXMMAMAMAAXMAMAXXXXAMXMMAMSAASMSMMMSAXMAXASXMAXXAMXSASMX\\nAXMMSMMMMXMMXMMMMMSASMSMMMSMASAAMXSXMXSAMXMAXAAXMSSMMAXMXMASAMSMMSMAAMXSXMMASMMSAASXMASAAMAMMMMMSMMMAMXAMAXSAMMMXXAXAMMMMMSMMMSASMSMASASXAXX\\nSSMXAMAASMMSAXAXAMXXSXAXMAMMAMMMSAMASMMMSMSSMMMMMAMAMXXXSAMSSMXMSAMAMXAMAAXMAAXSXMAAXXXSXSAXXAXMAAXMAXSAMAMMMXAXMMSMMMAAAXAXAXSAMAMMMMASXMXS\\nAXMAMSSMSAAAMSSSMMSAMXSMMXXMASXAMASMMSAXSMAXMASXMASXMMMSAMXMAXAMMASMXMMSMMMXMSAMXSXMMMMMMSMXSXSSSSMMAMSXMXSASMMSAXXAASXSXSAMXMMAMXMAXMXMAMAS\\nMSSXXAMXMMMMMMMAAAMAMAMAMMMMXMMXSMMAASXMSMSMSASAMXSXAAMMMMASMMSSMXMMAMXAAAAXXXAAASMMSXMAAMMASMMXXAAMSMSASAMMSAMXMXMMMMAAXXMXAXXXMASXSAMXMMAS\\nXMAMMMSXXXAXASMMMMSXMASMSAAXSXAAAMSMMMSAXAXAMMSAXMMXSXXAXSMXAAAAMAAXAMXSSMSMASXMAMAAMASAMSMASAXMMSMMMASAMXXMMMMMMMMSSMMMMSSSMMAMSMSAXAAXXMAS\\nXMAMAAMMMSSSMMAMAMXMMXSASMMSAMMSSMXAAXMSMXMASMXMXASMMMSMXASMMMSSSSSMMXMAMAAMMMMSSSMMSMMASXMAXMMMXAAAMMMAMAMSMSAXXXAASAMXAXAAMSMMAXMXMSMSAMXM\\nXSASMXSAXAAMASMMASAMXAMXMASXMXAXAXSMMSAMXXSMMMAMSMSAAAAXSAMSAXAMAAXAAMMAMSMXAAAMXAXMAMXXXXMXSSSMASMMSXXAMAXAASXSMMMSSMMSSMMMMAAXXMMMMAAXXMSM\\nMSASAXSXMMSMAAASMMASMXMAXXXAXMMMMMXAXXMXSXMMASAXXASXMMSMMAMSXMASMMSMMMMXMASAXMSSSMMSASMMMMMSXAAXAXAAAXXSSSSMXMXSAAMAMAAMASAXSASMSAMASMSMSMAS\\nMMMMMXMXMXXMMSMMMMAMMASMSAMXMMSASASMSASAMXXSASMSMMMSMAXAXAMXMXXMXXXXXSAMXMXSAAMAXXMSASAAAASAMSMMMSMMMSXAAMMXAMMMSSMMSMMMSMXXMXMAMASAMXAAXSAS\\nMAMAMASASMXXXAXXAMAASMAMXXAAMXSASAAASAMAMSAMXSAMAAASMSSMMMXAAXXASMSAMAXXXXAXMMMMMXAMAMXMXXAAMAAAAXAAAAMMMXSSMSMAAMAXXMSXXAMSSMSSSMMAMSMSMMXS\\nSASASXSAXAASMMSSXSSMXSAMMMMASAMAMMMXMASXSMXMASASAMXSAASAASXSMSMAMAAXXAMSSMMSXMAXMMMMXMASMSSSSSSMSXSMSSXSAAMXAAMMMSMMMMMXMAMAAXAAXXMAMMAAAMMS\\nSASAAAMXSMMMAAAXMMMMMMXSAXSMMXSMMXXXSAMMAMXMASAMXSXMMMXMMSAAASMAMXMXMMSMAAAXMMMSAAXSMMMAAXAAAAAMMMMMMXAXMSSMSMSMMMMAMASMMMMXSMMSMMSSMSSSSMAX\\nMAMAMXMXAXSSXMMSSSMAAMSMMMASAASXMXSXMASXMMXMAMXMMAMSMMSSMMMMMMMAXASAAMAMSMMMMAXSMMXAAAXMXMMMMMMMSAMMSMSMAAMMXXAXMASMMAXAAAAXXXMAAAAXAAAXXMSS\\nMSMSMAMXMSMASASAMXMMXMAAAXMMMSMAMXMAXAMXXMSMASAXMAXAAMAAXSASAMSMXASMMSAXXAMAMSMMSSMSSMSXSXMXMXMASAXMXAAMMMXMASMMSAMXMSXXMMSXXAMASMMMMMSMXMAM\\nMAAMAMXAXAXMAMMMSMXMXXMSSSXXXAXAMSAMXSAMMSMSAXXSXSMSSMSSMAMMAMASMAMMMMMMSAMXXMAAAXXAXXSMAMMASMMMSAMSMMMSMMMXMSXMMSXMAMASXMMMSSMXMAAXXMAMSASX\\nSMSMXXXASMSXXXAXAAAXMSMAMMMSSMSSSXMXAXAMXAAMXSXMAXAAXAMXAMXSXMAXMAMXAAMXSAMXMSMMMSMMSXXMAMSAMAAAXAXXAAAXAMXSXSAMAMXSAMXMAAXAAXMAXSAMXSAMMAMX\\nMAMAXMMMAXAXXSSSMSMSAAMAMAAAXAAMMMAMXSAMSMSMXAASAMMMMXMASXMAMMXMSMSSSSMAMASAMAXAAXAASMSMAXMASXMSSMMSMMSSMMAMMSAMXSXMASMSMMMMMSSSMXASAMAMMXMM\\nMAMAMAASAXMMAMAMXMAAMMSSSMSSMMMSAMXMMMMMXAAAXSXMASXSAXSXMASMXSAMAAMAAMMSMAXAXSSMXSSMXAAMXSSXMXXXAMASAAAXXMASASAMMAASXMMSAMXSXAAAASMMASAMMSMS\\nSSMMXSMSMSMMMMASAMXMAXAAAAMXAMASMSASAMASMSMSXMASXMAMSMMAMMMXASXSMSMMMMAAMMMSAAAMAMMXMSMMMMXMAMXSSXASXMMSXSSSMSAMAMMMAAASAMAMXMSMMMASAMASXAAX\\nMMASMMAMAMXAXSASASMXXMASMMMSSMAXMMAMXSASXXAMMXAXAMXMAMSSMSAMXSAXXXXMMMSSSMAXMSSMASMSMXSAAMAMAMXXAMXSASXSAXAMXSAMSMASMMMSMMXMAXAXAMXMASAMXMMM\\nXSAMAMAMSXSXXMASAMXMSXMXMAXMMMSXSMSMMMMXMMSMAMXSSMSSMXAMAMSXAXMASXMSAAXAAMXMMAMMXSAXMAMXMSASASXMMAMSAMMMMMSMMMXMAMASASASXAXSSSMSXSASMMMXAMAA\\nAMAMSMMMAASMXSASXXSSMASXSMSAMXXAMAMSMASXXAAMAMAAAAAAMMMSXMXMMMMMMMASMSMSMMMSMASXMMMMMMSAASASMSMAXMXMXMAMSAMAMXSSXXMSXMASMSXMMAAAASMMAXMSMSMS\\nXSAMXAXAMXMAXMASAXSASAMXXXMXMASMMMMXSAMAMXMMASMSMMMSMMAAASXAAAAAAXXXAXXMAMSAMAXXAAXXAAXMMMXMASASXMMSMSMSMASXMAXAXSAMMMSMXMASMMMMMMASXMMAXMAM\\nXXASXMMSXSMSMMSMMMSAMXSMMASAMXXSAAMMMMSSMASAAAAMXMXMAMMSSMASXXSSSSSXXSMSMXSASASMMMSMMSMMASAMAMXMAMXAXAXXMMMXXXMAMSAMMSMAXSAMXAMXSXMASXMAMSAS\\nMSMMASAMSXAAXXAAAXMXMXAXXMAMMAMSMXXSMAAAMASAMMMMXAASXMAMAMMMSMMAMXXMMMMAMASAMXSAAAAAXAASAXAMXSMSAMSMMSSMASMMSMMMMSAMXASMMMXSSSMMXMXAMMASMSAS\\nMAAXAMAXMMXMAXMMMXMASMMMSMAMMAMMSMASMMSSMXSAMXXMMSMSAMXSMXAAXMXSAMXXAAMAMMSAMASXMSSSMSMMASMMMMXMAMAAAAXXAMAAXAAMMMXMMXXXMXMAAMXSAMMXSAMMAMAM\\nSSXMXXMASMSSSXXASASASAXAASASMMMAAMXMAMMAMXSMMXAXXAASXMAMXSMSSSMXAXMAMMMSMXXAMXSXMAXMMMAXAAAAAMMMMMSMMSMMMSMMMSASAMSSSMSSMMAMXMASAMAAAXMMSMAM\\nXAXSMSSMXAAAMMSXSASASAMSMSMSASMSSSMSXMXAMMMMSSMSSMXMXSXSASXAAMASMMSMMSAXMMSXMXMASMMMSSXMASMSXSAMSAMXAMXAAMASAMMMASAAAXAAASXXSMMSMMSSMXXXXSXS\\nMSMXAAAXMMMMMAMMMAMAMMMXXSXMASAAAAMMAMSSMMAAMAXAAXAXXMAMASMMSMXMAAAAAMASAAAAMMSAMAAAAMAMXXAAMXXAMXMMSMSAMSAMAMXSMMMSMMSSMMSMXMXMMAMAXAMAMXMS\\nMASXSMMMMAAAMSSXMAMXMASXAXXMAMMMSMMSAMXAASMSSSMSSMSSSMAMMMAMAXASXMMMMSAAMMSXMASASXMMSSSMSMMMMAMMSSXSAAMAAMMSMMAXAXXXAXXAXAMXAMAXMAMXMXMAMAAX\\nSASMMMAASXSMSAAMSMSMSASMAMMMMSAMXMASMSSMMMAAAAAMXAXAXXAMASXSAXMXMMXAMMXSAMXMMMSAMXMXAAXAAAAAMAXSAMXSASMMMAMAAMXSMMSSXMSXMXSSMSSSSMSSSXSASMSS\\nMASAXMMMSXAMMMSMSAAXMAXAXXAAAMMSAMASXAXASMMMSMMMMXMAMXSSMSAMXXSAMMSMSMAXAXMASAMMMAAMMMMMSSMSXSSMASAXMMXXMASMSMMMMAXAAMMAMXXAAXMAAAAAMASAMAAM\\nMXMXMASAMXXXXXMAMSMMMSMSXSSMMSASMMASMASXMASXAAAMMMSSMAXAXMAMAMMAMAASAMXXMSSMMMXAMXXXXXXXAMXXAMAXAMXSMSXSSXMAAAAXXMXMMMSAMMSMMMMSMMMSMAMAMMMS\\nMMMAAMMAXXSSMSMXMMSAXMAMAMAAAMXMXSXXMMXXSSMSSSMSAAXAMSSMMSAMASXSMSXSXSXXMAMAMSMSSXSAMXMAASAMXSAMXMAAAAXMMAXSSSMSMMSMMXMAAAXAMXMAMMXMMMSSMMMX\\nXAMXSMXMMAAAAMMAMMMSAMAMAMMMMMSAMMAXSMMMMAAAXMAMMMSAMXAXAXASXSAXAMXSAMMAMAXMMSXMAASXAAMAMMXSAMXMMMSMAMSSMMMMAXMSAAAASMSMMMSMSMSSXSAAMAAAAXXM\\nSSSMAAASMSMMSMMASAAMMSASAMXAMXAAAMSMXAAAXMMSSMMSAMXMXSMMMMXSAMXMMMAMAMXXAMXMAMAXMMMMSXSASXAMXSXXAAMXMXAXAXAMXMASMMSSMAAXSMSAAAMAASXMMMXXMMMX\\nAXXAMSMSAAMAMASASAXMASXSASMSSXSSMXAAXSSXMXAMMAMSASASMAMASMMMMMMXMMAMMMSSMSAMASXMXAXMXMMAMMXMMAMMMXSASMSSXSSSMMMXMXMXMMMSMAMAMSMMMMMSXSSMSAMS\\nXMASXXXMMMMASAMXSASMASAMAMAAMXMAMSMSMMAMSMMSMSMMASASMXMAXAAXSAAASMMXXAXAAAMSASAMSMSAMXSAMXXXMXXXAXSAMAAMXXAAXSMAMAMMXXXMMSMXMXXXAXAXAMAMSASA\\nXMXMXMXSXXMXSXMAMAMMMMAMXMAXMASAMSAMXMAMMAMXXXAMXMAMASMASMMMSASASAAAMSSMMMXMMSAMSASXMAXMMSSXMSSMMMMMMMMSMMSMMAMMSMSAMSSMAXASXXSSMSSMMMAMXXMA\\nMSAMASAMMMMAXASXMXMAXSXMXASXSAXMSMXMMMMXSAMMXSAMXMXMMXMAXMAXXMMASMMSXMAMAMAMMSAMMAMXMMXSAMXXSAMXSMAXXXMAXAXASMAXAMXXMAAMASAMXAMAMAMAXSMSSMAX\\nASASAMASAAMAMXAXMAMXXMAXXMAXMXMMMMXMSAMXSASAMXMXSMSMXSMMMSXMAXMXMXXMASMMASXSAMASMXMAMXAMXMMSMASAMXSMMMSMMMSMMXMMASAMMSSMASAMXXMAMAMMMAAAAASM\\nMSAMASASMSSSXMMMMSSMAXMASAMXMSMSAMAXSASASMMMAMMAAXMMAXAAASASXMXSXMAMMMXSXSAMXSAMMASASMMMSAMASAMXSAXAAAAMAMAMMAMSAMAXAXAMASAMMMSMSXSSSMXMMSXA\\nMMMSXMASMMMMAMXXAASXXAMXAAXXMAMSAXXXSXMAXXAAAAXSMXSMSSSMMSAMMMAMMSMMAMASMMXMXMXSXXMASMXASASASMSAMMSXMSMSMSASXMXMMSSMMSMMMMAMXAAMSXMXXXAMXMMS\\nXAMXMMAMASXSAMAMMSSMMSSMSSSMSXXSAMSMMXSASXSSSMMASAAXMAXSXMMMSMASAAAMXMASXSASAXAMMMMSMMMMSXMASAMASAXXMXASMSXMAXXXXAXAAAXASXMMMSSXSASMXSXSASAM\\nMMMAMSSSMMASASAAMMXAAAAAAAAAMMAXAXSAMAMMXAAMAMSAMSXMAAMXMASAMXAMMSSMAMASAAAMAAXSAXXXASXAXMMMMXMXMASXMSMMASXSXMMMMMSMMMSMSAAXAXMASMMMMSMMASMM\\nMASAMSAMXMXMXSMSMAMMMSXMMXMMMAMSMASAMXSAMSMMAMMMMXMSMMSAMXMASMSSXAAMAMXMXMXMXMSAXSASAMMMSAAAMAMXMAMXAAAMXMASAMAAAAAAAAAASMMMSSMAMAAXAXAMAMAM\\nSASXSMMMXSMSAMXAMASXAXMSSXMAAXXMXMSMMASAMXASXSASMMASAMSXMXSXMAXMMSMMMSAMXXAXAMXMMMXMMMXXAXSSSSSXMSSMSMSSXSAMASXSSSSSMSMXMXSAMAMASMMSMSSMXSSM\\nMASXXXXXMMAMMMSASASMASAAAASXSSSMAXSXMAXXMSAMMSAMXMAMAMXMAXSAMXMXAAAAXMAMSXSSMSAXXXSXMASAAMXAAXAXSAMXMSAMXMAMXMAAAXAXAMXMSXMAMSMMMAXMMSAMXMAS\\nMAMMMSMSAMAMAXXAMAXAMMMMSXMAAAAXMSMMMMXMXAMXAMSMXMXSXMXXMAMXSAMMSSMMSXSMSAAAASASXXXASASASMMMMMXXMAXASMMSMSSMMMMMMMXMMMSSMMSSMAASXMMAXSAMXSAM\\nSSSMXAAAXXASMSMXMMMXXAXAXAMXMSMMXAAMMAASXXMSSXXMAMAMXMXMSSSMSAMMAXMASAMASMMMMMMAMASXMASAMXXXAAAMMSSMSMXSAAXAAMAMAXXAAAXAAAAAMXMMAASAMXSAMXMS\\nSAAXXMSMSSMSAXXAAAASXSSSSMMXAMXAMXMMMMMXAAXAMXMAXMSMAAMAAMAASAMMAXSAMAMAMAXMXAMAAXXXMAMAMMMSSSMSAXMAMXAMMMSSMMXSSMSXSSSXMMSSMSSMSMMAAXMSAMXS\\nMSMMSAAXMAMXMMMSSMXSAAAAAMMSSSMXSASXAXMMSMMASMMAXSASASMMXSMMMMMMAMMASXMXSXMXSXMMMMSMSASMMSAMAAAMASXMSMMSSMMMXXXXMASAMXMASAXAAAAMMXMMMMSAMXAS\\nXAMAAMSXSMMXXSXAAMSXMMMMMSAAAXAAMMMSASAAAAXSMXMAXSAMMXMSMSAMXAMXMXMXMAXAMAMXSMMSAASASMXMASMMXMMMXMASAMMAMAAAXXMSMSMMMASXMASXMSSMSSMSAMXXMMMS\\nSASMMXAASXMXMMMSSMAMSMXMAMMSMMMMMSAMXSMSSSMMASMMXMAMMSMAASAMSXXAXMAXMSMSSXXMXAAXMSMMMAXMXMASMSAMASXMAMMAXSMMSMAXMMAAMXMXXAMXMAMXAAXMASMXMAAX\\nSXMAXMMXMAXXSAAMAMXSAAAMASXXAMAAAMMSASXAAXAMXMASMMMMAMSMMSAMXSSSSSXSAXAMMMMMMMMSSXMAMXMSMXXMASASASMSSMXMXXAAMMSMMSSMSMMSMASMXXXMMSMSXMAASMMS\\nMMSXMASXSXMAXMXSSMSMMSMSMMMSMMMMSSSMMXMMSMSMAMXMMSMMXMSXXMAMAMSAAAAMXMAMAAAAASXMMAMXXMAAXSAMXSXMAMXXASXSAMMMSAMXXAMMAAXMSAMXXXXXXXAAAMMMXAXA\\nMAXAMXMASAMMSMMSXMAXMAMXMXMAMASXXXMASXAXXAMXSXMXXAAXMXXMSSMMAXMMMMMMMSSMSSSSSSXMMMMMMSSMMASMAXAXXMMMAXXMAMSAXXSMMMSSMXAXMXSMMSMMMMMSMMAXSSMX\\nMSSSMSAMSXMMAAXXAXAASASAMMXASAXAAXSAMXSAMXMAMASMSMSMSMAAMAASMMSASXXXXAMMMAMXMMMXASAAXAAXSAXXXMSMSAAMMAMMMMAAMXXAAAAAMMSXMASXAAAAXAMAMXXMAAXS\\nAXXMAXXXXXMSSSMSMMSASASXSASMMXSSSMMMSAMMSSMSMAMAAXMAASMMSXMMAXSAMXASMMSSMSMMAAXMASXMMSSMMASMSAAAXXXMXASASXXAMMXSMSMSXAXAMASMSSSMSSSMSAXMSMMA\\nMSMMAMSMMSAAAMAAXXXAMAMAMMSAAAXAXMASMASMMAAXMMMSMMMSMXMMXMMMXMMAMAMXSAAXAAAMSASXMMMXAMXAMXXAMSMSMMMMSXSASMSMAXXXAXAXMASAMXSAMAXMAMXXMAXMAAAS\\nXAAMAMAAASMMMMSMSMMXMAMAMXXMMMMMMMSMSAMASMMMXXAMXAAMXMSAMAAXSXSASXSAMMSMSSSMMAXXAAMXSMMXXAMSMAMAXAAAXAMAMASMMAMMAMMMAAMMXXMAMAMMXMXSSSSSMXXA\\nSSSMMSSMMMXXXAMXSAMASMSMSMXXXXAAAMMAMXSMMXMMXMASXMXSAMSASMMMSXXASAMXSXMMMXMXMXMXMXSAXAXSMSAASMSASXMMSXMAMMMAMXXMAMASMSSMSSSMMSSMSAXXAMAAAMSM\\nAXAXAAXASMMSAAMAMXSAXAAAAMMMMXSMSSMAMXAXMMAMXMMAMAAMAXSAMMSXSAMSMMMAMAAMXAMASMMASAMXSAMXAAXXXXMMXXAMXASXSSSMMSASXSAXXAAAAXAXAAAMAXMMMMSMMMAX\\nXMMMMSSXMAASMSMAXAMXSSMSMMAASXMSAMXAMXMAMSAMXSMAMMMSMMMXMXSAMXMAAXMASXMXMMMMXAXAMAMAXMMMSMMSSSSXXAMMXAMAMAAAAAMSXMASASMMMXSMMSMMMXXAMXMXAXSM\\nSMXAXXAXXMMMAMMSMASMXXAAMSSSSXMMXXSMXAXMASASAXMAMAXAAASMSXMAMMSMSMSAMMMXMAAXSMMMSSMXXAAAMAXXAAXMMSMAXMMMMSMMSSXSAAAMAMXMSAMXMMXSXMSSSMMSMSXS\\nSMASXXSSSSSMMMAMSMMAAMXMMAMAMAXMMMMMXSSMXSAMXSSMXXXSSMXAAMSSMAAXXAMASXAASXMMAAAAAAAASMMSSSSMMMMMAAMXSAAXAAAAMMAXMMXSAMXAMASXMAAXAAXMAAAXSMAA\\nXAAMXAAAXXAMXMAXAXXMMSAMMSSSSXMAASASAXAMAMXMXMASAMXXXMMMMXAXMXSMMXSAMMSXSASMSSMMSSMMXXAAXMXMXXSMSXXAAXXMSSMMSMSMSAMMMMMXSAMAMMMSMSXXSMMSAMMM\\nMMMSMMMMMSAMXSXSMSSXAXAMSAAXAMSMXSAMXMAMMXMAMSAMXAMMAMSMXMMSSMMMSAMASAMXSXMAAXXMXMAXMMMMSMMMMMMMXAMSSMXXAAAXAAMXMAXSMXSMMXSAMMXSMMXXXAXSAMSX\\nAAAXXAAAMXXMXSAAXAMMMSXMAMSMMAMMAMXMASXMSAAAAMMSMXAMAMXAMAXAAAAXMASMMXSAMMMMMMAXAMMMSXAAAAAXAMAAMAMMAMMMMMAMMSMMSSMAAASASASMMSASAMXMSMXXMMSX\\nSMSXSSSMSMMMAMMMMAMAAMXMSXXAXASMSMMSAMAASMMXSAAAAXSSSSXAMSMXSXMXSAMAXAMAMMAMAMMMSMSAXSXSSSMSSSSSSSMSAMMASMASAAAMAMXSMMMSMASAAMXMMMXMAXXXSAMM\\nXAMMMXXXMXAMXSAMXSSMXSAMAMXSMASXAAMMASMMMMXMMMSMXMAAAXXXMXMMMMSMMMSSMMSSMSASASMMMAMXXMMMMAXXMAXXXXASXXMAMSAMXSSMASXXAAXXMSMMMSMSAASXXSMMMASA\\nSASMSAMMMMMXAXAMAXAAXSMSASAMMXXMSXMMMMAXMSAASAMASMMMMMMSAMXASAMAAMAXAAXAASASASAAMAMSAXAAXXMMMSMMMMXMASMAMMXMAXAXAMASMMSAMXAXAAAMMMMXAMXAMXMM\\nSAAXMXMAAASMSSSMMSMAMSASASAXSMMMMXSAMSSMAXSSMAMAAXXAAAMAAMSMSASXMSMXMAMMMMAMXSMMSAMSASXSSMXXAAAAAAXMAMMXMASMMSAMXSXMMAMMASMMMMSMMSMMMSASMSMM\\nMSMXAASMSXSAAAASMXXAAMAMAMAMAAXSMASAMAAMSMMXMAMXSASMSSSSSMAASAMXXAXXSAMXAMXMAXAXSMXMAMAAMAXMSSSSSSSMASAMXAXAXMASAMAAMAMMAXAAXAAAAAAAAAAMXMAS\\nAXXSSMSXMMMMMSMMSAMSSMXMSMASXSMXMASXMSSMXXMASXSXXXSAMXMAMXMMMMMXSSMXAXMASXMMMSAMXSXASMMMMMSAMXXMAXXXXSASMSXSAMXXMSAMSSSMASXMSMSMSSSMSSSXASMM\"","export default \"47|53\\n97|13\\n97|61\\n97|47\\n75|29\\n61|13\\n75|53\\n29|13\\n97|29\\n53|29\\n61|53\\n97|53\\n61|29\\n47|13\\n75|47\\n97|75\\n47|61\\n75|61\\n47|29\\n75|13\\n53|13\\n\\n75,47,61,53,29\\n97,61,53,29,13\\n75,29,13\\n75,97,47,61,53\\n61,13,29\\n97,13,75,29,47\"","export default \"39|57\\n31|97\\n31|75\\n29|45\\n29|73\\n29|84\\n66|91\\n66|39\\n66|57\\n66|54\\n97|16\\n97|38\\n97|59\\n97|11\\n97|62\\n87|38\\n87|59\\n87|18\\n87|93\\n87|13\\n87|33\\n25|55\\n25|22\\n25|31\\n25|64\\n25|33\\n25|85\\n25|93\\n68|11\\n68|57\\n68|36\\n68|78\\n68|66\\n68|73\\n68|39\\n68|27\\n32|29\\n32|73\\n32|45\\n32|14\\n32|48\\n32|39\\n32|54\\n32|74\\n32|17\\n17|76\\n17|45\\n17|25\\n17|14\\n17|91\\n17|11\\n17|27\\n17|38\\n17|16\\n17|22\\n34|66\\n34|91\\n34|64\\n34|29\\n34|74\\n34|65\\n34|68\\n34|26\\n34|36\\n34|13\\n34|93\\n48|76\\n48|34\\n48|55\\n48|22\\n48|42\\n48|89\\n48|14\\n48|85\\n48|87\\n48|23\\n48|38\\n48|79\\n73|62\\n73|13\\n73|42\\n73|25\\n73|55\\n73|26\\n73|65\\n73|59\\n73|18\\n73|21\\n73|64\\n73|34\\n73|79\\n52|21\\n52|18\\n52|13\\n52|22\\n52|32\\n52|55\\n52|85\\n52|42\\n52|93\\n52|39\\n52|26\\n52|66\\n52|34\\n52|68\\n74|27\\n74|57\\n74|48\\n74|73\\n74|91\\n74|16\\n74|87\\n74|38\\n74|54\\n74|75\\n74|29\\n74|62\\n74|69\\n74|84\\n74|23\\n38|37\\n38|21\\n38|13\\n38|42\\n38|64\\n38|55\\n38|66\\n38|23\\n38|85\\n38|32\\n38|79\\n38|34\\n38|89\\n38|33\\n38|52\\n38|22\\n69|65\\n69|62\\n69|38\\n69|55\\n69|34\\n69|37\\n69|33\\n69|79\\n69|21\\n69|18\\n69|87\\n69|23\\n69|85\\n69|22\\n69|16\\n69|93\\n69|89\\n11|18\\n11|85\\n11|89\\n11|59\\n11|52\\n11|22\\n11|26\\n11|87\\n11|25\\n11|76\\n11|37\\n11|23\\n11|42\\n11|21\\n11|62\\n11|38\\n11|13\\n11|69\\n33|97\\n33|27\\n33|68\\n33|29\\n33|44\\n33|31\\n33|93\\n33|66\\n33|32\\n33|84\\n33|11\\n33|45\\n33|17\\n33|54\\n33|78\\n33|75\\n33|39\\n33|36\\n33|91\\n91|79\\n91|55\\n91|22\\n91|87\\n91|23\\n91|36\\n91|25\\n91|16\\n91|76\\n91|45\\n91|59\\n91|11\\n91|75\\n91|29\\n91|62\\n91|27\\n91|69\\n91|54\\n91|48\\n91|52\\n75|34\\n75|21\\n75|42\\n75|25\\n75|76\\n75|79\\n75|23\\n75|89\\n75|18\\n75|22\\n75|26\\n75|62\\n75|69\\n75|73\\n75|11\\n75|85\\n75|37\\n75|14\\n75|52\\n75|59\\n75|38\\n59|55\\n59|13\\n59|79\\n59|32\\n59|65\\n59|93\\n59|42\\n59|52\\n59|18\\n59|44\\n59|37\\n59|85\\n59|22\\n59|25\\n59|68\\n59|33\\n59|38\\n59|31\\n59|21\\n59|23\\n59|89\\n59|26\\n26|29\\n26|39\\n26|44\\n26|31\\n26|91\\n26|17\\n26|32\\n26|93\\n26|74\\n26|66\\n26|48\\n26|57\\n26|36\\n26|97\\n26|13\\n26|45\\n26|64\\n26|65\\n26|27\\n26|33\\n26|84\\n26|78\\n26|68\\n79|42\\n79|26\\n79|57\\n79|31\\n79|89\\n79|93\\n79|18\\n79|17\\n79|33\\n79|68\\n79|74\\n79|39\\n79|85\\n79|37\\n79|78\\n79|21\\n79|44\\n79|66\\n79|65\\n79|34\\n79|64\\n79|32\\n79|97\\n79|13\\n42|37\\n42|18\\n42|13\\n42|97\\n42|29\\n42|39\\n42|78\\n42|64\\n42|65\\n42|66\\n42|89\\n42|26\\n42|44\\n42|57\\n42|85\\n42|34\\n42|32\\n42|93\\n42|31\\n42|74\\n42|91\\n42|17\\n42|33\\n42|68\\n18|17\\n18|97\\n18|44\\n18|36\\n18|29\\n18|33\\n18|91\\n18|27\\n18|64\\n18|74\\n18|57\\n18|65\\n18|13\\n18|68\\n18|84\\n18|26\\n18|78\\n18|39\\n18|66\\n18|54\\n18|93\\n18|31\\n18|32\\n18|37\\n22|26\\n22|93\\n22|13\\n22|78\\n22|66\\n22|37\\n22|31\\n22|97\\n22|34\\n22|32\\n22|85\\n22|21\\n22|39\\n22|42\\n22|65\\n22|64\\n22|44\\n22|33\\n22|89\\n22|74\\n22|79\\n22|68\\n22|55\\n22|18\\n62|44\\n62|25\\n62|85\\n62|22\\n62|64\\n62|33\\n62|13\\n62|87\\n62|26\\n62|89\\n62|16\\n62|23\\n62|79\\n62|38\\n62|59\\n62|93\\n62|55\\n62|37\\n62|18\\n62|21\\n62|42\\n62|34\\n62|65\\n62|52\\n21|34\\n21|66\\n21|93\\n21|17\\n21|44\\n21|37\\n21|68\\n21|26\\n21|74\\n21|57\\n21|18\\n21|91\\n21|65\\n21|13\\n21|31\\n21|89\\n21|32\\n21|85\\n21|39\\n21|97\\n21|78\\n21|42\\n21|64\\n21|33\\n93|84\\n93|11\\n93|57\\n93|45\\n93|36\\n93|29\\n93|76\\n93|39\\n93|31\\n93|14\\n93|91\\n93|32\\n93|66\\n93|75\\n93|48\\n93|97\\n93|78\\n93|73\\n93|74\\n93|54\\n93|17\\n93|27\\n93|44\\n93|68\\n23|32\\n23|26\\n23|68\\n23|79\\n23|39\\n23|64\\n23|25\\n23|65\\n23|22\\n23|85\\n23|31\\n23|93\\n23|55\\n23|21\\n23|13\\n23|89\\n23|37\\n23|66\\n23|52\\n23|18\\n23|33\\n23|44\\n23|42\\n23|34\\n84|52\\n84|73\\n84|11\\n84|55\\n84|14\\n84|87\\n84|76\\n84|89\\n84|16\\n84|62\\n84|48\\n84|42\\n84|54\\n84|21\\n84|69\\n84|38\\n84|22\\n84|45\\n84|79\\n84|34\\n84|23\\n84|75\\n84|59\\n84|25\\n16|22\\n16|18\\n16|85\\n16|65\\n16|37\\n16|44\\n16|13\\n16|21\\n16|38\\n16|59\\n16|25\\n16|23\\n16|87\\n16|55\\n16|68\\n16|52\\n16|89\\n16|33\\n16|34\\n16|64\\n16|42\\n16|79\\n16|26\\n16|93\\n85|44\\n85|65\\n85|39\\n85|37\\n85|84\\n85|57\\n85|64\\n85|26\\n85|32\\n85|91\\n85|74\\n85|33\\n85|18\\n85|27\\n85|78\\n85|93\\n85|17\\n85|97\\n85|66\\n85|31\\n85|36\\n85|29\\n85|13\\n85|68\\n55|26\\n55|89\\n55|64\\n55|37\\n55|78\\n55|44\\n55|93\\n55|68\\n55|39\\n55|97\\n55|79\\n55|17\\n55|21\\n55|31\\n55|85\\n55|66\\n55|13\\n55|65\\n55|42\\n55|18\\n55|34\\n55|33\\n55|32\\n55|74\\n65|75\\n65|66\\n65|11\\n65|78\\n65|39\\n65|68\\n65|44\\n65|97\\n65|36\\n65|31\\n65|45\\n65|91\\n65|14\\n65|48\\n65|33\\n65|57\\n65|84\\n65|17\\n65|93\\n65|54\\n65|27\\n65|29\\n65|74\\n65|32\\n76|37\\n76|25\\n76|42\\n76|69\\n76|23\\n76|18\\n76|16\\n76|89\\n76|62\\n76|52\\n76|34\\n76|55\\n76|21\\n76|13\\n76|79\\n76|38\\n76|65\\n76|85\\n76|26\\n76|59\\n76|87\\n76|73\\n76|64\\n76|22\\n27|21\\n27|55\\n27|38\\n27|79\\n27|59\\n27|73\\n27|75\\n27|11\\n27|16\\n27|62\\n27|42\\n27|23\\n27|76\\n27|22\\n27|45\\n27|34\\n27|52\\n27|84\\n27|87\\n27|25\\n27|48\\n27|69\\n27|54\\n27|14\\n14|52\\n14|73\\n14|22\\n14|69\\n14|25\\n14|34\\n14|16\\n14|23\\n14|21\\n14|37\\n14|38\\n14|64\\n14|87\\n14|85\\n14|59\\n14|26\\n14|13\\n14|18\\n14|76\\n14|42\\n14|62\\n14|79\\n14|55\\n14|89\\n36|48\\n36|75\\n36|23\\n36|21\\n36|73\\n36|84\\n36|54\\n36|87\\n36|25\\n36|62\\n36|42\\n36|16\\n36|79\\n36|76\\n36|27\\n36|38\\n36|11\\n36|22\\n36|69\\n36|52\\n36|45\\n36|14\\n36|55\\n36|59\\n13|17\\n13|44\\n13|27\\n13|93\\n13|32\\n13|33\\n13|66\\n13|48\\n13|91\\n13|31\\n13|54\\n13|78\\n13|57\\n13|29\\n13|64\\n13|84\\n13|74\\n13|68\\n13|39\\n13|45\\n13|97\\n13|36\\n13|75\\n13|65\\n57|29\\n57|14\\n57|54\\n57|25\\n57|76\\n57|45\\n57|59\\n57|69\\n57|91\\n57|75\\n57|87\\n57|27\\n57|16\\n57|11\\n57|22\\n57|84\\n57|55\\n57|73\\n57|38\\n57|36\\n57|48\\n57|62\\n57|52\\n57|23\\n89|29\\n89|18\\n89|66\\n89|37\\n89|33\\n89|68\\n89|39\\n89|85\\n89|13\\n89|44\\n89|97\\n89|27\\n89|91\\n89|32\\n89|93\\n89|31\\n89|64\\n89|36\\n89|74\\n89|57\\n89|17\\n89|65\\n89|26\\n89|78\\n78|75\\n78|23\\n78|45\\n78|48\\n78|69\\n78|25\\n78|17\\n78|84\\n78|73\\n78|29\\n78|36\\n78|14\\n78|91\\n78|57\\n78|76\\n78|87\\n78|62\\n78|27\\n78|38\\n78|16\\n78|11\\n78|54\\n78|59\\n78|52\\n64|33\\n64|27\\n64|44\\n64|57\\n64|78\\n64|11\\n64|65\\n64|48\\n64|31\\n64|93\\n64|39\\n64|45\\n64|17\\n64|84\\n64|91\\n64|74\\n64|29\\n64|75\\n64|68\\n64|97\\n64|32\\n64|36\\n64|54\\n64|66\\n54|34\\n54|16\\n54|79\\n54|85\\n54|23\\n54|87\\n54|69\\n54|73\\n54|52\\n54|21\\n54|14\\n54|75\\n54|22\\n54|11\\n54|48\\n54|59\\n54|25\\n54|38\\n54|45\\n54|55\\n54|89\\n54|76\\n54|62\\n54|42\\n37|91\\n37|65\\n37|44\\n37|13\\n37|31\\n37|64\\n37|17\\n37|66\\n37|33\\n37|36\\n37|78\\n37|93\\n37|68\\n37|74\\n37|32\\n37|29\\n37|26\\n37|48\\n37|39\\n37|54\\n37|97\\n37|84\\n37|57\\n37|27\\n44|54\\n44|75\\n44|68\\n44|69\\n44|14\\n44|45\\n44|97\\n44|17\\n44|84\\n44|29\\n44|74\\n44|78\\n44|27\\n44|66\\n44|31\\n44|39\\n44|32\\n44|91\\n44|57\\n44|76\\n44|11\\n44|48\\n44|73\\n44|36\\n45|76\\n45|34\\n45|73\\n45|21\\n45|85\\n45|38\\n45|59\\n45|25\\n45|79\\n45|87\\n45|11\\n45|62\\n45|52\\n45|75\\n45|16\\n45|37\\n45|18\\n45|23\\n45|22\\n45|89\\n45|69\\n45|55\\n45|42\\n45|14\\n39|29\\n39|73\\n39|48\\n39|59\\n39|38\\n39|36\\n39|87\\n39|14\\n39|54\\n39|91\\n39|17\\n39|74\\n39|76\\n39|11\\n39|62\\n39|78\\n39|16\\n39|45\\n39|69\\n39|27\\n39|75\\n39|97\\n39|84\\n31|57\\n31|48\\n31|39\\n31|11\\n31|27\\n31|74\\n31|54\\n31|66\\n31|36\\n31|91\\n31|16\\n31|78\\n31|87\\n31|45\\n31|17\\n31|76\\n31|84\\n31|69\\n31|14\\n31|29\\n31|62\\n31|73\\n29|11\\n29|87\\n29|79\\n29|25\\n29|16\\n29|36\\n29|22\\n29|48\\n29|21\\n29|62\\n29|14\\n29|69\\n29|75\\n29|55\\n29|59\\n29|76\\n29|23\\n29|52\\n29|38\\n29|27\\n29|54\\n66|14\\n66|59\\n66|69\\n66|27\\n66|75\\n66|62\\n66|84\\n66|45\\n66|17\\n66|78\\n66|76\\n66|97\\n66|87\\n66|11\\n66|16\\n66|36\\n66|73\\n66|29\\n66|48\\n66|74\\n97|27\\n97|91\\n97|29\\n97|57\\n97|78\\n97|45\\n97|54\\n97|14\\n97|48\\n97|23\\n97|69\\n97|17\\n97|36\\n97|73\\n97|74\\n97|76\\n97|84\\n97|87\\n97|75\\n87|44\\n87|85\\n87|79\\n87|55\\n87|21\\n87|23\\n87|22\\n87|65\\n87|64\\n87|42\\n87|26\\n87|68\\n87|32\\n87|52\\n87|34\\n87|89\\n87|25\\n87|37\\n25|34\\n25|21\\n25|65\\n25|42\\n25|26\\n25|13\\n25|44\\n25|79\\n25|18\\n25|68\\n25|97\\n25|89\\n25|32\\n25|37\\n25|39\\n25|74\\n25|66\\n68|32\\n68|62\\n68|45\\n68|91\\n68|29\\n68|74\\n68|54\\n68|14\\n68|69\\n68|75\\n68|84\\n68|76\\n68|17\\n68|48\\n68|97\\n68|31\\n32|69\\n32|31\\n32|11\\n32|27\\n32|66\\n32|36\\n32|97\\n32|75\\n32|76\\n32|84\\n32|91\\n32|16\\n32|57\\n32|78\\n32|62\\n17|57\\n17|23\\n17|36\\n17|69\\n17|29\\n17|73\\n17|75\\n17|62\\n17|59\\n17|48\\n17|87\\n17|84\\n17|54\\n17|52\\n34|31\\n34|57\\n34|32\\n34|85\\n34|39\\n34|37\\n34|78\\n34|17\\n34|97\\n34|44\\n34|18\\n34|89\\n34|33\\n48|52\\n48|75\\n48|21\\n48|59\\n48|18\\n48|69\\n48|73\\n48|16\\n48|62\\n48|11\\n48|45\\n48|25\\n73|52\\n73|33\\n73|16\\n73|85\\n73|89\\n73|23\\n73|87\\n73|22\\n73|38\\n73|69\\n73|37\\n52|64\\n52|31\\n52|44\\n52|33\\n52|25\\n52|97\\n52|65\\n52|89\\n52|79\\n52|37\\n74|36\\n74|76\\n74|17\\n74|11\\n74|78\\n74|14\\n74|52\\n74|45\\n74|59\\n38|26\\n38|65\\n38|31\\n38|68\\n38|93\\n38|44\\n38|25\\n38|18\\n69|13\\n69|26\\n69|25\\n69|52\\n69|42\\n69|59\\n69|64\\n11|16\\n11|73\\n11|34\\n11|55\\n11|14\\n11|79\\n33|74\\n33|14\\n33|48\\n33|76\\n33|57\\n91|14\\n91|38\\n91|73\\n91|84\\n75|55\\n75|87\\n75|16\\n59|34\\n59|64\\n26|54\\n\\n78,45,48,38,52,62,29\\n87,59,38,52,25,55,79,42,34,85,37,26,13,64,65,33,68\\n57,29,84,48,45,75,11,14,76,73,69,16,38,23,22\\n74,57,91,36,27,84,54,45,75,11,14,76,73,69,87,59,38\\n69,62,16,87,59,38,23,52,25,22,55,79,21,42,34,89,85,18,37,26,13,64,33\\n33,44,68,32,31,66,39,97,74,78,17,57,91,29,36,27,54,48,75,11,14\\n32,66,39,97,74,78,17,57,91,29,36,27,84,54,48,45,11,14,73,69,62\\n74,66,65,34,93,32,21,26,89,31,78,44,18,13,37,85,33,68,79,64,55\\n38,52,25,55,21,34,85,18,26,13,64,33,93,44,68,32,31\\n68,36,64,33,48,32,93,31,13,26,74\\n48,45,75,11,76,73,69,62,87,59,38,23,22,55,79,21,42,34,85\\n33,16,44,34,85,79,65,22,42,25,64,87,18,55,52,89,13\\n73,69,62,16,87,59,38,23,52,25,22,55,79,21,42,89,85,18,37,26,13,64,65\\n14,78,45,23,16,36,57,74,76,87,75,59,62,73,54,27,17,91,48,29,84,69,38\\n33,93,44,32,31,66,97,74,78,17,57,91,29,36,84,54,48,45,75,11,14\\n38,23,79,42,34,37,33,32,31\\n65,93,44,68,32,31,66,39,97,74,78,17,57,91,36,27,84,54,48,75,11\\n11,84,59,45,54,38,36,14,29,52,16,27,62,76,87,78,75\\n54,48,45,75,11,14,76,73,69,62,16,87,59,38,23,52,25,22,55,79,21,34,89\\n34,18,26,74,29,31,85,17,64\\n16,87,38,52,21,34,18,37,13,64,33\\n91,31,78,66,27,84,74,36,32,39,68,73,44\\n69,62,36,74,45,66,54,91,14,11,27,32,75,39,84,48,73,76,31,29,17,78,97\\n44,68,32,31,66,74,78,57,36,27,84,54,14,76,73\\n59,73,22,21,76,62,14,23,16,79,27,36,55,75,38,54,48,11,52,45,25,84,69\\n29,36,27,54,45,75,11,14,73,69,62,16,87,59,38,23,52,25,22,55,79\\n64,68,39,44,93,13,31,26,74,33,22,66,79,42,55,34,18,65,89,85,37\\n79,18,37,13,32,66,17\\n87,38,78,57,36,62,45,17,91,59,23,84,76,75,54,14,29,27,48,16,11\\n87,59,23,55,79,42,85,18,37,64,65,33,93,44,68\\n68,17,57,31,11,48,54,73,14,76,91,75,69,74,78,32,84,45,97,66,29,36,39\\n38,55,65,52,13,87,18,44,22,16,64,26,23,34,37,42,59,85,21\\n89,85,26,13,64,65,33,68,31,66,74,17,57,91,36\\n75,11,14,76,73,62,16,87,59,38,23,52,25,22,55,79,21,42,34,89,85,18,37\\n59,93,33,79,62,16,55\\n66,39,17,36,84,54,48,75,11\\n89,21,37,79,93,25,22,52,34,42,64,55,23,68,44,65,32,66,31,26,85,18,13\\n13,64,32,31,17,84,54\\n16,65,25,33,55,79,21,34,87,18,64,93,52,38,37,23,59,42,62\\n91,29,36,84,54,45,75,11,73,69,62,16,87,59,38,23,52,22,55\\n31,66,39,17,57,27,11,62,16\\n26,33,32,66,29,36,48\\n18,37,26,65,33,44,32,66,39,97,57,29,36,27,84\\n93,44,68,31,39,97,74,78,17,57,91,29,36,27,54,48,45,75,11,14,76\\n32,31,66,39,97,78,17,57,91,29,36,27,54,48,45,75,14,76,73,69,62\\n26,13,65,31,66,39,74,57,91,36,84,54,48\\n68,13,32,93,85,18,25,97,39,42,34\\n27,84,11,14,76,69,16,38,25\\n93,66,57,27,54,75,76\\n16,37,89,73,87,13,14,52,23\\n85,37,26,13,65,33,93,44,32,66,39,97,17,91,29,36,27\\n66,78,57,75,11,76,69\\n75,11,76,73,69,62,16,87,59,38,23,52,25,22,55,79,21,42,34,89,85,18,37\\n78,27,73,14,38,45,84,69,23,48,11,87,54,16,62,57,29,74,36,17,59,91,75\\n33,68,17,21,39\\n26,13,65,33,44,68,32,39,97,74,78,17,91,36,84,54,48\\n93,13,68,34,32,37,55\\n11,76,73,69,62,16,87,59,38,23,52,22,55,79,21,42,34,89,85,37,26\\n14,38,23,25,79,42,89\\n57,38,84,75,14,59,23\\n25,34,89,18,26,13,64,65,33,93,44,31,66,39,97\\n48,91,65,33,97,68,31,57,39,44,27,29,78,64,17,75,93,36,74,66,54,45,32\\n87,79,13,65,33\\n55,79,33,44,68,74,78\\n25,52,26,65,18,13,23,22,37,59,32,42,33,85,44\\n57,29,75,59,73,17,36\\n16,13,89,33,21,42,65,38,55,37,59,34,44,25,85,23,22,64,87\\n32,97,42,39,78,21,33,26,13,85,55\\n31,84,74,91,32,78,76,36,62\\n69,16,52,22,55,37,33\\n13,65,33,68,32,66,39,97,74,78,17,36,27,84,54,48,45\\n85,23,13,55,42,89,22,68,93,21,26,79,52,59,65,18,87,25,37,34,38\\n34,75,84,23,62,54,48\\n76,55,59,62,29,36,38,73,84,16,75,48,87,22,14,79,11\\n93,26,21,89,64,31,78,79,17,66,13,65,33,32,44,37,68,74,34\\n11,14,76,73,69,62,16,59,38,23,25,22,55,79,21,42,89,37,26\\n34,85,93,32,39\\n44,68,66,39,78,57,54,14,73\\n42,37,21,44,85,16,64\\n64,44,32,31,39,97,74,91,36,84,54,45,75\\n31,66,39,74,78,17,57,91,36,27,45,75,11,14,76,73,69\\n93,97,57,11,14\\n65,31,57,13,78,64,45,66,17,48,68,93,54,27,29,36,32,97,44,84,39\\n73,45,55,11,23,59,76,75,25,87,34,52,22\\n21,34,89,85,18,37,26,13,64,65,33,93,44,68,32,31,66,39,97,74,78,17,57\\n42,34,89,85,18,37,13,64,65,33,93,44,68,32,66,39,97,74,78,17,57\\n18,37,79,26,11\\n16,59,48,11,14,55,36,87,73,21,76,23,69,27,52,75,54,45,62,84,22\\n66,78,17,57,91,36,27,84,54\\n31,44,65,37,78,33,68,36,32,66,17,18,91,93,64,74,26,89,85\\n89,65,79,85,22,18,64,42,55,31,34,33,97,26,13,25,68\\n55,21,89,18,26,13,64,93,68,32,31,39,78\\n22,18,26,44,32,31,66,39,97\\n38,79,21,42,18,37,64,65,31\\n34,89,85,18,26,13,64,33,93,68,66,74,78,17,57,91,29\\n17,39,16,59,54,36,78,69,57,48,76,27,84,97,91,75,45,73,62,11,14\\n65,33,93,44,68,32,31,74,78,17,57,91,29,36,27,84,54,48,45,75,11\\n84,48,75,73,16,59,23,52,55,79,21\\n93,21,32,66,55,89,42,74,85,68,22,44,13,64,26\\n14,76,73,69,62,16,87,59,38,23,52,25,22,55,21,42,34,89,85,18,37,26,13\\n32,74,78,27,84,45,11\\n65,26,44,74,36,78,89,31,66,32,29,13,57\\n89,85,26,93,68,32,31,17,57,91,29\\n59,38,23,52,25,22,55,79,21,42,34,89,85,18,26,13,64,65,33,93,44,68,32\\n31,66,39,74,17,91,29,36,27,84,54,48,45,75,11,76,73,62,16\\n59,91,75,11,84\\n91,29,36,11,69,62,16,87,25,22,55\\n91,97,39,29,57,32,73,78,48,11,84,75,45,76,27,36,69,31,68,66,74,14,17\\n33,93,44,85,22,26,64,31,32,65,52,66,34,55,68,39,37,42,18\\n23,37,26,42,34,65,18,21,68,79,33,31,66,89,52,22,25,93,32\\n55,79,89,13,32,31,78\\n84,48,45,14,69,87,38\\n91,29,36,27,84,54,45,75,76,73,62,87,59,38,23,52,25,22,55\\n37,33,18,66,34,64,32,89,26,79,85,25,68,39,52,44,21\\n76,73,87,22,79,21,26,13,64\\n75,11,14,76,73,62,16,87,22,21,42,34,89,85,37\\n52,25,22,55,79,21,42,34,85,18,37,26,13,65,33,93,44,68,31,66,39\\n65,22,33,79,13,68,32,42,37,44,26,25,64,85,18,93,66,89,39\\n73,23,34,85,37,26,65\\n45,75,11,14,76,73,69,62,16,87,59,38,23,52,25,22,55,79,21,42,34,89,85\\n14,59,69,87,26,13,34\\n42,34,89,26,64,65,44,31,66,39,78,17,91\\n18,37,26,13,93,32,31,66,97,78,57,29,36\\n42,34,23,11,79,45,75,52,55,73,38,54,22,25,87\\n85,34,68,65,33,21,37,26,93,89,22,79,38,52,55,44,87,42,23,13,18\\n75,48,22,73,27,45,57\\n14,76,73,69,16,59,38,52,22,55,79,21,34,89,18,37,13\\n26,32,48,36,91,33,65,93,66\\n36,39,84,13,17,57,26,32,65,54,93,37,97,78,31\\n42,87,34,73,13,14,85\\n66,13,37,17,91,31,57,65,27,78,84,97,68,54,39\\n42,39,97,68,25,26,79,18,21,85,44,34,65,89,93,37,55,31,22\\n18,34,55,37,64,44,21\\n23,52,84,87,57,38,76,27,69,22,48,62,16\\n26,93,29,44,54,33,31,13,66,65,84,78,64,27,74,39,37\\n37,18,57,13,17,29,31,32,36,93,26\\n27,87,76,29,78,48,17\\n32,31,66,39,78,57,91,29,48,75,76,73,62\\n59,38,55,79,21,89,85,65,33,44,32\\n27,54,17,64,45,39,97,84,36,65,44,32,74\\n87,38,23,52,22,21,42,34,89,37,13,65,33,93,68\\n66,31,22,32,55,13,42,37,18,68,21,79,89,23,85,44,33,34,25\\n93,74,39,78,17,18,64,57,13,31,33,29,36,37,84,26,32,65,27,66,97,91,44\\n97,18,33,31,13,93,84,44,26\\n62,73,48,27,45,54,36,97,16,84,57,76,11,69,78,91,87,59,39,29,17,74,14\\n29,31,14,39,45,11,84,16,57,27,73\\n66,39,29,69,87\\n69,74,59,84,48,73,16,87,62,97,75,76,54,38,45,29,17,36,14,91,27\\n18,64,65,33,93,44,68,32,31,66,39,97,74,78,17,57,91,29,36,27,84\\n48,45,73,79,42,34,85\\n75,11,76,69,62,16,87,59,23,22,55,79,21,34,85\\n93,22,26,64,33,23,52,65,87,18,25,44,55,38,37,21,42,68,85,13,79,89,59\\n76,69,87,59,23,52,25,79,42,34,37,13,64\\n22,37,13,38,69,18,55,21,52,14,62,34,25,23,16,73,59,85,89\\n79,55,62,73,85,87,26,13,69,42,76,37,64,38,16,21,23,52,25,18,59,34,22\\n22,21,85,18,26,93,32,66,39,97,74\\n14,57,11,17,74,29,87\\n64,65,33,31,74,78,27,84,54,48,75\\n85,66,68,23,21,32,93\\n85,89,93,74,65,26,64,78,79,33,66,39,55\\n57,29,27,54,45,11,76,16,87,59,52,25,22\\n32,31,97,17,57,29,36,27,84,48,45,75,62\\n69,91,76,75,14,36,97,54,11,74,62,17,29,45,27\\n48,45,73,62,16,59,38,23,55,89,85\\n37,26,13,65,33,93,44,68,32,31,74,78,17,91,29,27,84\\n33,65,89,37,69,38,18,79,87,52,16,23,34,59,21,62,26,42,55\\n74,17,91,27,84,54,48,45,75,11,14,76,73,69,62,16,87\\n66,39,74,78,91,36,27,84,54,48,45,75,11,14,69,16,87\\n85,25,13,55,21,64,93,38,62,79,65,23,37\\n44,36,33,68,29,32,13,65,97,39,27\\n16,22,38,14,62,11,52\\n45,36,93,68,14,33,44,32,48\\n93,57,45,97,75,78,27,76,14\\n62,23,65,33,22,34,13,21,69,79,87\\n22,69,14,16,52,79,73,11,37\\n66,68,26,13,39,34,52,85,32,64,33\\n64,33,44,68,39,74,78,17,57\\n37,21,73,25,38,55,62,59,34,87,79,89,64\\n84,59,73,74,75,17,91,78,23\\n78,45,74,17,84,27,91,29,14\\n54,45,44,27,17,39,75,31,57,64,48\\n25,84,23,45,57,69,91,76,87,17,27,73,62,29,54,52,11\\n97,91,29,84,45,75,11,14,76,59,38\\n17,57,91,36,27,84,48,45,11,76,73,69,62,16,59,38,23,52,25\\n21,42,89,85,18,37,26,13,64,65,33,44,68,32,66,39,97,74,78,17,57\\n34,21,93,23,65,52,37,32,26,25,22\\n21,89,87,59,16,62,26,76,55,23,11,14,25,69,42,85,79,34,38,22,37\\n27,54,11,14,62,87,59,38,52,25,22,55,79\\n42,34,89,85,18,37,26,13,64,65,33,93,44,68,32,31,66,39,97,74,78,17,91\\n23,25,22,55,34,89,65,93,32\\n68,13,38,32,18,26,93,89,52,85,22,42,44,65,25,34,21,59,33\\n57,91,29,36,27,84,54,48,45,75,14,76,73,69,62,16,87,59,38,23,52,25,22\\n91,29,27,14,16,52,25,22,55\\n97,26,13,79,66,37,64,42,31,55,65,85,39,44,22,18,68,34,93,33,32\\n87,11,17,27,36,14,29,76,75,69,78,74,59,91,38,48,62,73,16,57,23\\n42,89,85,18,64,65,33,93,66,97,74,78,91\\n75,11,14,76,73,69,62,16,87,59,38,23,52,25,22,55,79,21,42,34,89,18,37\\n26,64,65,33,93,44,68,32,31,66,39,78,17,57,91,29,36,27,84,54,48\\n38,23,22,55,42,34,89,37,26,33,93\\n29,18,34,13,89,17,39,37,26\\n76,73,69,62,16,87,59,38,23,52,25,22,55,79,42,34,89,85,18,37,26,13,64\\n68,89,32,17,85,42,74,33,65,18,34,37,31,79,44\\n23,21,73,18,42,22,34,14,79,59,69,45,25,52,87,55,75\\n75,11,14,73,69,62,16,87,59,38,23,52,25,22,55,21,42,34,85,18,37\\n31,26,17,39,97,36,13,65,89,29,64\\n39,97,74,17,91,29,36,27,84,54,45,11,14,76,73,69,62,87,59\\n65,44,32,66,97,78,57,91,36,27,54,48,45,75,11\\n31,74,78,57,29,84,45,75,62\\n52,25,22,55,79,21,42,34,89,85,18,37,13,65,33,44,68,32,31,66,39\\n21,62,18,25,69,55,26,65,85,79,33,34,89,42,13,59,22,87,38\\n91,29,27,69,38,25,55\\n27,84,48,75,11,76,73,69,62,16,87,59,38,23,52,25,55,21,42\\n34,32,37,55,44,52,22,42,23,26,66,85,25\\n65,33,93,44,68,32,66,39,97,74,78,17,57,29,36,84,54,48,45,75,11\"","export default \"....#.....\\n.........#\\n..........\\n..#.......\\n.......#..\\n..........\\n.#..^.....\\n........#.\\n#.........\\n......#...\"","export default \"..........##.....................................#............#........................#.....#........#...........#...............\\n...........#.............#.....#....................#...........#.#..............#.#......................................#.......\\n.#..............#...............................#.......#.#...................#...............#...............#..#...........#....\\n.#............................#.............................................................................#.#...................\\n...............#..........#............#...........................................#....#...#..........................#..........\\n..##.#..#......#.....................#..#......#................#..........................................#................#.....\\n.......#.....#...........................................#........#...............................#.#.............................\\n.........#...............#......#............#...................#...........#.........#..#...#...................................\\n#.....#.#....................................#.......................................................##..#...##..#..#.............\\n.............................#...#.......#...............................#.#...............#......................................\\n.....#................................#..........................#....................#...........................................\\n.......#............#..#................................................................................#..........#...#..........\\n...........#.............................................................#...............#................................#.....#.\\n.....................................................#.........#.....#..#.....#..................#.......#.....#...........#......\\n.#..........#................#..................#........#..............................................#....#..................#.\\n.....................#......#..........#...........#................#..#..#............................#...##.........#...........\\n.................#.....................................................................................#..........................\\n..........................#.....................................#.#..................................................#.#..........\\n............#....#........#...................................#...................................................#...............\\n............#........................#........##..............#....#.............#............#......#........#...................\\n....................#.#........#..........................#...........#.............#...............#.............##.......#......\\n...............................................#..................................#...................................#....##.....\\n...#.....#.......................................#..........#......................#.............#.............#.##.......#.......\\n........#......##...................................................................................#.............................\\n...#.................................#.....................................#......................................#.........#.....\\n....#.................#......#.........#.........................................................................#........#....#..\\n..........................#..#.......#............................##.............................................#.........##..#..\\n......................#......................................#......................#................#.........#..#...............\\n....#.....................................#...................#..............#..........................#...........#...#.........\\n...............#........#...............#..........#.....#..............................#....................................#.#..\\n......#......................#.......#.#...................#.............#...#.........#.....#....................................\\n.....#..#...............##....................................................#..#...#........................#..................#\\n......#.#..........#...#.................#...............#..........................................#...#.#.......................\\n..........#.......................................................................................................##..............\\n......................#..#...#......#.....................................................#.........#.........#...................\\n...................................................#...#.........#.....#......................#...............................#...\\n........................#...................................^..............................#.............#..........#...#.........\\n........#............................#.....................#......#...........##...........#......................................\\n..........#..................#........#...........................................................................................\\n.....#......................#.....#.............#....................#...............#...........##.......#..................##...\\n........#......................................#................................................#.....................#...........\\n......#.........#..............#.................................................................#.......##..#.#..................\\n........#......................................#...................#......................#.......................................\\n..#...............#....##.....#........................#.#.........#........#....#...................#.............#...#.........#\\n.............#..............#....#....#................#.....................................#...............#..................#.\\n..............#...........................................................................#..##..#...#.......#..........#.........\\n#...........#........................#..#......#..#.........#........#...#..............#............#.....#.................#...#\\n.....................#........................................#.................#.#..................#.............#.........#....\\n.............#.....................................................#.#....................................#.......................\\n.............#....#.............#.........................................................................#...........#...........\\n#.................#...#...#...............#..........#.........................##......#.....#..#.............................#...\\n#................#........#.......#.....#...............#..................................#.#.............................#......\\n.........#.......#.............#...................................................................................#..........#...\\n......#..............................................................................##............................#..........#...\\n..............#..................................................#...................................#..........................#.\\n.................................................................#.#...........#................#..........#..........#.......#.#.\\n...................................#.....................#..#...........................................................#.........\\n......................................................................................#.............#.............................\\n.....#......................................................................#......#....#.........#....#..#.......................\\n..................#.............................................................#.........................#.......................\\n......................#......#..........#..#............................#....#.........#.........#................................\\n..#...........#.......................#....#....................................#.......#.................................#.......\\n...................#.......................................................................................#..............#.......\\n.....#....................................#......#............#...##........#...............#......................#...........#..\\n......................................#.......................#.........#.#.........................................#.............\\n...#..............................................#................................................##...........................#.\\n.......................#.................................................................#.......................................#\\n.#...........#..#...................#.#......#................#......................................................#............\\n.......................................................................##..........#......#................#.......#.......#......\\n#..#...#...........................................#......#...............#.......................................................\\n....#.....#...........................#...........#...............##..............................................................\\n...#.......#.......................................................................................#............#.................\\n.............................................................................#...#.....................#...#......................\\n...................#.................................#.......#...........................#.....#.................................#\\n.........................................#........#....#.............#.............#...........................#..................\\n....#.....................................................................................#.#.#.......................#.#.........\\n..............................................................#..........#............................................#...........\\n.........#.#.............................#...#..........................#....................#....................................\\n......................................#.#......#..................................................................................\\n.................................................................................................................#................\\n..............#...................................................................................................................\\n...................................................#....................................................................##........\\n................#........................................#..............................................#...............#.........\\n.........#....#...#......#....................#.#.......................................#.............#.....#..............#....#.\\n.............................................................................................................##.....#..#..........\\n....#.............................#......#.....................................................#......................#.......#...\\n..#.................#........................#....#...##...................................#...............#......................\\n.........#..................................#.................#...#..#..........##................................................\\n......##.......................................................#...........#......................................................\\n......#..............................#...................##....#..................................................................\\n..................#.........#.................................................#.......#..................#........................\\n.........................#...........................................#.......#...........................................#........\\n............#.#...................#.#....#.................................#......##...........................................#..\\n..#....................#.....................#.........................#..............#.....#.........#...........................\\n..#............................................#.........................#....................#..................................#\\n...........................#......#...............................................................#......#..........#..........#..\\n.......................#.....#..................#...................................#.............#....#.....................#....\\n....................................................................#.....#....#..................................................\\n..#................#...#..........................................................................................................\\n.........................##.....#.................#.............#....................#...............#..............#......#.#....\\n.......................#...................##......................................#....#...............#........#.........#......\\n......#..#.........#............................................................#................................#......#.........\\n#........................#..................#...............................................#.#........#..........................\\n..........#................#...#.....................................................#............#...............................\\n............#................................................#.#...............#............#................................#....\\n..#............................................#....#....#.#.#................................#....................#..............\\n.........#...........................##.............#..#.................#........................#............................#..\\n..........................##......................#..............................#..................#.............................\\n.........#........#.......#..........#...........#.............................#...........................#.......#..............\\n..........................#................#......................................................................................\\n..........................#...............#..................#....................................#.........#....#..........#.....\\n..................#..#..................................................................#........#................................\\n##..#.......#..............#..#..............##.............#...#..#.........##.......................................#......#....\\n.............#.........#........#....................................................#................#.....#.....................\\n......#...................................#.....#................#..........................#.....................................\\n..#.......................#...#.#...#...........#..........#...................................#.............#.....#..............\\n..........#...#......................##...........................................................................................\\n....#............................#.#...................#....................#................#...........#..................#.....\\n.......#......#................#......................#......#........##..#....................#..................................\\n.......#..................#....#.....................................................................................#............\\n..................#......#................................#.........................#....#.............................#...#......\\n.................#.............#..........#....#.........................#..................................#.....##...........##.\\n............#..#............................................................................##...#.#....#....#.......##.#.......#.\\n......................#............................#.........#.....#.#.......##........................#..........................\\n...........#........................#..##........#....#.......#....#.#.....##.....................#.......#......#...............#\\n.................#...........#.......#..........#................................................#......................#.........\\n................#.......#.#.....................................................................................#.................\\n........................................#...#......#.......................................#...........#..........................\\n....#........##...............#...........#..................................................................#....................\\n#....................#...................#.........#....................................................................#.........\"","export default \"190: 10 19\\n3267: 81 40 27\\n83: 17 5\\n156: 15 6\\n7290: 6 8 6 15\\n161011: 16 10 13\\n192: 17 8 14\\n21037: 9 7 18 13\\n292: 11 6 16 20\"","export default \"29833: 1 50 15 39\\n458991049840: 17 598 378 2 69 40\\n224381: 120 66 66 890 5 96\\n5003: 852 662 973 8 3 3 2 1 1\\n441496: 6 60 835 62 9 2 4 8 40\\n93163572: 38 40 6 375 896 61 40\\n567402848327: 28 4 23 886 813 3 77 6\\n109878300: 9 306 2 66 2 5 67 5 525\\n169262: 77 3 1 7 2 2 9 6 764 1 5 4\\n515489: 281 771 7 7 9\\n100112: 927 74 15\\n150540585: 86 10 175 40 588\\n56371421566: 6 565 9 503 77 8 2 8\\n20411640: 506 42 10 16 2 60\\n1571: 29 88 9 509 9\\n337815942: 2 143 7 5 7 3 3 75 1 9 4 4\\n6714: 5 8 74 4 9 8 1 1 319 6\\n1114: 8 8 3 11 585\\n2556260: 71 1 62 31 620\\n9081072: 308 52 1 63 1 9\\n11006423: 60 438 48 23 5 92 2 1\\n213414366: 3 7 3 414 369\\n53385783: 852 9 1 53 2 71 851 33\\n119464247: 698 8 9 1 2 377 212 2 4\\n735632: 13 943 725 318 92 4\\n1059561: 4 9 4 6 86 9 8 3 375\\n22598196635: 5 644 5 5 4 9 4 62 3 9 1\\n448714: 4 48 71 4\\n12876000: 58 37 80 25 3\\n41576858681: 131 978 4 122 8 665\\n500750682: 500 74 99 95 67 618\\n418780: 504 82 548 1 1 1\\n79194751192: 395 2 7 73 5 2 5 1 18 8 5\\n2404852348: 1 8 79 516 9 8 515 8 50\\n17581536: 2 4 67 8 3 2 866 9 9 38 6\\n17966299992: 6 174 9 6 2 956 6 2 70 9\\n653: 3 5 4 4 94 3\\n60598364: 312 8 1 5 9 7 8 7 3 4 6 1\\n120116073: 816 4 4 92 8 76\\n202633925: 39 1 5 232 998 470 5\\n203156491: 3 4 350 25 292 723 23\\n97549292: 79 50 686 4 4 9 3 6 47\\n6363055357: 5 1 50 630 55 353 2\\n122461385: 7 65 9 342 92 1 4 3 3 7 1\\n2550188: 3 249 2 3 32 686 6\\n4577175: 255 4 6 433 3 53 43\\n33759306506: 8 975 2 34 6 8 253 6 28\\n1561680: 6 636 522 90 4\\n30522: 16 286 85 3 227 7\\n526616: 4 76 7 6 2 9 6 9 3 147 6 3\\n65889600992: 40 65 37 32 530 989\\n1534478: 55 7 9 9 3 3 53 6 77\\n15191672: 53 450 7 2 77 7 62 8\\n1210940886: 954 55 3 3 52 21 4\\n13860: 6 4 4 495\\n64545283: 4 9 993 5 280\\n1987: 8 862 5 948 4 160\\n1120117: 373 3 96 5 149\\n71097: 6 5 842 7 6\\n52576450: 15 35 40 29 7 447\\n46339200: 4 1 7 11 45 991 18 80 5\\n5238824: 3 5 10 8 1 5 2 2 5 2 810 5\\n317724633833: 5 6 94 64 6 3 85 788 3 3\\n31608179: 31 608 17 2 8\\n20232744: 981 54 6 543 5 6 534\\n220815607: 3 450 20 6 8 1 302 8 4\\n11546010: 2 9 8 89 3 67 2 925 3 2 5\\n3636108701235: 25 424 9 98 35 1 232\\n315302: 8 285 38 8 464\\n5924: 94 53 2 7 933\\n849765642: 242 2 8 51 5 7 644\\n826611952: 7 6 30 5 631 2 239 50\\n108360853247: 393 2 6 8 892 9 19 1 45\\n14207: 7 4 4 5 7\\n171388095: 515 47 139 9 704\\n40312641: 34 2 71 349 831\\n4514720105307: 12 94 680 4 105 305\\n2141175: 17 594 8 5 6 2 690 97 8\\n39677923295: 2 85 805 57 2 694 2 95\\n773731310: 152 509 5 46 25 2 56\\n107992570: 6 32 78 928 97 60 3 70\\n274256274439: 4 5 7 6 562 740 4 32 8 1\\n715414749: 91 64 7 984 78\\n1197417200: 532 1 5 829 97 1 9 8 2 5\\n2161553468: 2 5 7 198 7 2 2 68 7 2 92\\n49243431: 879 2 599 95 28\\n918935325: 72 703 1 7 531 319\\n33335385362: 8 81 23 8 9 1 527 69\\n684178: 2 1 342 148 28\\n8469183: 2 539 491 2 8 53 6 356\\n122: 9 32 72 9 1\\n26266280341: 18 380 6 8 1 7 78 8 343\\n5970: 5 967 2 306 827\\n3403360: 33 20 7 3 6 5 6 617 59\\n27381127: 655 3 9 3 4 9 43 8 95\\n52476534: 31 6 997 22 623 282\\n4696755: 463 6 67 50 7\\n62787547: 3 71 5 4 7 2 7 70 8 283 6\\n5291265684: 550 13 3 5 9 74 6 3 14 4\\n2121: 595 3 187 85 67\\n138880: 9 459 50 4 7 711 2 56\\n54817849: 394 239 866 49 2\\n1563601289: 781 2 6 72 929 190 99\\n140227804: 933 5 9 208 48 3 8 3 7 6\\n637023080: 6 6 4 2 9 854 6 2 6 7 74 4\\n12140494: 8 92 8 7 3 90 4 96\\n995580: 6 30 612 460 9\\n11403: 6 131 7 62 43 712 19 7\\n330447882: 811 9 16 4 5 93 9 3 94\\n2343762: 9 81 64 5 6 1 938 8 1 5\\n391889880: 820 9 9 2 59 79\\n186310: 9 72 2 8 8 131 5 9 3 8 6 7\\n4933119: 65 6 376 1 2\\n15179: 7 8 976 539 1\\n312257399: 9 9 70 588 65\\n1320813: 213 7 9 81 6 9 71\\n273549927: 3 733 93 39 6 5 7 9 68 3\\n12291702279714: 82 59 4 88 1 9 477 78\\n2436240674: 8 2 87 7 60 4 6 76\\n10785445: 9 9 3 3 7 4 99 4 6 7 9 2\\n12335116: 1 30 11 5 793\\n18950033: 23 6 87 54 8\\n7549236817: 233 324 368 1 9\\n15898468: 183 2 4 9 506 71 578 2\\n60233561: 9 9 17 5 663 8\\n17320: 92 184 20 367 5\\n6039115: 44 6 46 7 246 2 3 6 7 4 5\\n6633798094: 22 8 619 92 907 94\\n107587: 95 24 9 4 87\\n1797: 17 79 424 1 30\\n15547949: 36 501 862 26 891\\n1879637864: 84 4 715 978 13 2 4\\n8274: 80 5 6 8 6 7 2 5 5 6 66 6\\n3486989908: 9 2 4 795 41 731 5 4 7\\n41375463: 2 575 60 6 5 922 5 46 3\\n2631690387: 44 20 514 8 5 5 380 1 4\\n2400: 16 14 2 25 3\\n5168317: 608 4 5 425 308 9\\n305764573: 804 6 27 7 9 5 146 573\\n21250160: 1 5 2 3 1 6 1 6 5 576 4 92\\n39682564: 4 4 7 43 11 9 1 5 6 8 4 1\\n276353: 996 1 134 13 946 25\\n4537378161: 5 53 3 388 820\\n9954471: 99 27 7 6 167 600\\n273138: 9 74 20 4 6 8 641 23 49\\n94662: 834 832 87 6 9\\n93397851736: 81 923 4 93 1 19 22 1 6\\n9198920550: 6 5 393 7 55 7 2 5 4 3 9 5\\n321566102: 2 5 5 2 6 1 974 710 5 3 2\\n13685: 263 4 124 7 5\\n790133: 1 8 2 14 4 29 5 3 9 5 729\\n7252134456: 4 22 71 9 658 5 25 7 7 4\\n8154320: 8 7 43 4 9 1 910 9 1 20 4\\n18338919: 5 735 347 72 745 4\\n17820: 74 4 75 8 8 21 6 134 9 6\\n69483: 6 8 1 91 90\\n931: 1 2 213 4 74\\n1366330766: 30 809 3 13 970 7 58\\n676: 1 4 4 8 648\\n3133329640: 13 3 504 9 4 9 79 4 6 42\\n171083286625: 891 4 2 31 4 1 1 8 3 6 28\\n246966: 4 21 8 756 958 129 60\\n20297648: 6 6 7 3 44 6 4 9 5 8 508 7\\n5225057: 68 212 773 344 41\\n14027179994: 6 4 1 5 955 16 289 459\\n103990080: 8 4 727 745 6\\n671302: 8 3 694 219 8\\n65699608894: 733 25 456 896 321\\n1105635: 6 9 4 899 504 3 7 69\\n570870: 6 63 6 2 86 5\\n578: 82 6 8 79\\n129225002999: 3 5 7 2 687 45 5 2 5 12 2\\n103359403: 96 848 50 475 4 542 3\\n769845: 676 93 74 9 96\\n657218: 43 90 4 19 4 8 42\\n83665893: 1 929 621 9 3\\n1194505835: 701 9 27 2 1 9 900 7 9 3\\n108162065: 6 9 3 6 2 575 3 6 2 6 95 5\\n244720: 535 1 6 9 3 2 4 5 640\\n2556742499: 2 872 10 75 39 1\\n655752931828: 69 4 5 282 841 9 9 25\\n6498: 1 4 218 491 8 9\\n99340: 87 2 2 94 7 38\\n311694: 2 9 645 6 8 1 1 463 558\\n475029631657: 484 23 981 1 658\\n33497633: 3 72 19 9 5 30\\n131459408: 34 5 4 895 4 17 6 9 890\\n232750424: 6 345 8 7 899 8 5 9 2 5 5\\n3223413568: 7 84 17 4 85 4 43 92 70\\n23827264489857: 3 5 2 230 1 80 6 8 98 54\\n31532868368: 5 4 7 4 5 55 1 7 733 3 5\\n1409788800: 7 60 16 270 777\\n117061444: 927 98 38 14 31 92\\n37920196: 372 554 46 4 4\\n1444763880: 2 86 5 666 559 5 84 1 6\\n18249887: 4 11 4 3 9 22 36 4 943\\n6671: 63 31 89 218 34\\n13303940615: 6 1 1 85 9 81 1 4 206 9\\n59444: 813 4 83 39 9 8 7 9 222\\n228315: 5 58 72 4 63\\n27915301332101: 858 40 4 1 271 2 6 100\\n4146: 7 31 87 840\\n6249600: 6 310 4 840\\n1272468: 513 759 4 64 7\\n116754: 26 8 49 368 95\\n442633: 50 392 6 3 3\\n63911286832: 638 5 4 57 2 867 2 4 7 2\\n1735680960: 75 3 8 2 5 6 2 24 928 31\\n7251: 9 2 47 5 25\\n9478640: 2 4 722 6 2 6 14 5 218\\n60044752: 3 70 544 4 14 7 27 8 6 5\\n2150471689359: 3 7 64 20 892 4 8 93 60\\n49985412: 555 9 3 531 2 98\\n61783: 1 32 9 52 8\\n645625404: 14 61 7 5 5 20 6 39 2 9 2\\n832940787: 1 29 7 37 586 255 8 78\\n304578945006: 4 8 5 4 3 625 36 649 6\\n2922148: 374 836 5 7 69\\n4196627: 4 1 96 62 8\\n884701: 7 1 3 8 6 46 2 1 65 9 6 3\\n1621920: 423 8 9 4 861 7 339 4 4\\n36881320: 9 8 378 3 89 464 6 70\\n14468935: 6 96 6 3 4 5 4 68 4 1 937\\n17690: 4 9 1 6 7 4 36 9 65 3 7 1\\n365512: 1 585 78 59 8\\n3446721: 7 3 609 3 50 204 5 8 22\\n46965674: 2 472 59 6 3 7 8 7 1 11\\n79473417: 7 947 3 1 2 4 52 1 7 5\\n41543073: 20 4 91 5 2 562 30 4 7 5\\n527881386: 72 3 4 7 813 85\\n4918082720: 48 279 901 82 720\\n694983565: 63 3 5 39 540 7 28 62\\n894023100: 3 9 4 2 9 4 29 4 590 90\\n804741197: 41 630 4 4 6 2 604 74 8\\n1368306: 3 2 73 91 102 3\\n58759: 30 61 645 60 4\\n5252: 7 53 6 729 5\\n2946133318: 943 74 52 8 5 5 312\\n19506: 127 9 9 65 16 31\\n22670139: 307 8 5 8 181 92 7 6 7 8\\n5038087: 3 1 3 3 7 97 813 1 79 9\\n25718497: 5 3 813 72 90 320 9 88\\n556: 8 66 83 399\\n72912: 25 90 630 459 1\\n157824203: 9 188 28 2 8 2 6 5 5 59 9\\n38172933: 5 79 16 755 8 68 3 55 7\\n36789690: 91 991 8 344 2 890 49\\n2173205801: 1 8 429 59 7 477\\n78959322: 51 9 9 16 7 1 80 9 4 34\\n1432: 3 5 6 89 90 3 5 44 37 4\\n1069353: 211 32 5 237 8 5 25 3\\n1587962: 6 10 5 9 6 9 7 6 77 7 4\\n38758381653: 758 47 39 71 5 511\\n135999705: 81 29 7 7 95 6 459 87\\n6306566550: 74 1 1 8 832 653 4 6 3 8\\n636867401: 7 9 1 9 2 3 655 36 3 9 1 3\\n285959479412: 519 1 926 32 6 2 55\\n54923: 8 36 8 19 48\\n1958: 5 8 15 5 3\\n24264745: 3 37 72 64 8 97\\n8242976: 4 7 81 3 98 751\\n26307830922: 625 2 772 317 86 922\\n1083: 859 2 211 4 7\\n402346069: 5 4 4 5 5 8 950 8 5 6 9 1\\n1185694: 210 86 413 4 42\\n31620827: 1 33 95 5 265 731 93\\n11777482: 8 15 9 81 4 8 6 9 7 474 4\\n1276080722: 73 5 5 4 818 722\\n13040: 4 3 1 11 4 1 3 723 7 5 8 2\\n3843: 9 44 84 8 3\\n124818575: 69 7 11 273 9 62 6 925\\n8298060: 5 1 542 9 47 873 3\\n333432288: 93 2 997 5 2 5 69 816\\n10180: 99 51 2 82 1\\n453822898666: 2 7 56 6 9 2 3 9 8 9 866 6\\n80157: 80 1 57\\n1791368: 43 27 96 494 9 4 6 4\\n99851232: 6 1 6 984 74 9 68 231\\n9428: 1 88 2 50 5\\n2963: 79 4 204 6 16 821 404\\n303881: 1 365 829 18 449\\n21182: 18 80 232 6 2\\n165488471: 1 78 435 369 21 72\\n123238516: 3 17 7 7 12 40 964 759\\n112534350: 8 8 9 4 3 7 74 9 96 9 8 78\\n215628810: 344 5 2 1 7 179 1 5 7 2 4\\n56226: 1 9 9 694 9\\n30: 5 4 5 7 1\\n3903698047: 85 60 4 60 586 1 44 9\\n327731040: 5 8 5 18 82 2 28 61\\n344484: 28 208 59 2 866\\n148035889: 4 5 2 8 1 25 528 553 3 1\\n851572: 9 3 9 8 9 5 45 244 4 4 3 3\\n165467563: 97 5 1 2 92 7 737 5 1 5 3\\n222169: 6 659 8 7 4 741\\n451952: 98 499 4 94 8\\n9631924: 3 321 19 2 5\\n2159303: 557 6 41 65 55\\n149959662: 54 9 952 4 25 96 65\\n458369654: 9 502 65 696 54\\n8007682481: 8 685 122 922\\n5280132984: 617 383 76 7 7 6\\n999672: 9 99 652 16 7\\n70678080: 4 50 94 535 2 55 3\\n316848391599: 5 280 8 6 391 49 6 1 3 6\\n1161615051: 1 850 3 805 2 26\\n10085844711: 881 53 7 4 66 36 54 4\\n2878911772: 9 126 314 3 8 5 14 846\\n42768993609: 86 2 7 8 443 7 5 2 1 8 2 2\\n24396335828: 8 8 946 317 4 791 4 2 5\\n1665: 2 1 3 8 11 2 9 37 81 4 1 9\\n714237: 3 34 4 269 1 6 572 1 4 7\\n18838245: 8 37 931 61 449\\n232736596858: 4 66 702 68 8 431 8 4 3\\n3107149347: 641 31 969 5 239 6\\n548767: 74 44 4 463 578\\n91616: 2 7 3 36 63 1 2 40 91 8 8\\n2400557185: 4 3 7 5 432 3 2 7 1 5 247\\n53910: 6 7 90 408 54\\n164941432740: 8 5 48 8 961 53 55 40\\n538959617: 335 7 5 7 9 61 1 5 4 2 3 5\\n328142: 572 573 385\\n1169035: 7 7 88 161 7 635\\n110043089: 3 854 1 7 767 2 8 7 4 3 2\\n3916465: 4 89 55 8 8\\n331500: 73 8 5 9 145 4 4 912 85\\n12804048811094: 277 72 642 8 110 9 4\\n3144: 5 8 8 3 6 519 221 3 753\\n267232470303: 8 64 83 6 515 30 4\\n1116681984: 9 27 6 396 304\\n28758659017: 732 41 3 54 44 65 91\\n479159: 72 46 812 5 79\\n61254284: 7 7 7 71 2 4 4 3 9 8 8 919\\n9375: 1 545 17 37 76\\n929495: 52 11 866 475 20\\n577679969: 639 645 473 2 3 8 70\\n200299662: 71 587 9 89 6\\n257143040448: 542 56 6 73 5 518 224\\n2166: 5 303 646 5\\n62124934: 887 498 9 7 11\\n289: 25 9 64\\n28038: 6 84 3 46 3\\n4388325866: 5 55 7 8 722 4 5 79 6 71\\n11873804: 3 537 1 11 67\\n139650: 5 2 6 665 5\\n3357: 968 98 7 3 8 1 5 124\\n142833599: 555 5 2 130 981\\n198440: 9 689 4 8 8\\n4536289506: 7 400 146 613 8\\n8364: 7 9 8 6 9 41 37 5 5 158 1\\n419862: 278 824 381\\n37696: 8 29 699\\n96549948: 2 8 9 7 553 1 1 2 9 4 67 9\\n182740: 905 861 8 606 2\\n36686601000: 2 8 7 8 529 3 43 4 90 5 4\\n794803: 10 316 10 2 6 9 25 79\\n2376796767: 27 44 3 9 4 5 16 5 2 6 1 5\\n18373592473: 99 3 10 4 908 681\\n8415488: 2 3 2 7 23 515 7 3 3 8\\n1751: 901 8 51 787 4\\n194616: 5 556 2 7\\n13111: 6 35 24 56 7\\n887627111: 74 85 851 2 41 1 8 8\\n1217662897: 2 42 417 557 9 6 2 9 9\\n10859940: 7 153 169 60\\n15881: 74 9 62 102 2 3 87 9 35\\n1097951128: 83 6 5 8 7 7 9 4 1 111 1 5\\n396944: 8 5 11 27 9 6 688 7\\n234367648: 3 56 25 558 7 7 4 756 5\\n21211: 1 6 6 1 7 8 9 426 7 5 6 7\\n4310184255: 1 27 716 474 72 2 57\\n360694: 1 19 124 45 6 56\\n107043843915: 4 5 92 808 8 9 73 5 4 6\\n4542060: 8 32 2 7 40 9 7 4 8 4 915\\n47372214: 666 2 7 94 644 216\\n21933258: 7 5 578 3 527 5 807 1 2\\n64801487209154: 4 914 56 492 984 134\\n5371301: 53 7 1 302\\n470: 38 51 3 2 5\\n589298: 39 30 29 216 6\\n75856: 750 8 31 22 3\\n296359: 2 35 94 1 45 259\\n1163647626: 5 26 5 799 465 87 6\\n22673304: 9 474 51 589 377 4 8 9\\n237576549: 9 18 133 796 11\\n2805396096: 6 6 5 96 17 9 5 4 6 4 562\\n371253119: 81 84 81 2 5 77 14 28 1\\n143753291258: 2 683 39 6 22 3 14 8 57\\n155: 7 81 69\\n461262213147: 508 44 6 70 8 6 6 3 54\\n18146520: 9 813 62 9 8 5\\n7078875: 698 9 8 87 5\\n4584649: 2 5 15 218 2 61 765 1\\n76872668: 825 7 2 49 95\\n2380657716148: 9 71 6 970 27 7 350\\n1303324792: 6 4 9 960 81 3 4 79 3 1\\n1460405: 1 448 1 1 3 7 398 5\\n6162: 3 5 770 3\\n5354101577: 53 1 75 68 745 345 23\\n70159078: 26 4 1 95 955 7\\n3191471037: 90 5 5 16 2 2 7 17 506 5\\n3107702724: 908 870 562 12 7\\n832273: 61 93 8 670 275\\n982: 89 60 2 6 76\\n476: 12 2 4 424 24\\n2953251: 64 2 46 5 1 2\\n8211110: 3 8 279 91 8\\n432768580: 28 224 1 69 419 160\\n453159760: 904 88 8 5 679 763\\n23117061: 7 8 2 1 94 8 1 530 3 48\\n6649: 44 3 9 5 3\\n71397820: 841 51 4 5 2 2 8 2 9 5 4 2\\n921585: 9 6 7 67 131\\n20095142: 9 5 552 56 26 884\\n1902730: 13 871 28 63 6 7 81\\n79546: 9 5 57 1 31\\n1687628: 4 2 6 1 4 8 9 6 14 40 5 28\\n485832571: 432 53 82 7 5 571\\n9789951: 815 7 5 8 3 3 8 4 8 1 779\\n1049020059: 161 387 7 65 9\\n376580: 5 7 2 7 243 8 4 80 4 4 4 1\\n8682088462: 56 517 7 3 8 2 4 4 9 16\\n10977511: 8 707 21 83 39 3 631 4\\n3515635: 8 77 3 5 5 1 3 2 5 688 1 8\\n5355467256901: 432 8 269 46 568 6 4 1\\n66606466523: 1 4 5 65 785 8 9 545 20\\n20712: 613 250 3 2 4\\n2800704: 365 99 503 3 4\\n100830939546: 283 8 5 50 6 15 8 69 34\\n87151669425: 87 1 516 6 9 415 7\\n15704889: 2 507 22 88 8 57\\n895536: 980 6 3 2 7 664 6 3 3 2 6\\n3984235528: 204 279 7 8 9 5 2 8 7 2 6\\n65724939: 7 88 61 901 162 21 81\\n948: 7 7 2 6 4 2 25 8 4 69 6\\n1713100623320: 515 9 56 7 66 32 87 36\\n170019969: 425 8 325 57 50 868\\n93: 13 6 5\\n67212: 2 3 17 65 2\\n28473271: 536 5 32 332 458 493\\n1014918744: 6 8 4 7 6 798 353 84 38\\n25595: 1 9 69 7 32 92\\n162166399920: 2 6 3 621 303 9 1 38 70\\n701: 28 65 611\\n162141: 5 6 79 64 8 1 1 41\\n50852: 737 769 5 7 67 4 8 132\\n1626457: 21 65 45 7 1 60 1 989 7\\n102: 9 2 1 2 7\\n1759: 57 6 8 5 9\\n30362: 10 12 6 5\\n41746898: 4 1 36 671 75 893 5 1\\n6772: 47 4 36 5\\n190284: 11 29 7 571 4\\n69308585561: 6 15 770 8 585 558\\n30670489: 2 30 70 1 832 8 1 1 8 8\\n991101696: 82 2 9 807 86 4 6 832\\n138642: 294 3 812 25 5 17\\n9036: 372 88 3 39 2 9\\n33025904352: 101 658 408 42 29\\n6992002556: 72 2 3 1 1 4 22 6 9 44\\n70225: 70 693 92 8 21\\n297477534328: 6 1 2 766 737 382 326\\n50224735355: 157 457 62 7 459 896\\n3825: 2 77 73 5 4 17 768\\n2851: 80 17 2 92 39 1\\n262586522: 3 6 7 61 64 865 23\\n13822325: 7 9 664 613 91 8\\n325657: 495 6 65 1 9\\n865928337: 95 808 35 13 5 696 91\\n8127778: 812 7 7 71 7\\n38769284588881: 7 6 7 823 24 67 181 6 1\\n2131021: 3 71 10 18 1\\n14857925: 5 5 98 4 4 2 255 6 389 7\\n1600130081: 4 2 660 70 1 6 6 520 4\\n203305584: 83 945 81 9 8 6 9 429 4\\n59498459286: 5 949 845 921 7 7\\n42526316: 63 750 1 46 9\\n539839141: 3 3 8 1 9 2 486 363 6 56\\n239360: 5 84 668 4 55\\n565651373: 56 5 6 505 8 70\\n1143378721: 2 3 796 798 4 8 2 4 5 9 1\\n280842: 42 34 2 98 954\\n10709754541: 5 8 2 6 9 5 66 5 5 2 3 898\\n6422: 625 9 9 5 711 1\\n11462: 1 3 186 1 60\\n33372937: 3 36 2 9 99 37\\n2479: 8 28 23 6 1\\n7397: 11 17 3 88 5\\n158451447576: 7 53 7 8 307 3 7 577\\n19064999: 21 914 4 95 1 4 2 124\\n413447: 1 95 9 1 79 471 9 6 557\\n11285120: 53 2 916 56 4\\n3246608415: 8 2 8 607 3 476 747 4 3\\n2328776: 3 8 69 8 441 2 44 6 5 5 8\\n382541280: 8 4 18 501 7 636 40\\n8869392: 5 82 8 2 6 478 5 48 49\\n1287517498: 1 6 5 916 97 1 8 7 926 7\\n420466098: 6 6 9 635 9 514 34 425\\n620681230: 78 583 313 7 3 1 1 2 7\\n12454368: 56 8 678 21 41\\n245298381: 61 9 8 7 989 688 573 8\\n351018: 6 4 9 9 466 8 38 4 7 8 4 9\\n4093997: 33 2 8 23 67 216 882\\n534600: 88 675 9\\n26508882: 4 100 1 3 3 6 72 1 86 51\\n9784837: 3 8 5 595 8 5 7 7 64 8 5\\n2958: 55 6 3 3 631 5 8 2 1 1 4 3\\n6439: 153 9 4 477 9\\n27467895: 27 4 1 666 8 2 3 1 3 252\\n174337649: 12 9 7 921 5 5 2 97 4 19\\n5134608: 4 3 834 99 4 527 82\\n9050257575: 3 291 275 75 68 7\\n5879928820: 86 4 2 8 4 171 83 7 37 6\\n789693: 7 1 8 7 626 4 3 1 923 3 6\\n10070069: 5 1 76 1 5 315 55 77 9\\n4060932: 70 58 775 87 72\\n2001586498: 68 56 977 5 538\\n15898454: 167 4 238 46 8\\n7488: 67 57 7 67 8 5\\n723672311498: 723 6 7 23 114 1 9 1\\n14043700944: 18 27 524 78 707\\n33552700029: 2 8 19 5 790 35 4 3 21 7\\n4876613295: 43 18 7 454 9 46 95\\n25219: 76 39 79 8 814 51 6 1\\n50959: 41 9 959\\n16484: 4 8 9 2 675 897 3 8 43 9\\n1700392: 56 6 55 73 7 2 35 25\\n1782: 491 5 241 79 965\\n5932765: 657 288 990 909 9 9\\n6523039529: 652 303 839 50 63 6\\n1578: 12 9 33 19 9 543\\n155450400: 38 60 974 70\\n66010180: 3 5 584 5 1 58 1 2 190\\n6495610543: 6 495 603 6 1 14 41\\n37446382: 7 8 48 57 96 1 36 8 540\\n594950978: 2 5 539 30 8 6 8 82 97 6\\n625118: 4 528 509 86 6\\n21605: 6 61 5 300 5\\n6330045: 419 213 87 5 8 1 1 32\\n6746911: 9 4 668 8 23 1\\n3087024: 6 254 4 9 9 5 4 5 329 8 9\\n16535367: 31 698 5 764 7 65 43\\n7149716: 6 6 4 1 8 31 871 1 1 507\\n799003105: 5 5 75 91 509 23 353 2\\n14185157: 4 56 9 82 890 39 34 1 7\\n6575526: 2 936 7 9 523\\n4304408: 1 7 491 2 6 4 9 5 421 1 4\\n97419: 89 4 123 98 31 1 76\\n138041695: 417 7 1 9 9 4 14 182 6 9\\n285043637736: 2 97 898 93 507 68\\n909: 6 14 17 3 3\\n11698: 1 875 938 527 5\\n2214: 517 4 8 1 1 8 4 7 4 19 94\\n2097920: 51 4 596 8 8\\n4897932: 7 7 20 212 7 83 5 8 9 6\\n3878881777: 6 651 27 86 216\\n52158: 86 7 7 80 78\\n23304: 430 3 2 9 83 1\\n4243659: 400 8 6 221 399 55 5\\n140494108418: 570 20 11 3 31 7 96 8\\n471859: 7 1 174 6 1 58 46 9 1 8 3\\n340507379: 37 8 8 492 2 7 881\\n17353039300: 948 78 6 919 168 91 9\\n443456: 40 51 609 4 9 8\\n7800578: 7 799 1 57 8\\n126307883: 59 576 212 670 6 8 52\\n17505960: 7 47 6 8 6 8 184 926 3 6\\n295005: 3 8 57 3 7 6 979 5 670 7\\n5971233880: 399 2 277 54 8 6 6 8 2\\n54974592: 7 570 7 6 5 508 32 27\\n297463168093: 9 2 1 7 9 4 3 8 685 4 8 93\\n278598: 7 630 8 1 1 9 7 7 5 146 1\\n4522732: 81 8 5 36 81 65 99\\n710531: 710 529 4\\n8125226: 25 1 18 81 62 652\\n11972351: 2 4 5 93 4 345 8\\n38021570720: 692 1 5 876 8 4 8 139 7\\n5086640: 23 873 53 67 80\\n10116724: 5 4 10 374 3 5 4 2\\n606: 5 98 97 3 6\\n52567399: 6 6 60 88 761 62 7 5 9\\n41902: 3 7 9 16 120 21 1 1\\n201364: 6 9 3 29 10 3 64\\n49541: 688 9 2 4 5\\n1790: 2 257 99 5\\n1241759: 153 783 81 3 407\\n7883273373: 27 85 618 1 91 70\\n503: 358 1 9 78 58\\n365868977: 8 4 3 271 205 5 9 2 3 72\\n6887: 5 840 34 6 92 1 5 7 8 5\\n918599: 528 701 9 742 3\\n1843120864580: 4 8 9 185 229 721 6 7\\n15912846: 10 56 20 6 6 2 6 381\\n23795606629: 552 7 6 5 21 410 86 29\\n8867: 42 8 5 1 7 11 5 62\\n66356409: 818 2 8 900 409\\n84171143: 64 777 71 14 3\\n54180206992239: 3 487 6 2 3 83 59 8 4 39\\n8810079608: 17 93 1 259 95 8 9\\n66049863205: 16 9 8 491 6 76 87 205\\n5399021: 8 6 8 2 602 63 8 8\\n8506485: 50 378 7 9 1 9 7 215 9 5\\n20598790155: 50 28 1 512 8 1 3 48 54\\n45665: 32 846 52 1 9\\n2012551695: 36 748 387 1 6 9 737\\n83887148644: 792 127 834 92 644\\n1524819977: 1 3 8 5 36 43 26 3 47 9\\n839835367036: 981 5 78 780 5 2 7 36\\n4585138: 25 7 262 1 38\\n998: 17 4 12 2 488 6\\n1734480: 7 6 647 73 36\\n19088: 1 1 72 23 10\\n49240: 38 5 104 3 40\\n39100208207: 290 2 786 186 565 57\\n936031626118: 3 1 3 603 1 2 4 261 5 9 2\\n8928848124: 55 6 729 933 73 6 449\\n422326175: 57 70 74 10 77 21 5\\n12237480: 4 6 2 9 975 6 8 9 1 64 2 8\\n22630070: 3 4 4 5 8 4 1 819 3 356 3\\n69544973: 1 9 248 2 2 94 7 2\\n656880: 1 45 5 952 1 3\\n239: 1 3 8 34 7 95 39 32 6 2\\n7657248674: 6 15 5 3 1 1 6 83 660 5 9\\n1665: 5 64 24 1 8\\n1042148517: 11 558 4 210 276 4 9\\n1896138357138: 9 1 594 3 7 348 6 8 4 2 3\\n16636534: 8 8 189 4 531\\n1890763745: 9 2 738 5 6 9 2 2 4 50 9 5\\n5542542: 3 7 227 6 5 5 3 7 7 91 1 4\\n31211: 4 8 3 6 3 7 3 3 32 869 6\\n122025580: 9 173 896 549 75 579\\n26321360: 569 6 1 6 96 694 3 10 8\\n22924: 46 497 62\\n8634935898204: 6 388 998 9 155 244 1\\n52363955628036: 392 632 925 27 89 6 6\\n74576: 7 45 4 4 59\\n19299992787: 691 754 2 93 1 3 86 3\\n476016479: 4 6 28 89 9 6 47 9\\n250650658926: 6 34 7 46 398 9 993\\n10272872826: 19 4 9 2 1 2 6 87 282 6\\n12382719: 634 15 7 2 93 80 6 613\\n414849674: 52 38 8 99 74\\n6356057770: 1 9 80 546 60 57 76 8\\n1792217744: 8 96 2 2 114 63 4 2\\n708680: 801 7 62 125 55\\n86488566: 9 60 984 9 1 8\\n722465: 9 111 2 8 2 9 159 190 5\\n1498968: 311 43 1 7 2 97 38 8\\n1834803: 278 66 4 25 3\\n88279: 3 291 3 6 17 24 36 3\\n69002777: 35 51 805 77 346\\n16345119: 250 8 5 8 7 2 1 5 17 8 9 6\\n1449: 3 6 4 8 69\\n180612: 81 70 554 4 29\\n2423844: 4 855 5 1 5 814 4 9 6 6 2\\n29768: 5 832 35 20 453\\n11188320941: 7 81 8 6 286 5 1 4 79 5 5\\n71320475996: 33 72 6 7 5 2 52 759 96\\n324367: 510 318 2 1 7\\n9914: 9 5 708\\n1278883203: 970 4 103 8 2 8 2 320 3\\n1662015663: 400 37 784 7 35 693\\n122683056: 8 7 815 8 2 7 32 5 6 1 6 8\\n618433: 7 479 29 30 6 3 4\\n26375184: 6 3 6 7 493 3 6 1 61 2 72\\n16352: 424 71 16 4 8\\n127253012797: 3 1 7 790 52 3 3 9 9 84\\n237447056881: 905 298 90 279 940\\n3510371662: 3 90 9 3 716 63\\n6810091257: 9 843 68 48 55 5 57\\n13160: 97 752 91 2 7\\n9072: 27 9 38 899 757 3\\n141048429: 5 2 89 5 239 91 2 449\\n86840: 92 9 7 55 8\\n2590403191: 8 536 742 5 604\\n5280114601677: 41 4 383 5 333 2 1 680\\n6720768237: 26 1 9 32 1 27 6 2 60 36\\n142690: 55 5 82 30 4 9 9 1 9 3 10\\n1350: 56 94 9\\n6705005763: 32 8 4 2 5 7 7 5 456 8 3\\n105818400: 355 8 276 5 27\\n508269: 5 85 83 5 4 82 25 67 1 7\\n81889214674: 28 9 162 5 601 6 3 1 97\\n1633868160: 807 2 6 1 9 8 63 2 2 8 2 3\\n1612491937: 445 6 85 7 3 7 2 5 203 7\\n66097871677437: 922 7 870 28 1 8 8 160\\n1868983236: 981 6 10 40 789 6 6\\n33278882: 615 6 76 534 2\\n1623: 5 25 314 4 782\\n1236416273: 32 7 462 88 8 9 1 93 18\\n87745140: 941 3 74 15 5 84\\n2937158: 2 3 1 3 3 5 44 886 833\\n2654: 3 9 3 3 84 1 4 956 390 1\\n56114675: 7 287 44 18 77\\n185087886: 7 376 4 8 7 778 2 77 30\\n279563776: 5 2 168 2 644 92 16\\n35161621577: 6 1 5 564 28 7 997 9 73\\n5569997161: 2 3 95 8 511 971 59\\n31907809880: 59 676 762 35 8\\n14666927700: 13 245 307 5 8 99 3\\n10224058621: 2 2 64 6 8 526 3 3 832\\n209124641523: 774 5 3 5 4 3 15 7 7 9 2 4\\n7627287: 11 99 3 68 7 451 7 9\\n31847: 97 8 8 8 9 72 6 8 4 54 5 2\\n3557400: 5 3 196 242 5\\n10372128542842: 215 6 6 516 8 542 842\\n161406296569: 2 3 7 405 8 4 96 55 7 11\\n69429538310: 9 10 9 2 48 7 762 737 2\\n7349070388: 5 9 4 8 87 3 29 702 9 9 8\\n124109: 591 70 3\\n275223: 1 8 25 985 27 5 1 1 2 93\\n93181: 90 68 587 430 5\\n9218419685: 78 924 46 2 196 86\\n1043342438655: 3 87 3 8 43 46 8 6 28 8 4\\n3025113: 302 405 33 1 735\\n193655182003: 3 8 91 7 1 1 7 8 7 8 200 1\\n328798: 6 6 721 4 18 5 94 385 8\\n13952103: 8 930 9 4 78 3 5 8 5 38 4\\n68085249: 5 7 474 6 9 5 4 445 83 3\\n47989: 7 9 4 895 52 396 1 4 8 1\\n11418200500: 763 999 35 230 805\\n58: 8 45 5\\n12543: 557 7 3 831 15\\n1102632749: 9 122 75 388 2 1 749\\n440190: 68 78 67 5 9\\n244416253136: 2 9 5 7 3 8 2 48 2 5 3 137\\n539203788574: 5 8 8 14 48 8 9 612 8 9 9\\n3898931632: 7 913 69 12 61\\n6986920: 8 54 144 13 7 3 6\\n5183: 2 418 8 2 899\\n71028585: 4 402 54 818 9\\n55702470: 556 751 224 9 4 484 3\\n1593352: 4 5 526 8 42 5 8\\n16808673: 26 4 56 1 7 67 5\\n418948995: 6 23 65 9 1 371 6 8 308\\n42558707: 1 581 99 6 73\\n1114: 90 3 8 8 304 1\\n7624594: 35 41 8 9 59 360 136\\n1879869419: 4 7 19 296 75 572 367\\n105392107: 9 5 2 3 7 38 2 7 15 6 10\\n39425: 61 1 28 6 415\\n946: 58 5 3 5 5 4 1 4 63 75 3 4\\n26503137: 907 195 65 5 74 4 33\\n121640265997: 149 2 33 29 81 347\\n1336050312157: 469 3 581 29 49 59\\n196079121: 818 932 700 989 8 1\\n2572786: 7 5 81 91 38 3 8 3 4 3\\n6066829632: 8 75 6 673 9 96 30\\n45479102449: 805 9 17 83 7 9 369 4 7\\n1881087780: 3 414 2 475 76 715\\n564128512: 40 3 525 757 41 32\\n2062811875: 5 77 728 926 49 7 8\\n33632: 155 7 31\\n6069707: 2 3 70 29 130 7\\n57566793: 8 1 7 8 24 739 3 788 7\\n740946416: 4 32 54 941 86 8 959\\n152224: 628 241 6 71 3 796\\n2495: 24 78 3 3 9 2\\n1133974: 78 4 292 3 8 1 8 9 165 3\\n176823308: 9 61 3 63 12 93 51 6\\n1194161597: 90 964 4 7 197 6 32 43\\n53023851518: 6 174 7 634 85 151 5\\n145124352: 91 90 72 128 87\\n368188110675: 763 35 173 805 99\\n15018: 1 10 69 432 5\\n61075469: 3 4 6 1 187 3 2 9 7 3 1 94\\n64801192912: 80 81 1 116 3 1 2 911\\n4528048: 12 132 2 14 8 9 16 28\\n175718418351: 21 876 5 883 8 1 835 1\\n298575945: 2 98 575 9 44\\n391194: 33 44 7 9 44 38 469 9 4\\n66714: 66 57 8 9 55\\n146426934034: 76 20 5 283 5 9 2 963\\n1462: 4 1 727 2\\n27980088578: 81 62 59 27 7 83 81\\n168341241: 3 27 9 8 789 91 5 9 23 9\\n2353029: 9 5 3 9 4 9 54 6 2 3 5 9\\n5596: 80 478 4 6 8\\n1759: 96 1 6 792\\n13820532: 47 65 7 5 58\\n3282: 78 5 2 40 93 3 390\\n39641: 6 29 9 2 7\\n6221202216626: 481 489 67 2 271 976\\n3695923017: 307 993 580 2 1 8 6 9\\n639779588830: 7 1 4 32 1 27 1 4 7 833\\n460677118880: 1 921 35 423 7 76 5\\n1136300244: 981 261 579 2 3\\n15930: 2 3 5 88 15 6\\n138736991: 60 97 839 8 494 2 2\\n1215654185: 1 6 7 6 6 4 47 9 66 176 6\\n163048: 113 7 41 160 5 61 6 26\\n12547: 697 18 1\\n106568000: 813 59 8 692 175\\n42382561: 32 637 98 2 6 69 8 3\\n2570994: 9 8 6 3 4 18 110 9 8 3 9 6\\n945: 33 1 1 3 9\\n271349811: 83 3 829 578 77 9 57\\n40876: 1 751 4 700 8 11\\n100195832: 4 9 77 95 6 1 84 51\\n499013366: 5 284 7 50 50 7 9 8 2 5 4\\n48314: 212 2 58 6 482 82 2 11\\n2105198: 1 2 35 6 41 37 2 950 2\\n1059993: 4 6 59 99 4\\n17687160103: 91 71 99 24 795 30 72\\n47880503208643: 57 840 503 208 641\\n692869: 68 8 4 867 4\\n7838019: 3 915 317 726 9\\n663157956382: 685 1 2 5 684 378 374\\n12977701: 80 63 28 521 4 717\\n577084: 3 2 8 7 84 6\\n44949960: 15 725 476 90 44\\n18835663769: 87 202 6 83 5 4 9 8 77 3\\n1587871: 5 26 3 3 870\\n1097: 1 99 8 402 37 2 3\\n521926131: 869 868 5 2 81 8 6\\n4276474815: 555 956 806 4 13\\n703290455: 966 4 220 591 455\\n22985142332: 1 32 477 98 9 745 2 3 5\\n1143: 1 5 3 3 9 5 5 8 6 4 3 9\\n93605483394: 1 197 782 827 1 3 3 93\\n5679: 7 78 28 57 9\\n5197478: 3 77 8 5 819 4 2 22 221\\n2740652543: 12 434 64 84 41\\n26523: 332 6 7 8 5 9 6 4 4 3 87\\n264220: 429 4 2 5 625 41 93 7\\n331: 295 3 1 5 5 21\\n1041: 5 50 5 92 3\\n3080648: 3 9 9 1 5 4 16 8 62 6 42 5\\n28887040: 1 78 8 5 4 32 2 13 80\\n17084: 3 1 610 7 4\\n44090434: 7 29 9 96 8 7 9 38 7 80\\n304601158410771: 600 1 616 824 107 7 4\\n54890328: 8 736 60 6 9 758 518\\n102297857: 12 7 3 347 6 862 4 865\\n971: 64 555 4 23 14 225 86\\n29308: 3 84 6 5 399 7\\n3028880328: 9 662 5 493 5 803 26 2\\n13007976: 4 228 9 635 85\\n20407: 2 4 4 3 55 39 1 4 35 560\\n43686567836: 51 86 1 815 8 29 971 4\\n1724327218: 918 8 541 434 82\\n128448: 85 51 2 81 4 4 48 3\\n1285: 52 251 1 4 54 15\\n13726063210: 4 8 673 8 7 7 2 6 13\\n3464299: 1 23 37 7 6 8 215 645 3\\n45742500285: 535 475 180 28 3\\n2034580: 77 3 4 793 457 4 4\\n109418200850: 1 4 488 6 6 2 75 8 8 3 9 8\\n1688245068: 779 97 333 65\\n89633: 4 40 9 500 3 2\"","export default \"............\\n........0...\\n.....0......\\n.......0....\\n....0.......\\n......A.....\\n............\\n............\\n........A...\\n.........A..\\n............\\n............\"","export default \"..................................................\\n................2.................................\\n......6.........x.0..G............................\\n..............x5......0..................S........\\n.....0............................................\\n..................................y..............e\\n..........................G...............O.......\\n.....................0........GO...............d..\\n.........................8..........e.............\\n.........6....................................e...\\n......z6..5...N..x...................eY...........\\n................6.........5..........Y.E..........\\n.........X.....N....................E.a...S.....4.\\n...........................N.2......d.............\\n...s..................92.....a...................4\\n............s....................GO........4......\\n...........................................d.....S\\n.....................X....N.......................\\n.........A........................................\\n.s.....................A....E.......a.........Y...\\n.....g....s..................E.....Y..............\\n.............o....................................\\n...............................3...............O..\\n.g.................F.3.y..........................\\n.......F................y.....................d...\\n..................................X...............\\n..8....5............X..Z..........................\\n..g.....8.....na..................................\\n......................................3...........\\n.............J.......x............S.Z.............\\n..2J....h.A...............Z.......................\\n......A.............................3.............\\n............J.......n.............................\\n.8......o....n...........Z........................\\n..................o..............y................\\n..F.........................D...............9H....\\n.................................1.............9..\\n..................................................\\n.........h.....n......................f...........\\n.h....................z..........j.........9......\\n.......oF............................j............\\n..........h......z...........7.....1.f............\\n........................7.......1...H...j........f\\n........................................f.........\\n...........................7.......H..............\\n................................H.................\\n.............z...........D........................\\n..............J....................Dj.............\\n....................................D.............\\n....................7.......1.....................\"","export default \"2333133121414131402\"","export default \"\"","export default \"89010123\\n78121874\\n87430965\\n96549874\\n45678903\\n32019012\\n01329801\\n10456732\"","export default \"101234653436698943210876543298108967890123211\\n900945762567787651028945054167211876965254300\\n812876851008632112987632167054340105874367891\\n743987945219541003456542108981233234567809892\\n657641434349898764565876232190543456452912763\\n898530125896701651698965945087612387301103454\\n101421056787672340789234876231201293219010989\\n012336765410589121470125960140340184678321670\\n987449870323431034561076054057653296501234521\\n876558901210120345665780143968934187410345438\\n034569821025001256676891232877065056309654589\\n125678438136789867589872301986174145218789678\\n678776569245234798434565432765289036785890541\\n589989478910135652329806567874376123896781030\\n431276321210023101210715432990145678765432121\\n120345290923412302345620121087230109650187656\\n098010187874503210989430101256521212341090347\\n187623456365694567876543232344560301032181298\\n012510589456787655469854741023478912345672107\\n143421674307897846988767858910890109852109856\\n231256014210978987671056967378765210763296705\\n140347123900389034502340191269854307894585014\\n051298034891276123216521780350123456765674323\\n565434540762345637897435615443210523456001298\\n876529651057850136988904306782107610987123367\\n985018782348943245077211216790108901278994453\\n123427890167654432106310345889299870122185432\\n010568921211234501215445432976387761233076541\\n129877432100235676301456701265456654394567650\\n431066523231145985490389876014012534585658969\\n302309012694046796781201078923453421673215678\\n213218906783459873212212562112969010984504301\\n304567815612163654304323453007878123435643210\\n412359854309072345323456894314365036521754965\\n563456743218781896210567765101254307810867874\\n694105678907690787890698989210345218987980123\\n787234563210581654321787876307896210898943321\\n894563454671410010987345665456987346787652450\\n763674589582323225676298767645459855898101067\\n652983673497654134570156958912378764306678998\\n341672102108987010987667843003569013215463210\\n030501012896109823478766542103454320176354501\\n125418923787210734569651033212169010083296101\\n654327654654323601234569124349078321190187632\\n789210125345434512103678765678767456783276543\"","export default \"125 17\"","export default \"2 54 992917 5270417 2514 28561 0 990\"","export default \"AAAA\\nBBCD\\nBBCC\\nEEEC\"","export default \"WWWWWWWHHHHHHHWHRRRRRJJBBJJGDDDDDDDDDDDDDDQQFFFFFFFFKFHHHHHEEEEEHHHKHHHHHHHUUUEEEEEEEEEEVVVVVVVVVVVRRRRRRRRUUUUNVVVVVVVVVVVVNNNNNNNNNNNNNYNN\\nWWWWWWWWHHHHHHHHRRRRJJJJJJJJDDDDDDDDDDDDDQQFFFFFFFFFFFHFHFEEEEEEHHHHHHHHHHHEUEEEEEEEEEEEVVDVVVVVRRRRRRRRRRRRUUUVVVVVVVVVVVVNNVNNNNNNNNNNNNNN\\nWWWWWWWHHHHHHHHHRRRJJJJJJJJDDDDDDDDDDDDDDDQFFFFFFFFFFFFFFFEEEEEEEHHHHHHHHHHEEEEEEEEEEEEEVVDVLVVLAARRRRRRRRRRUUUAVVVVVVVVVVVVVVNNNNNNNNNNNNNN\\nWWWWWWHHHHHHHHHHRRRRRJJJJJDDDDDDDDDDDDDDDDDDFFFFFFFFFFFFFFEEEEEEEHHHHHHHHHHEEEEEEEEEEEEEVVDVLLLLLLRRRRRRRRRUUUUVVVVVVVVVVVVVVNNNNNNNNNNNNNNN\\nWWWWWWWWWHHHHHHRRRRRJJJJJIDDDDDDDDDDDDDDDTTTFFFFFFFFFFFFFEEEEEEEEEIHHHHHHHHEEEEEEEEEEDTDVDDDDLLLLLRRRRRRRROOUUUVVVVVVVVVVVVVVNNNNNNNNNNNNNNN\\nWWWWWWWWWHHHHHHHRRRRJJJJJGYDDJDDDDDDDDVDDTTTFFFFFFFFFFFFFCEEEEEEEEEHHHHHHHHHEEEEEEEEEDDDDDDDDLLLLLRRRRRRRROOUUVVVVVVVVVVVVVNVNNNNNNNNNNNNNNN\\nWWWWWWWWWWWWHHRRRRRJJJJJXGYYGDDDDDDDDDDDTTTTFTTFFFFFFFFFFFFEEEEEEEEUUHHHHHHHEMMEEEEEDDDDDDDDDLLLLRRRRRRORROOUUVVVVVVVDVVVVVVVNNNNNNNNNNNNNNN\\nWWWWWWWWWWWBBRRRRRRRXXJJGGGGGGDDDVDDDDDTTTTPFTTFFFFFFFFFFFFEEEPPCCCCCCUHUUHSSMMEEEDDDDDDDDDDDLLLLTTRROROOOOOOUBBVVVDDDVVVVVVNNNNNNNNNNNNNNNN\\nWWYYWWWWWWWBBBRRRRRRRXXJAGGGGGGGDDDDDTTTTTTPTTTTTFFFFFFFFFEEEPPPCCCCCCCCCSSSSMMEEMMMMDDDDDDDDSLTTTTSTOOOOOOOOODDHDDDDDVVVVVVVVNNNNNNNNNNNPPP\\nYYYYYWWWWWBBBBBRRRRXXXXGGGGGGGGGGDDDDDTTTTTTTTTRFFFFFFFFFFEEEPPPCCCCCCCCCSSSSMMMMMMMMDDDDDDDDDLTTTTTTOOOOOOOOODDDDDDDDDVVVVVKKNNNNNNNNNPPPPP\\nYYYYWWWYBBBBBBBRRRRXXXXGGGGGGGGGGGGDDDQQQTTTTTTRRFFRFFFFFFFEPPPPCCCCCCCCCUUMMMMMMMMMMDDDDDDDDDLTTTTTTORORROROODDDDDDDDDDVVVVKKKNKNNNPPPPPPPP\\nYYYYYWYYDBBBZZBRRXXXXXXXXXGGGGGGGGGDDDQQTTTTTRRRRMFRFFFFFCCCCCCCCCCCCCCCCUUMMMMMMMMLLLDDDDDDDDDDTTTUTORORRRRRDDDDDDDDDDDVVVVKKKKKKPPPPPPPPPP\\nYYYYYYYYYBBBBBBRRXXXXXXXXXGGGGGGGGQDDQQQQQQTTRTRRRRRRFFFKCCCCCCCCCCCCCCCCUUUMMMMMMMLLLDDDDDDDDDSNTNTTORRRRRRRDUDDDDDDDDDVVKKKKKKKKKPPPPBBPPB\\nYYYYYYYYYYBBBBBXXXXXXXXXXXGGGGGGQQQQQQQQQQXTTTTRRRRRRFFFZCCCCCCCCCCCCCCCCUGUMMMMMMMLLLDDDDDDDDDDNNNNNORRRRPRRLUDDDDDDDDDKKKKKKKKKKPPPPPBBBBB\\nYYYYYYYYYYBBBBBXXXXXXXXXXGGGGGGQQQQQQQQQQQQTTTTTRRRRRSFFZCCCCCCCCCCCCCUUUGGMMMMMMMMLLLDDDDDDDDDDNNNNROORRRRRLLLLDLDDDDDKKKKKKKKKKKPPPPWBBBBI\\nYYYYYYYBBBBBBBBBXXXXXXXXXXGGGGGQQQQQQQQQQTTTTLRJRRRRRRRRZCCCCCCCCCCCCCCUGGGMMMMMMMMLLLDDDDDDDLDNNNNNRORRRRRRLLLLDLHDDDDKKKKKKKKKKKKPPPWBBBBB\\nYYYYYYYYBBBBBBXXXXXXXXXXXXXGGGGQQQQQQQQQQQTTTTRRRRRRRRRRRCCCCCCCCCCCCCCKGGGMMYYYMMMLLLDDDDDDDDNNNNNRRRRRRRRLLLLLLLLEDDKKKKKKKKKKKKKKPPWBBBBB\\nYYYYYYYBBBBBBBXXXXXXXXXXXXXGGGGQQQQQQQQQQRRRTRRRRRRRRRRRRCCCCCCCCCCCCCCKGGGGGYYYYYMLLLCDDDDDNNNNNNNNRRRRLRLLLLLLLLLEDDKKKKKKKKKKKWQQWWWBBBBB\\nYYYYYYYBBBBBBBXXXXXXXXXXGXXGGGGQQQQQQQDQQRRTTRRRRRRRRRRRRCCCCCCCCCCUCCCKZGGGYYYYYYMLLLDDDMMMMNNNNNNNNNULLLLLLLLLLLLEEDDKKKKKKKKKWWWWWWWWWBBB\\nLLYYYYYYBBBBBBXXXXXXXXXXGGGGGGGQQQQQQQDQQRRRRRRRRRRRRRRRRCCCCCCCCCCUUUKKZGGYRYYYYYYLLLMMDMMMMNNNNNNNLLLLLLLLLLLUULUEEDKKKKKKKKKWWWWWWWWWBBBB\\nIIYYYUYIIIIIBBBXXXXXXXXXMGGGGGGGQQQQQDDRRRRRRRRRMMRRRRRRRCCCCCCCCCCCCCCCZGGYYYYYYYUMMMMMMMMMMMNNNNNNLLLLLLLLLUUUUUUEUUKKKKKKWWWWWWWWWWWWBBBB\\nIIIIIIIIIIBBBBBBXXXXXMXMMGGGGGGGGGGGQUDDRRRRRRRMMMMMMRRRRRRRRUZCCCCCCCCCZZGYYYYYMYUMMMMMMMMMMNNNNNNNNNLLLLUULUUUUUUUUUKKKKBBJWWWWWWWWWWWBBBB\\nIIIIIIIIIIIIIMMBYXMMZZZZZZZGGGGGGGGGDUDDDDDRRRRRMMMMMMRRRRRRRUZCCCCCCCCCZGGYYYYYMMMMMMMMMMMMMNNNNNNNNNLLLOUUUUUUUUUUUUKKKBBBJJWWWWWWWWHWBBBB\\nIIIIIIIIIIIIIMMXXXXMZZZZZZZMGGGGGGGGDDDDDDDDRRRDDMMMMMRRRRRRJZZCCCCCCCCCZZGYYYYYMMMMMMMMMMMMMMNNNNNNNNNLLUUUUUUUUUUUPPBBKKBBJWWWBWWWWWHWBBBB\\nIIIIIIIIIIIIIMMMMMMMZZZZZZZMGGGGGXDDDDDDDDDDDDDDDMMMMMMRRRJJJZZCCCCCCCCCZZGGGGYYMMMMMMMMMMMMMMNNNNNNNNNNNUUUUUUUUUUUPPBBBBBBBBBWBNWWWWWWZBBB\\nIIIIIIIIIIIIIMMMMMMMZZZZZZZMGGGGXXXDDDDDDDDDDDVDMMMMMMMRRRJJJZZCCCCCCCCCZGGGGGGGMMMMMMMMMMMMMODDNNNNNNNNNNUUUUUUUUUUUPPBBBBBBBBBBNNNNNWUBBBB\\nIIIIIIIIIIIIIXMMMMMMZZZZZZZMMXXXXXDDDDDDDDDDDDDDMMMMMMMRRJJJZZZZZZZZZZSSSSSGGGGGMGMMMMMMMMMMMMMDNDNNNNNNNNUUUUUUUUUUPPPPPBBBBBBBBNNNNNNUBCCC\\nIIIIIIIIIIIIIXMMMMMMZZZZZZZMMXXXXXXDDDDDDDDDMMMMMMMMMMMMMJJJZZZZZZZZZSSSSSSSGGSGGGGMMMMMMCMMDDDDDDNNNNNNNNUUUUUUUUUUPPPPBBBBBBNBBNNNNNNNNCCC\\nIIIIIIIIIIIICMMMMMMMZZZZZZZMXXXXXXXXXDDDDDDDMMMMMMMMMMMJJJJJJJZZZZZZZSSSSSSSSSSSSGGMGGMMMMMMDDDDDDDYNNNNNNAAUUUUUUUUPPPPBBBBBBNNNNNNNNNNCCCC\\nIIIIIIIIIIFFMMMMMMMMZZZZZZZXXXXXXXXXDDDDDDDDDDDMMMMMMMMMJJJJJJZZZZZSSSSSSSSSSSSSSGGGGMMDDDDDDDDDYDDYNNNNNNAAAUUUUUUPPPPPBBBBNNNNNNNNNNNCCCCC\\nIIIIIIIIIIITTTTMMTMMZZZZZZZXXXXXXXXDDDDDDDDDDDDMMMMMMMMMJJJJJJZZZZZZSSSSSSSSSSSSGGSGGDDDDDDDDDDDYYYYNNNNNAAAUUUJJJUPPPPPPPPPNNNNNNNNNNNNNCCC\\nIIIIIIIIITTTTTTTTTTTTTXXXXXXXXXXXXXDDDDDDDDDDDDMMMMMMMMMMJJJJJZZZZZZZSSSSSSSSSSSSSSGGDDDDDDDDDDDYYYYYNNNNYYUUUUUJPPPPPPPPPPPNNNNNNNNNNNNNCCC\\nIIIIIIIIINTNTTTTTTTTTTXXXXXXXXXXXXDDDDDDDDDGDMMMMMMMMMMJJJJJJJZZZZZZGSUSSSSSSSSSSSGGGDDGDDDDDDDDDDJJJNNNNYYUUUUJJJPPPJPPPPPPPNNNNNNNNNNNNNCC\\nIIIIIIIIINNNTTTTTTTTTTXXXXXXXXXXXXJDDDDDNDGGMMMMMMMMMMMJMMMJJZZZZZZSSSSSSSSSSSSSSSGGGDAYYDDDDDDDDQQJJJJNYYYYYUUJJJJJJJVVPPPPPNNNNNNNNNNNNNCC\\nIIIIIIIIINNNNTTTTTTTTXXXXXXXXXXXXXDDDDDDGGGGMMMMMMMMMMMMMMJJJJJJZJZJSSSSSSSSSSSSGGGGGGYYYYDDDDMPPJJJJJJUYYYYYUJJJJJJJJPPPPPPRRRRNNNNNNNNCNCC\\nIIIIIIINNNNNNNTTTTTTTXXXXXXTXXXXXXDDDDDDDGGGGGMAAMMMMMMFMJJJJJJJJJJJSSSSSSSSSSSSSGGGYYYYYRDDDVMMMQQJJJJYYYYYJJJJJJJJJJPPPPPRRRRRRNNNNDNCCCCC\\nIIIIIINNNNNNNTTTTTTTTTTXXXXXCXXXXXDCTTGDGGGGGGGAAMMMMMMFMJEJJJJJJJJJJJJSSSSSSSSSGGGGYYYYYYDDDMMMMQQJJJJOYYYYYJJJJJJJJJJYPPPRRRRNNNNNNDNCCCCC\\nIIITTINNNNNNNTTTTTTTTTTTTWWWXXXXXXCCCTGGGGGGGGGAMMMMJMWEJJEJJJJJJJJIJJJSSSSSSSSSSGGGGYYYYYAAAAMMMMMYTTTYYYYCJJJJWJJJJJJJPPPRRRRRRRRNHHHCCCCC\\nIIIIIINNNNNNNNTTTTTTTTTTTTTTXXEXXXCCCCCGGGGGGAAAMJMJJJEEEEEEEEJJJIIIIIJSSSSSSSGSGGGYYYYYYYAAMMMMMMMYTTTYCCCCCJJJJJJJJJJJRRRRRRRRRHHHHHHHHCCC\\nIIIIIIIINNNNNNNTTTTTTTTTTTRRXHXXXXPCCDGGGGGGGAAJJJJJJJJEEEEEEEEJJIIIIIIIIISSSGGGGGYYYYYYYYAMMMMMMMYYTTTTCCCCCCJJJJJJJJJJJRRRHRHRHHHHHHHHHCCC\\nIIIIIIIINNNNNNTTTTTTTTTTARRRAHHHXXLLLLLLLGGGAAJJJJJJJJJJEEEEEEEJIIIIIIIIIIIISGGGYYYYYYYYYMMMMMMMMMYYYCTCCCCCJJJJJJJJJJJJRRRRHHHHHHHHHHHHHCCC\\nIIIIIINNNNNNNNTTTTTTTTTTARRRAAHHAVLLLLLLLLJJJJJJJJJJJJJJEEEEEEEJJIIIIIIIIIIISIGGYYYYYYYYYYMMMMMMMMMYYCCCCCCCCJJJJJJJJJJJRRRRRHHHHHHHHHHHHCCC\\nQIIIIINNNNNNNTTTTTTTTTTTAAAAAAAAALLLLLLLLLJYLJJJJSJJJJJEEEEEEEEJIINIIIIIIIIIIIIIYYYYYYYYYYMMMMMMMMMYYYCCCCCCCCJFFFFJJJJJRRRRRKHHHHHHHHHHHCCC\\nIIIIIINNNNNNNNTTTTTTTTTTAAAAAAAAAALLLLLLLLLLLJSSSSSSJJJJJEEEEEEJJJJIIIIIIIIIIIIIYYYYYYYYYYYYMMMMMMMNYYCCYCECCCCFFFZJJJJRRKKKRKKKHHHHHHHHHHCC\\nYIYIYYNNNNNNDDQTTTQQTTAAAAAAAAAAAALLLLLLLLLLLJVSSSSSSSSJJJJJJJJJJJJIIIIIIIIIIIIIYYYYYYYYYYYMMMMMMMMYYYYCYYCCCAAFFFZZZJJRKKKKRKKKHHHHHHHHHCCC\\nYYYYYYYYYNNNNNQQTQQQQTAAAAAAAAULLLLLLLLLLLLXLJVSSSSSSSJJJJJJJJJJJJJNNNNIIIIIIIIYYYYYYYYYYYMMMMMMMMMMYYYYYYCCCCCCFFFFJJJRKKKKKKKKHKHHHHHHHCCC\\nYYYYYYYYNNKKKWQQQQQQQTAAAAAAAAULLLLLLLLLLLLLLVVSSSSSSJJJJJJJJJJJNNNNNNNNIIIIIIIYYYYYYYYYGQQQQMMMMMMMYYYYYCCCCRRCFFFFFFJRKKKKKKKKKKKKHHRCCCCC\\nYYYYYYYYYNKKKKQQQRRRAAAAAAAAAAAAAAALLLLLLLLLVVSSSSSSSSSJJJJJJJJJNNNNNNNNIIIIIIIIIYYYYYGGGGQQQQMMMMMYYYYYYYYCCCRRFFFFFTTKKKKKKKKUKKKKHRRCCCCC\\nYYYYYYYYYYKKKKKKQQRRAAAAAAAAAAAAAAALLLLLLLLLVVVSSSSSSJJJJJJJJJJJNNNNNNNNNIIIIIIIIGYGYGGGGQQQQQMMMMYYYYYYYYYCCYFRFFKKKTKKKKKKKKKKKKKKKRRRCCCC\\nYYYYYYYYKKKKKKKQQRRRAAAAAAAAAAAAAAALLLLLLLXLXXSSSSSSSJJJJJJJJJJJJNNNNNNINIIIIIIIIGGGGGGGQQQQQQMMMYYYYYYYYYYYYYFFFFKKKKKKKKKKKKKKKKKRKKRRRCCC\\nYYYYYYYYKKKKKKKKPRRRRRWAAAAAAAAAAZZLLLLLLLXXXXSSSSSSMSJJSSJJJJJJJNNNNNNIIIIIIIIIIIGGGGGGGGGGQQGYYYYYYYYYYYYYYYFFFFFKKKKKKKKKKKKKKKKRRRRRRCCC\\nYYYYYIIYKKKKKKKPPRRRRAAAAAAAAARRAZZLLLLLLLXXXSSSSSSSSSSSSSJSJJJJNNNNNNNNIIIIIIIIIIGGGGGGGGGGQGGYYYYVVYYYYYYYYFFFFFFFKKKKKKKKKKKKRRKRRRRRRRRC\\nYYIIIIIYKKKKKKKPPRRRRRAAAAARRARAAAALCCLLLLXXXXSSSSSSESSSSSSSSSJJNNNNNNNNXXIIIIIIIIIGGGGGGGGGGGYYYYVVVVYVVYYYYKKKKKKKKKKSKKKKKKKKRRKRRRRRRCCC\\nIIIIIIIIIIIIKYRPRRRRRRAARARRRRRARACCCCLLLLXXXXSSTSSSSSSSSSSSSJJJJNNNNXXXXXXIIIIIIIIGGGGGGGGWWWWWWYVVVVVVVYKKKKKKKKKKKKKSKKKSSKSKRRRRRRRRRCCP\\nIIIIMIIIIIIIIRRRRRRRRRRRRRRRRRRRRGCCCGGLLLXXXXXTTSSSSSSSSSSSSJJJNNNNXXXXJJJJIIIIIIIGGGGGGGGWWWWWWYVVVVVVVVKKKKKKKKKKKKKSKKSSSSSSSRRRRRRRRCCP\\nIIIMMMIIIIIIRRRRRRRRRRRRRRRRRRRGGGCCCGGRRRQXQQXTSSSSSSSSSSSSSOOJJNXXXXXJJJJJIIIIIGGGGGGGGGGWWWWWWYVVVVVVVUKKKKKKKKKKKKKSKKSSSUSSRRRRRRRRRRPP\\nMMMMMMIIIIIIIIIRIRRRRRRRRRRRRRRGGGGGGGGRRQQQQYQQSSSSSSSSSSSSOOOCOOXXXXXXXJJJJIIIIIGGGGGGGGWWWWWWWQVVVVVVVVKKKKKKKKKKKKKSSSSSSSSRRRRRRRRRPPPP\\nMJJMMMMMIIIIIIIIIIIGRRRRRRRRRGGGGGGGGQRRQQQQQQQQQQSSSSSSSSOOOOOOOOXXXXXJJJJJAIIIIIIGGGGGGGGWWWWWWQVVVVVVVUKKKKKKKKKKKKKKKKKKSSRRRRRRRRRPPPPP\\nMMMMMMMMIIIIIIIIIIIGGRRRRRRRGGGGGGGGGQQQQQQQQQQQQQQSSSSSSSOOOOOOOOOXXXXJJJJJAIIIIIIIIVVVGGVWWWWWWVVVVVVVVVVZZKKKKKKKKKKKKKKKSSSRRRRRRRPPPPPP\\nUUUUMMMMIIIIIIIIIIGGGGGGGRRRGGGGGGGGGQQQQQQQQQQQQQSSSSSSSSOOOOOOOOXXXXXXJXXJAIIIIIAAIIVVVVVWWWWWWVVVVVVVVVVZZKKKKKKKKKKKKKKKDDSSDDRPRRPPPPPP\\nUUUMMMMMMMIIIIIIIIGGGGGGRRRGGGGGGGGGQQQQQQQQQQQQQQSSSSSSSSOOOOOOOXXXXXXXXXXXXRRIIIAAIIVVVVVWWWWWWVVVVVVVVVVZZKKKKKKKKKKKKKKKDDDPPDPPPPPPPPPP\\nUUUMMMMMMMMMIIIIIIIGRRGRRGRRGGGGGGGQQEQQQQQQQQQQQQQSSSSSSSOOOOOOOOOXXXXXXXXXXRAAAIAAVVVVVVVWWWWWWVVVVVVVVVVZZZZZZGKKKKKKKKKKDDDPPPPPPPPPPPPP\\nUUUMMMMMMMMMMMMIIIIGGGGGGGGGGGGGGGGQQGSQQQQQQQQQQQQSSSSSSSOOOOOOOOXXXXXXXXXXPAAAAAAAAVVVVVVWWWWWWVVVVVVVVVVZZZZGZZKKKKKKKKKKDDDDPPPPPPPPPPPP\\nUUUMVAMMMMMMMMMIIIIGGGGGGGGGGGGGGGGGGGQQQQQQQQQQQQQQQSSSSOOOOOOOOOOXXXXXXTXXPAAAAAAAVVAVVVVVVVVVVVVVVVVVVVVZZZGGGGKKKKKKKKKKDDPDPPPPPPPPPPPQ\\nUUUVVAMMMVVVMMMIIGGGGGGGGGGGGGGGGGGGGGGWQQQQQQQQQQQQQSSSSOOOOOOOOOVXXXUUTTTXPAAAAAAAAAAVVVVVVVVVVVVVVVVVVVVVGGGGGGKKKKKKKKKKDDPPPPPPPPPPPPPP\\nUUUVVAVMVVVVVMAAGGGGGGGGGGGGGGGGGGGGGGGWWWQQQQQQQQQQQSSSSOMOOOOOOOOOOXUUUUTTAAAAAAAAAAVVVVVVVVVVVVVVHVVVVVVVFGGGGGKKKKKKKKKKZDDPPPPPPPPPPPPV\\nUUUVVVVVVVVVVAAKKGGGGGGGGGGGGGGGGGGGGGGGWQQQQQQQQQQQQSSSSMMMMOMMOOOOXXXXUUUTAAAAAAAAAAAVVVVVVVVVVVCHHHHHHUUUHGGGGGGZZZZZZZZZZDPPPPVPPPPPVVPV\\nUUUUVVVVVVVVVVKKKKKTGGGGGGGGGMGGGGGGGGGQQQQQQQQBQQQIQSSSMMMMMMMMMMMOXXUUUUUUUAAAAAAAAAAAVVVVVVVVGHHHHHHHHUHHHHGGGGGZZZNZZZZZZZVVVVVPPPVPVVVV\\nUUVVVVVVVVVVKKKKKKKGGGGGGGGGGGGBBBBBGGQQQQQQQQQQQIIIQSIIMMMIMMMMMUUUUUUUUUUUSSSAAAAAAAAAWWVXVVVVGHHHHHHHHHHHHHGGGZZZZZZZZZZZZZZVVVVVPPVVVVVV\\nUUVVVVVVVVVVKKKKKKKKRGGGGGGGGBBBBBBBGGQQQQQQQQQQQIIIIIIIIIIIIMMMUUUUUUUUUUUUSSSSAAAAAAAAWVVVVVVLHHHHHHHHHHHHHGGGAZZZZZZZZZZZZZZVVVVVVVVVVVVV\\nMUUMVVMOOVVWWWKKKKKKRRGGGGGGGGBBBBBBBGQQQQQQQQQQQQIIIIIIIIIIMMMMUUUUUUUUUUUUUSSSSSAAAAAJVVVVVVLLHHHHHHHHHHHHGGGZZZZZZZZZZZZZZAAVVVVVVVVVVVVV\\nMUMMMMMMMMVWWKKKKKKKKGGBBBGGBBBBBBBQQQQQQQQQQQQQQQIIIIIIIIIMMMMMMUUUUUUUUUUUSSSSSSSAAAJJJVVLLLLLHHHHHHHHHHGGGGGZZZZZZZZZZZZUAAAAVVAVAAVVVVVV\\nMMMMMMMMMWWWWWKKXKKKUUGZBBBBBBBBBBBBBBBEQQQQQQQQQQQIIIIIIIIMMMMUUUUUUUUUUUUSSSSSSSSSSFFFFTVLLLLLLLZHXZHCHHHHGGGGGZZZZZZZZZZZAAAAAAAAAAVVVVVV\\nMMMMMMMMMMMWWWKXXXUUUUXZZBBBBBBBBBBBBBBBQQQQQQQQQQQIIBIIIIIMMMMUMUUUUUUUUUUSSSSSSSSSSFFFTTFFLLLLZLZZZZZCHGGHGGGGGGZZZZZZZZZAYYAAAAAAAAAVVVVV\\nMMMMMMMMMMMWWWXXXUUUXXXZZBBBBBBBBBBBBBBBQQQQQQBBBQBIIBIIMMMMMMMMMUUUUUUUUUUSSSSSSSFFFFFFFFFLLLLZZZZZZZZZZGGGGGGGGGZZZZZZZZAAYAAAAAAAMAVVVVVV\\nMZZZZZZZZMMMWWXXXUXXXXXBBBBBBBBBBBBBBBBBBBQQQQQQBBBIBBBMMMMMMMMMUUUUUUUUUUUUUSSSSLGFFFFFLLLLLLLLZZZZZZZZLGGGGGGGGGGZZZZZZZAAAAAAAAAAAAVAVVVV\\nAZZZZZZZZFFFXXXXXXXXXXXXBBBBBBBBBBBBBBBBBBBBEEBBBBBBBBMMMMMMMMMMUUUUUUUUUUUUUSHSSLLLFFFFFLLLLLLZZZZZZZZZLGQQGGGGGGGZZZZZZAAAAAAAAAAAAAAAAVVV\\nAZZZZZZZZZZZZXXXXXXXXXXXBBBBBBBBBBBBBBBBBBSEEEEEBBBBBBBMMBBMMMMMMUUUUUUUUUUUUUHHHSLLFPPFLLLLLLLZZZZZZZZZZQQGGGGGSSZZZGZZGAAAAAAAAAAAAAAAXVVV\\nAZZZZZZZZZZZZFFXXXXXXXXXBBBXBBXXXBBXXBBBXXEEEEEEEBBBBBGMBBBMMMMMUUUUUUUUTUUUUTHHHSLLPPPFLLLLLLZZZZZZZNNNNNNNNNNSSSZGZGGGGAGGGGAAAAAAAAAAAVVV\\nAZZZZZZZZZZZZXXXXXXXXXXXBBXXXBXXXXXXXBBXXAEEEEEEEBBBGGGGGBBMMBMMUUUUUUUUUUUUHHHHHHLLLLLFLLLUUUMZUZZZZNNNNNNNNNNSSSGGGGGGGGGGGGAAAAAAAAAAJJVV\\nAZZZZZZZZZZZZSSXXXXXXXXXXXXXXXXXXXXXXXXXAAEEEEEEEEBGGGGGGGBMBBMMGGGUUXUUUUUUHHHHLLLLLLLLLLUUUUUUUUHHZNNNNNNNNNNSGGGGGGGGGGGGGGAAAAAAAAAAAVVV\\nAZZZZZZZZZZZZSSHHHHXXXXXXGGGGXXGGXXXXXAAAAEEEEEEBBBGGGGGGGBBBBBMMMUUUUUUUWWUHPPHWLLLLLLLLLUUUUUUUUHHZNNNNNNNNNNSGGGGGGGGGGGGGGAAAAAAAAALVVVV\\nAZZZZZZZZZZZZSSHIHHHHHHHXXGGGGGGGGXXXXAAAAAEEEEEEGGGGGGGGGGBBBBBBUUUUUUUUWWUHHHHWWLLLLLLUUUUUUUUUUHHZNNNNNNNNNNYYGGGGGGGGGGGGGAYAAAAGAALVVVV\\nAZZZZZZZZZZZZZZZZHHHHHHXXGGGGGGGXXXXXAAAAAAEEEEEEGGGGGGGGCBBCBBBBBBUUUUUUTWWWHWWWWLLLLLLRUUUUUUUHHHHZNNNNNNNNNNYYYYGGGGGGGGGGGQYAAAAGALLVVVL\\nAZZZZZZZZZZZZZZZZIHHHHHGGGGGGGGGXGGXGAAAAAAAEKEEEGGGGGGGYCBBCCCBBBBUUUUUUTWWWWWXXWLLLLLLNNNNNNNNNNNNNNNNNNNNNNNYYXXXGGBBGGGGGGQQGGAAGAALLLLL\\nAZZZZZZZZZZZZZZZZZZZZZZZZGGGGGGGGGGGGAAAAAAAAAMMMMMGGGGGCCCCCCBBBBBAAAUUUTWWTWWWXXXOOOOVNNNNNNNNNNNNNNNNNNNNNNNYYXXXXXQBGGGGGGQAAGGGGGGLLLLL\\nAZZZZZZZZZZZZZZZZZZZZZZZZGGGGGGGGGGGGAAAAAAAAMMMGGGGGGCCCCCCCCBBBBBBBAUUUTWTTWXWXXVOOOOONNNNNNNNNNNNNNNNNNNNNNNNNXXXXXQGGQQGGQQAAGGGGAGGLLLL\\nAZZZZZZZZZZIIIIZZZZZZZZZZGGGGGGRRGGKGAAAAAAAAMMMGMGGTGVVCCCCCCCCBAAAAAAUUTTTTTXXXOVVOOOOOHUUUUHNNNNNNNNNNNNNNNNNNXXXXXQQQQQQGQAAAGGGGAGGLLLL\\nAZZZZZZZZZZIIIIZZZZZZZZZZGGGGGGRBBRKGAAAAAAAAAMMMMTTTGVVCCCCCCCCBBBAAAAUUTTTTTTXXOOOOOOOOOKUUUHNNNNNNNNNNNNNNNNNNXXXQQQQQQQQQQAAAGGGAALLLLLL\\nAAAAAAAACIIIIIIZZZZZZZZZZGGEGRRRRRRRAAAAAAAAAAMMMMMMTGGGCCCCCCCCBBBAAAATTTTTTTTTTOOOOOOOOKKKUPPPPHPHHHHHNNNNNNNNNXXQQQQQQQQQQQQAAAAAAAALLLLL\\nAAAAAAAAAQQIIIIZZZZZZZZZZGGEEERRRRRAAAAAAAAMMMMMMTMTTTTTCCCCCCCCCCBAAAAQQTTTTTTTOCOOOOOOOKKKPPPPPPPHHPHHNNNNNNNNNNNNQQQQQQQQQQQQQQAAAAAAAALL\\nAAAAAAAAAQQIIIIZZZZZZZZZZEEEEEERRMMAMMAAAPAMMMMMMTTTTTTTCCCCCCCCAAAAAAQQQTTTTTTTOOOOOOOOOKKPPPPPPPPPPPPLNNNNNNNNNNNNQQQQQQQQQQQQQQAAAAAAAAAA\\nAAAAAAAAAQQIIIIZZZZZZZZZZEEEEEERRMMMMMAAAAMMMMMTTTTTTTTTGCCCCCCCAIIAAATTTTTTTTTTOOOOOOOOOOOHPPPPPPPPPPPPPPNNNNNNNNNNQQQQQQQQQQQAQAAAAAAAAAAA\\nAAAAAAAQQQQQQIIZZZZZZZZZZEEEEEEEEMMMMMMAMMMMMMTTTTTTTTTTTTDDTIIIIIIAARTTTTTTTTTTOOOOOOOOOHHHPPPPPPPPPPPPPPXXXBBBBEBBGBBQBQBQQQQAQAAAAAAAAAAA\\nEAAGASSPQQQQQQIZZZZZZZZZZEEEEEEMMMMMDMMMMDMMMMMTTTTTTTTTTTTTTTIIIIAAARTTTTTTTTOOOOOOOOOOHHHPPPXPPPPPPXXXXXXXBBBBBBBBBBBBBBBQQQQAAAAAAAAAAAAA\\nEAAGPPSPPPPQQQQQQQEEEQQEEEEEEEEEMMDMDMMDDDDMMMMTTTTTTTTTTTTTTIIIIIIAITTTIITTTLLOOOOOOOOOYYYMMMPPPPPPPXXXXXXBBBBBBBBBBBBBBBBQQQQAAAAAAAAAAAAA\\nEPAPPPPPPPPPQQUQQQEEEEEEEEEEEEEMMMDDDDDDDDDMMMTTTTTTTTTTTTTTIIIIIIIIIIIIIITTTTLLOOLLYYOYYYYYYPPPPPPMPXXXXXXBBBBBBBBBBBBBBBQQQQQKAACCAAAXAAAA\\nPPSPPPPPPPPAUUUQQQEEEEEEEEEEEEEMMMMDDDDDDDDDTTTTHTTTTTTTTTTTIIPIIIIIIIIILIIILLLLLJLLLYYYYYYYPPNNPPPMXXXXXXXBBBBBBBBBBBBBBPPQQQQAACCCAAAAAAAA\\nPPPPPPPPPPPPUUUQEEETTEEEEEEEEEMMMMDDDDDDDDDDTUEPTTTTTTTTTTTTIIPPIPIPIIIILLILLLLLLLLLLLYYYYYYYPPPPPPXXXXXXXBBBBBBBBBBBBBBBBBQQQCCCCCCAACAAKKU\\nPPPPPPPPPUPUUUEEDEETTTEEEEEEEEMMMMMDDDDDDDDDNEEEKTTTTTTTTTTPPPPPPPPPIIIILLLLLLLLLLLLLLYYYYYYYMZPPZZZXXXXXXBBPPPBBBBBBBBBBNNPPPCCCCCCACCCKKKU\\nPPPPPPPPUUPUUEEEEEEEEEMEENXXEEMXMDDDDDDDDDDDDDEKKJTTTTWTTTTPPPPIIIIIIIIIIILLLLLLLLLLLLYYYYYQQYZZPZZZZZZXXXPPPPPPBBBBBBBBBNNNPPPPCCCCCCCCCCCC\\nPPPPPPPPPUUUUEEEEEEEEEEEEXXXXXXXXDDDDDDDDDDDDEEEJJVTTWWTTTPPPPPPPIIIIIIIIILLLLLLLLLLLLYYYYYYYYYZPZZZZZZZXZEPPEEPBBBBBNBBNNNNPPPPPPPCCCCCCCCC\\nPPPPPPPPUUUEEEEEEEEEEEEAAXXXXXXXXXDDDDDDDDDDDEEELJJJJWWTWTYYPPPPIIIIIIIIIQLLLKKLLLLLLLYYYYYYYYYZZZZZZZZZZZEEEEEEEBBNNNNNNNNNPPPPPPPCCCCCCCCC\\nPPPPPPPUUUUUUEEEEEEEEEEAAXXXXXXXMMDDDDDDDDDDDEEEJJJJWWWWWPPPHPPPPPIIIIIQQQQKKKKLLLYYYYYYYYYYYYYYZZZZZZZZZEEEEEEEEEBNFFNPPPPPPPPPPPPPPCCCCCCC\\nPPPPPPUUUUUUUEEEEEEEEEAAAXXXXXXXXXDDDDDDDDDDDEEEJJJJJJWWWPPPPPPPPPPPIIIIQQQQKKKKLEYYYYYYYYYYZZZZZZZZZZZZZZZZGEEEEAFFFFNPPPPPPPPPPPPPPPPCCCCC\\nPPPPPPJJUUUUUUUEEEEEEAAAAXXXXXXXXXBDDDDDDDDDEEJJJJJJWWWWWPPPPPPPPPPPPIIQQKQQKKKKBBYYYYYYYYFFZZZZRZZZZZZZZZZZZEEEFFFFFNNNPPPPPPPPPPPPPPPCCCCR\\nPPPPPRJJJJJUUUUEEEEEEEAAXXXXXXXXXXBDDDDIDDDEEEJJJEJJWWWWWPPPPPPPPPPPIIIIQKKQKBKKBBYYFFYYYYFZZZZZRRZZZZZZZHZZZHEFFFFFFFFPPPPPPPPPPPPPPPCCCCCR\\nKKPPPRRRJCCUUUUUEEEEEEAAXXXXXXXXXXXXDDDKWDDDEEJJJEJJWWWWWWWPPPPPFPPPPIDDKKKKKBBBBBYYYFYYYFFFZZZZZRZZZZZZZHZHHHHFFFFFFFFFPPPPPPJPPPPPPPPCCCRR\\nKKPPPGGGJJCUUUUUEEEEEEAXXXXXXKKKXXXXKJKKKEEEEEJJEEJJWWFWWWPPWPPPPPPPPIDDKKBBKBBBBBFFYFYYFFFFZZZZZRZZZYZHHHHHHHFFFFFFFFFFEQPPPPCPPPCPPCCCRCRR\\nKKPPGGGGJJCUUUUUEEUUUUXXXXXBBKOKKKKKKKKKEEEEEEEEEEFKFFFFWWPPWPPPPPPWDDDDKKBBBBBBBBFFFFYFFFFFZZOZZRZZZYHHYYHHHHCCCFFFFZFEEQQCCCCPCCCPCCCCRRRR\\nGGGGGGGGCCCCUUUUUEUUUUUUUUXBBKKKKKKKKKKKEEEEEEEEEEFFFFFFWWPWWPPPPPPWDDDKKKKBBBBBBBFFFFFFFFFFFZOZZHZZYYHYYYYYHHCCCCFFFOOEEQQQQQCCCCCCCCCCRFRR\\nNGGGGGGGCCCCOUUUUUUUUUUUUUXBBKKKKKKKKKKKEEEEEEEEEFFFFFFFWWWWWPWPPWWWDDDKKKKBBBBBBBBFBFFFFFFFFFHHHHYYYYYYYYYYCCCCCCCCOOOEQQQQQQCCCCCCCCFFFFFR\\nNGGGGGGGCCCCOOUUUUUUUUUUUBBBBBKKKKKKKKKKEEEEEEEEEFFFFFFWWWWWWWWPWWDDDDDDDKBBBBBBBBBBBBBFFFFFFFHHHHYYYYYYYYYYYCCCCCOOOOQQQQQQQQCCCCCCCFFBFFFF\\nGGGGGGGCCCOOOOOOUUUUUUUUUBBBBKKKKKKKKKKRKEEEEEEFFFFFFFFFFWWWWWWWWWWDDDDDKKBJBBBBBBBBBBFFFFFFFFFHHHYYYYYYYYYCCCCOOOOOOOQQQQQQQQQCCCCCFFFFFFFF\\nGGGGGGGCCCCOOOOOUUUUUUUUBBBBBKKKKKKKKKKKKEEEEEEFFFFFFFFFFWWWWWZZWTTDDDDDDKBBBBBBBBBBFFFFFFFFFFFFHHHYYOOOYYYCCCCCOOOOOQQQQQQQQGGCCCCCFFFFFFFF\\nGGGGGGGGGCCOOOOOOOOOUBUUUBBBBBBKKKKKKKKKKEEEEFFFFFFFFFFFFZZZZZZZTTTTDDDDBBBBBBBBBBBFFFFFFFFFFFFHHHHHHHHHCCCCCOOOOOOOOQQQQQQQQGCCCCCCFFFFFFFF\\nZGIGGIJGCCCOOOOOOOOOBBUBBBBOBBKKKKKKKKKKKEEEEEFFFFFFFFFFFZZZZZZZTTTTDTDWWBWBBBBBBBFFFFFFFFFFFFFSFHHHHHHHHDCCCOOOOOOOOQQQFFQQQQACCCCCCPPFFFFP\\nIIIIIIIICCOOOOOOOOOOBBBBOBOOOKKKKKKKKKKKKEEEEEFFFFFFFFFFZZZZZZZTTTTTTTWWWWWBBFBBBBFFFFFFFFFFFFFFFHHHHHHBHCCCAAAOOOOOOOOOQQQQQQCCCCCCCCPPPPPP\\nIIIIIIICCCOOOOOOOOOOOBBIOBBOOOOXKKKKKKKKKKEEEFFFFFFFFFFKZZZZZZZPPPTTTTTWWWWWBFBBBBFFFFFFFFFFFFFHHHHHHHHHHCCCCCOOOOOOOOOOOQQQQACCCCCSCCPPPPPP\\nIIIIIIICCCOOOOOOOIOIIBIIOOOOOOOXKKKKKKKKKKEEEFFFFBBFFFFFZZZZZZZZPPTPTPTWWWWWFFFFBFJJFFFFFFFFFFFHHHHHHHHHHHCWWMOOOOOOOOOOOQQAAACCCYCCCPPPPPPP\\nIIIIIIICCCCOOOOOIIIIIIIIIOOOOOOOKKKKKKKKKKEEEFFFFFBBBFBZTZZZZZZJPPPPPPPWWWFWFFFFFFFFFFFFFFFFFFFFFFHHHHXHHWWWMMMOOOOOOOOOOOCACACCCYCCPPPPPPPP\\nIIIIIIIICCOOOOOIIIIIIIIIIOOOOOOKKMKKHKHKKKKKEFEZFFBBBFBZZZZZZZZPPPPPPPPPPWFFFFFFFFFFFFFFFFFFFFFFFFHHHXXXXWWMMMMMOOOOOOOOOOCCCCCCCCCPPPPPPPPP\\nIIIIIIICCCCOOIIIIIIIIIIIIOOOOOOOOHHHHHHHHHHHEEEBBBBBBBBZZZQQZQQPPPPPPPPPPWSFFFFFFFFFFFFFFFFFFFFFPHHHHHXWWWWWWQMMMOOOOOOORRCCCCCCCCCPPPPPPPPP\\nIIIIICCCCCCCIIIIIIIIIIIIIIOOOOOOHHHHHHHHHHHHHEEBBBUUUUUUQQQQZQPPPPPPPPPPSWSFFFFFFFFFHFFFFFFFFFFFPHHHHXXWWWWYQQQQMOOOOOOYCCCCCCCCCCCCCPPPPPPP\\nIIIIIIIICCCCIIIIIIIIIIIIIIOOOOOOHHHHHHHHHHHQQQBBBBUUUUUUQQSQQQPPPPPPPPPPSSSFFFFFFFFFFFPPFPPFPPFFPPPPWWWWWYYYQQBQMOOOOOOOOPPCCCCCCCCCCCCCCPCC\\nIQIIIIIICCCCCIIIIIIIIIIIIOOOOOOHHHHHHHHHHHRQQQQBBBUUUUUUSSSSSSAPPPPPPPPPSSJFFFFFFFFFFFPPPPPPPPPPPPPPPPWPPPYYYQQYYLOOOOOOPPPPCCCCCCCCCCCCCCCC\\nQQIIIIICCCCCCCIIIIIIIIIIIICOOOOHHHHHHHHRRRRQQQQBBBUUUUUUSSSSSSPPPPPPPPSPSSJFSPPPFFFFFFPPPPPPPPPPPPPPPPPPPPPYYYYYYLPPPPPOPPPPCCCECCCCCCCCCCCC\\nIIIIICCCCCCCCCIIIIIIIIIIIICCOOHHHHHHHHHRRRRQQQQBBBUUUUUUSSSSSSSPSSPPPSSSSSSSSCPPFFFFFFPPPPPPPPPPPPPPPPPPPPYYYYYYUYPPPPPPPPPPPPEEECCCCCCCOOCC\\nIIIICCCCRRRRRRIIIIIIICCCIICCOOOHQQHHHHHHRRRRRRRBBBUUUUUUUUUSSSSSSSSSPSSSSSSSHHGPFFFFFFPPPJPPPPPJPPPPPPPYYYYYYYYYYYHPPPPPPPPPPEEEEEECCCOOOOOV\\nCICCCCCRRRRRRRIIMIIIIICCCCCCCOQHQQQHHRHRRRRRRRBBBBBBUUUUUUUSSSSSSSSSSSSSSSSHHHFFFFFFFFPJPJPJJJJJJPPPPPPYYYYYYYYYNPPPPPPPPPPEEEEEEEECOCOOOOOO\\nCICCCCCRRRCRRIRIMMIIVVCCCCCCCOQQQQQHHRRRRRRRRRNBBBBUUUUUUUUSSSSSSSSSSSSSSSSHHHHFFFFFFFJJPJJJJJJJJPPPTTTTYYYYYYYYYPPFPPPPPPPPPEEEEEEEOOOOOOOO\\nCCCCRRRRRRRRRRRRRMIVVCCCCICJCQQQQQQRRRRRRRRRRRNRBBBUUUUUUUUUUUUUUSSSSSSSSSSHHHHFFFFFMMJJPJJJJJJJPPPPTTTTYYYYYYYYYFFFFPPPPPPPPEETEEEOOOOOOOOO\\nCCCCRRRRRRRRRRRRRRVVVCCCCQQQQQQQQQQQRRRRRRRRRRNRRBBUUUUUUUUUUUUUUSSSSSSSSHHHHHHFFFFFMMJJJJJJJJJJPPTTTTTTTZYYYYYYYFFFPPQPPPPPPEOOOOOOOOOOOOOO\\nCCCCRRRRRRRRRRRRRRRVVVVVQQQQQQQQQQQQRRRRRRRRRRRRCCCBCUUUUUUUUUUUUSSSSSSSSHHHHHHFFFFMMMJJJJJJJJJJJPTTTTTTTZYQYFYYFFFFPQQQQQQPPOOOOOOOOOOOOOOO\\nCCCCRRRRRRRRRRRRRRVVVVVVQVQQQQQQQQQQQRRRRRRRRRRRCCCCCCUUUUUUUUUUUSSSSSSSHHHHHHHHHFFJJJJJJJJJJJJJTTTTTTTTTTTTFFFFFFFFQQQQQQPPPOOOOOOOOOOOOOOO\\nCCCCRRRRRRRRRRRRRRVRVVVVQQQQQQQQQQQQQRRRRRRRRRRRRCCCCCUUUUUUUUUUUSCTTCSHHHHHHHHHHFUJJJJJJJJJJJJJTWTTTTTTTTFFFFFFFQQQQQQQPIPPPDOOOOOOOOOOOOOO\\nCCCCCCRRRRRRRRRRRRRRVVVVQQQQQQQQQQQQQRRRRRRRRRRRRRCCCCCCUUUUUUUUUCCCTCHHHHHHHHHHHFUUJVJJJJWJJJJJFTTTTFTTTTFFFFFFFQQQQQQPPPPPPDOZOOKOOOOOOOOO\\nCCCCCCRRRRCRRRRRRVRVVVVVVVQQQQQQQQQQQRRRRRRRRRRRRRRRCCCCUUUUUUUUUCCCCCHHHHHHHHHHHFUUJJJJJJJJJJJJFFFFFFTTTFFFFFFFFFQFQQFPPPPKKKZZZZOOOOOOOOOO\\nCCCCCRRCCRCCRRRRRVVVVVVVVVVVQQQQQQQQQRRRRRRRRRRRRRRCCCCCUUUUUUUUUCCCOOHHHWWHHHUUUUUUJUUUUUJJJJJJFFFFFFTTFFFFFFFFFFQFFQFFKKKKKKKZZOOHHOOOOOOO\\nCCCCCCCCCCCCRWWRRVVVVVVVVVVVQQQQQQQQQRRRRRRRRRRRRRCCCCCCUUUUUUUUUCCCOHHHHWHHHHHUUUUUUUUUUUUJJUJJJFFFFFFFFFFFFFFFFFFFFFFFKQKKKKZZZZZOOOFOOOOO\"","export default \"Button A: X+94, Y+34\\nButton B: X+22, Y+67\\nPrize: X=8400, Y=5400\\n\\nButton A: X+26, Y+66\\nButton B: X+67, Y+21\\nPrize: X=12748, Y=12176\\n\\nButton A: X+17, Y+86\\nButton B: X+84, Y+37\\nPrize: X=7870, Y=6450\\n\\nButton A: X+69, Y+23\\nButton B: X+27, Y+71\\nPrize: X=18641, Y=10279\"","export default \"Button A: X+79, Y+26\\nButton B: X+61, Y+99\\nPrize: X=7544, Y=9586\\n\\nButton A: X+14, Y+42\\nButton B: X+29, Y+17\\nPrize: X=10404, Y=2252\\n\\nButton A: X+13, Y+42\\nButton B: X+71, Y+29\\nPrize: X=6289, Y=6091\\n\\nButton A: X+62, Y+24\\nButton B: X+17, Y+64\\nPrize: X=4947, Y=9224\\n\\nButton A: X+44, Y+15\\nButton B: X+75, Y+89\\nPrize: X=9101, Y=7860\\n\\nButton A: X+13, Y+48\\nButton B: X+70, Y+26\\nPrize: X=2261, Y=7246\\n\\nButton A: X+18, Y+27\\nButton B: X+67, Y+25\\nPrize: X=5772, Y=2316\\n\\nButton A: X+47, Y+15\\nButton B: X+19, Y+72\\nPrize: X=5516, Y=11333\\n\\nButton A: X+17, Y+11\\nButton B: X+15, Y+43\\nPrize: X=5371, Y=14835\\n\\nButton A: X+17, Y+74\\nButton B: X+77, Y+11\\nPrize: X=11297, Y=11282\\n\\nButton A: X+94, Y+21\\nButton B: X+35, Y+90\\nPrize: X=11019, Y=7146\\n\\nButton A: X+62, Y+60\\nButton B: X+77, Y+14\\nPrize: X=5942, Y=4540\\n\\nButton A: X+54, Y+99\\nButton B: X+51, Y+24\\nPrize: X=3273, Y=3012\\n\\nButton A: X+55, Y+97\\nButton B: X+49, Y+24\\nPrize: X=4073, Y=5498\\n\\nButton A: X+33, Y+52\\nButton B: X+43, Y+12\\nPrize: X=14969, Y=6036\\n\\nButton A: X+92, Y+35\\nButton B: X+40, Y+87\\nPrize: X=10804, Y=7484\\n\\nButton A: X+17, Y+32\\nButton B: X+58, Y+29\\nPrize: X=2516, Y=3373\\n\\nButton A: X+42, Y+11\\nButton B: X+14, Y+35\\nPrize: X=7046, Y=13019\\n\\nButton A: X+14, Y+74\\nButton B: X+57, Y+11\\nPrize: X=3609, Y=3691\\n\\nButton A: X+27, Y+15\\nButton B: X+17, Y+96\\nPrize: X=963, Y=1314\\n\\nButton A: X+36, Y+11\\nButton B: X+12, Y+27\\nPrize: X=8168, Y=14068\\n\\nButton A: X+63, Y+16\\nButton B: X+11, Y+54\\nPrize: X=11445, Y=2472\\n\\nButton A: X+35, Y+98\\nButton B: X+57, Y+20\\nPrize: X=4926, Y=9186\\n\\nButton A: X+68, Y+30\\nButton B: X+11, Y+71\\nPrize: X=4881, Y=2881\\n\\nButton A: X+85, Y+83\\nButton B: X+54, Y+11\\nPrize: X=6646, Y=3193\\n\\nButton A: X+73, Y+16\\nButton B: X+20, Y+72\\nPrize: X=5556, Y=15000\\n\\nButton A: X+14, Y+64\\nButton B: X+80, Y+26\\nPrize: X=6090, Y=19498\\n\\nButton A: X+17, Y+78\\nButton B: X+73, Y+15\\nPrize: X=3809, Y=17741\\n\\nButton A: X+30, Y+11\\nButton B: X+43, Y+67\\nPrize: X=14802, Y=16661\\n\\nButton A: X+17, Y+53\\nButton B: X+71, Y+33\\nPrize: X=17282, Y=3940\\n\\nButton A: X+28, Y+53\\nButton B: X+45, Y+12\\nPrize: X=6300, Y=8182\\n\\nButton A: X+12, Y+88\\nButton B: X+39, Y+43\\nPrize: X=2142, Y=3558\\n\\nButton A: X+61, Y+25\\nButton B: X+14, Y+58\\nPrize: X=7361, Y=4313\\n\\nButton A: X+82, Y+43\\nButton B: X+12, Y+43\\nPrize: X=1774, Y=3096\\n\\nButton A: X+83, Y+41\\nButton B: X+11, Y+39\\nPrize: X=15983, Y=15843\\n\\nButton A: X+68, Y+30\\nButton B: X+14, Y+39\\nPrize: X=5810, Y=4193\\n\\nButton A: X+56, Y+25\\nButton B: X+21, Y+40\\nPrize: X=9160, Y=13745\\n\\nButton A: X+11, Y+44\\nButton B: X+64, Y+33\\nPrize: X=17901, Y=18767\\n\\nButton A: X+48, Y+13\\nButton B: X+36, Y+65\\nPrize: X=9032, Y=11066\\n\\nButton A: X+72, Y+25\\nButton B: X+12, Y+41\\nPrize: X=12560, Y=5088\\n\\nButton A: X+82, Y+46\\nButton B: X+11, Y+48\\nPrize: X=6595, Y=3090\\n\\nButton A: X+16, Y+60\\nButton B: X+77, Y+36\\nPrize: X=16811, Y=16532\\n\\nButton A: X+88, Y+49\\nButton B: X+46, Y+81\\nPrize: X=3240, Y=3798\\n\\nButton A: X+82, Y+33\\nButton B: X+52, Y+95\\nPrize: X=2760, Y=3407\\n\\nButton A: X+37, Y+71\\nButton B: X+52, Y+11\\nPrize: X=8171, Y=3428\\n\\nButton A: X+63, Y+23\\nButton B: X+13, Y+28\\nPrize: X=18763, Y=16893\\n\\nButton A: X+66, Y+99\\nButton B: X+85, Y+13\\nPrize: X=11532, Y=9054\\n\\nButton A: X+44, Y+75\\nButton B: X+35, Y+14\\nPrize: X=12765, Y=7417\\n\\nButton A: X+65, Y+28\\nButton B: X+13, Y+38\\nPrize: X=14706, Y=4720\\n\\nButton A: X+14, Y+71\\nButton B: X+77, Y+40\\nPrize: X=2072, Y=3498\\n\\nButton A: X+79, Y+67\\nButton B: X+16, Y+81\\nPrize: X=7060, Y=10438\\n\\nButton A: X+60, Y+24\\nButton B: X+22, Y+61\\nPrize: X=12672, Y=14484\\n\\nButton A: X+25, Y+11\\nButton B: X+49, Y+71\\nPrize: X=4140, Y=4788\\n\\nButton A: X+38, Y+16\\nButton B: X+43, Y+61\\nPrize: X=7545, Y=19375\\n\\nButton A: X+84, Y+40\\nButton B: X+19, Y+96\\nPrize: X=5965, Y=5536\\n\\nButton A: X+73, Y+26\\nButton B: X+12, Y+67\\nPrize: X=13737, Y=1939\\n\\nButton A: X+34, Y+41\\nButton B: X+11, Y+97\\nPrize: X=2298, Y=6288\\n\\nButton A: X+61, Y+24\\nButton B: X+12, Y+64\\nPrize: X=4802, Y=13712\\n\\nButton A: X+13, Y+31\\nButton B: X+61, Y+20\\nPrize: X=6184, Y=16632\\n\\nButton A: X+30, Y+12\\nButton B: X+58, Y+74\\nPrize: X=8310, Y=8380\\n\\nButton A: X+11, Y+49\\nButton B: X+53, Y+20\\nPrize: X=5924, Y=17968\\n\\nButton A: X+16, Y+47\\nButton B: X+37, Y+19\\nPrize: X=2190, Y=3425\\n\\nButton A: X+15, Y+71\\nButton B: X+95, Y+58\\nPrize: X=10390, Y=10796\\n\\nButton A: X+16, Y+63\\nButton B: X+78, Y+14\\nPrize: X=9150, Y=17035\\n\\nButton A: X+88, Y+24\\nButton B: X+64, Y+76\\nPrize: X=7360, Y=4876\\n\\nButton A: X+77, Y+53\\nButton B: X+38, Y+98\\nPrize: X=3127, Y=6463\\n\\nButton A: X+12, Y+39\\nButton B: X+71, Y+37\\nPrize: X=15142, Y=12024\\n\\nButton A: X+50, Y+11\\nButton B: X+21, Y+61\\nPrize: X=843, Y=2046\\n\\nButton A: X+60, Y+33\\nButton B: X+28, Y+56\\nPrize: X=3096, Y=4681\\n\\nButton A: X+37, Y+12\\nButton B: X+35, Y+71\\nPrize: X=929, Y=13048\\n\\nButton A: X+64, Y+14\\nButton B: X+11, Y+38\\nPrize: X=337, Y=7186\\n\\nButton A: X+16, Y+85\\nButton B: X+43, Y+26\\nPrize: X=4955, Y=9926\\n\\nButton A: X+58, Y+63\\nButton B: X+15, Y+91\\nPrize: X=3982, Y=10003\\n\\nButton A: X+59, Y+19\\nButton B: X+31, Y+67\\nPrize: X=14822, Y=6354\\n\\nButton A: X+99, Y+97\\nButton B: X+25, Y+94\\nPrize: X=9667, Y=13503\\n\\nButton A: X+15, Y+68\\nButton B: X+54, Y+22\\nPrize: X=4800, Y=5050\\n\\nButton A: X+24, Y+49\\nButton B: X+59, Y+31\\nPrize: X=6645, Y=19358\\n\\nButton A: X+51, Y+13\\nButton B: X+13, Y+68\\nPrize: X=9050, Y=17488\\n\\nButton A: X+32, Y+12\\nButton B: X+39, Y+74\\nPrize: X=18255, Y=11730\\n\\nButton A: X+39, Y+12\\nButton B: X+17, Y+28\\nPrize: X=3992, Y=1456\\n\\nButton A: X+22, Y+95\\nButton B: X+53, Y+12\\nPrize: X=6047, Y=10281\\n\\nButton A: X+19, Y+92\\nButton B: X+73, Y+74\\nPrize: X=2432, Y=6466\\n\\nButton A: X+11, Y+27\\nButton B: X+45, Y+11\\nPrize: X=11911, Y=12225\\n\\nButton A: X+16, Y+78\\nButton B: X+81, Y+21\\nPrize: X=5430, Y=19640\\n\\nButton A: X+49, Y+18\\nButton B: X+36, Y+58\\nPrize: X=1846, Y=8732\\n\\nButton A: X+26, Y+53\\nButton B: X+57, Y+30\\nPrize: X=2553, Y=1743\\n\\nButton A: X+83, Y+25\\nButton B: X+52, Y+69\\nPrize: X=6651, Y=6697\\n\\nButton A: X+51, Y+30\\nButton B: X+12, Y+25\\nPrize: X=11357, Y=13995\\n\\nButton A: X+64, Y+84\\nButton B: X+56, Y+20\\nPrize: X=4376, Y=5048\\n\\nButton A: X+31, Y+57\\nButton B: X+51, Y+17\\nPrize: X=6682, Y=5914\\n\\nButton A: X+77, Y+20\\nButton B: X+89, Y+97\\nPrize: X=1850, Y=1441\\n\\nButton A: X+24, Y+61\\nButton B: X+61, Y+23\\nPrize: X=16107, Y=12476\\n\\nButton A: X+31, Y+65\\nButton B: X+42, Y+13\\nPrize: X=6535, Y=8362\\n\\nButton A: X+52, Y+11\\nButton B: X+35, Y+63\\nPrize: X=7388, Y=5121\\n\\nButton A: X+67, Y+11\\nButton B: X+63, Y+99\\nPrize: X=4175, Y=4675\\n\\nButton A: X+43, Y+85\\nButton B: X+48, Y+11\\nPrize: X=16795, Y=16138\\n\\nButton A: X+75, Y+12\\nButton B: X+56, Y+77\\nPrize: X=6374, Y=6395\\n\\nButton A: X+12, Y+50\\nButton B: X+78, Y+30\\nPrize: X=3494, Y=3750\\n\\nButton A: X+47, Y+37\\nButton B: X+24, Y+89\\nPrize: X=5854, Y=11549\\n\\nButton A: X+65, Y+20\\nButton B: X+30, Y+46\\nPrize: X=2385, Y=1984\\n\\nButton A: X+76, Y+25\\nButton B: X+15, Y+54\\nPrize: X=2142, Y=8934\\n\\nButton A: X+92, Y+15\\nButton B: X+38, Y+78\\nPrize: X=6570, Y=7749\\n\\nButton A: X+24, Y+80\\nButton B: X+70, Y+11\\nPrize: X=4154, Y=6261\\n\\nButton A: X+38, Y+43\\nButton B: X+80, Y+12\\nPrize: X=8514, Y=2881\\n\\nButton A: X+17, Y+34\\nButton B: X+53, Y+12\\nPrize: X=2274, Y=4774\\n\\nButton A: X+16, Y+60\\nButton B: X+74, Y+25\\nPrize: X=7284, Y=4590\\n\\nButton A: X+11, Y+30\\nButton B: X+50, Y+31\\nPrize: X=6247, Y=1497\\n\\nButton A: X+16, Y+54\\nButton B: X+74, Y+17\\nPrize: X=15282, Y=12831\\n\\nButton A: X+31, Y+60\\nButton B: X+43, Y+22\\nPrize: X=4686, Y=3192\\n\\nButton A: X+72, Y+29\\nButton B: X+20, Y+56\\nPrize: X=696, Y=568\\n\\nButton A: X+13, Y+43\\nButton B: X+79, Y+38\\nPrize: X=12295, Y=2599\\n\\nButton A: X+16, Y+70\\nButton B: X+73, Y+13\\nPrize: X=19079, Y=12407\\n\\nButton A: X+29, Y+61\\nButton B: X+63, Y+30\\nPrize: X=1067, Y=12482\\n\\nButton A: X+55, Y+30\\nButton B: X+11, Y+23\\nPrize: X=6843, Y=4304\\n\\nButton A: X+51, Y+21\\nButton B: X+29, Y+53\\nPrize: X=4813, Y=19321\\n\\nButton A: X+12, Y+35\\nButton B: X+83, Y+48\\nPrize: X=5641, Y=5002\\n\\nButton A: X+34, Y+15\\nButton B: X+18, Y+51\\nPrize: X=2022, Y=2313\\n\\nButton A: X+96, Y+14\\nButton B: X+21, Y+93\\nPrize: X=5553, Y=1979\\n\\nButton A: X+24, Y+51\\nButton B: X+70, Y+44\\nPrize: X=3858, Y=5275\\n\\nButton A: X+51, Y+84\\nButton B: X+47, Y+16\\nPrize: X=1905, Y=1848\\n\\nButton A: X+49, Y+16\\nButton B: X+22, Y+69\\nPrize: X=2403, Y=1341\\n\\nButton A: X+68, Y+12\\nButton B: X+11, Y+84\\nPrize: X=14490, Y=11660\\n\\nButton A: X+19, Y+48\\nButton B: X+40, Y+23\\nPrize: X=14088, Y=1658\\n\\nButton A: X+94, Y+25\\nButton B: X+34, Y+77\\nPrize: X=8474, Y=3409\\n\\nButton A: X+12, Y+91\\nButton B: X+57, Y+25\\nPrize: X=1482, Y=7166\\n\\nButton A: X+57, Y+29\\nButton B: X+22, Y+42\\nPrize: X=7941, Y=6373\\n\\nButton A: X+35, Y+75\\nButton B: X+76, Y+21\\nPrize: X=6669, Y=8049\\n\\nButton A: X+68, Y+39\\nButton B: X+11, Y+37\\nPrize: X=816, Y=10769\\n\\nButton A: X+88, Y+18\\nButton B: X+25, Y+63\\nPrize: X=3374, Y=3816\\n\\nButton A: X+59, Y+99\\nButton B: X+99, Y+20\\nPrize: X=8385, Y=8225\\n\\nButton A: X+72, Y+38\\nButton B: X+11, Y+73\\nPrize: X=5417, Y=7361\\n\\nButton A: X+55, Y+25\\nButton B: X+25, Y+48\\nPrize: X=3490, Y=4444\\n\\nButton A: X+51, Y+18\\nButton B: X+11, Y+60\\nPrize: X=8601, Y=7328\\n\\nButton A: X+39, Y+80\\nButton B: X+49, Y+16\\nPrize: X=14134, Y=18048\\n\\nButton A: X+11, Y+35\\nButton B: X+68, Y+16\\nPrize: X=13551, Y=18687\\n\\nButton A: X+16, Y+38\\nButton B: X+57, Y+29\\nPrize: X=14197, Y=4793\\n\\nButton A: X+93, Y+18\\nButton B: X+29, Y+40\\nPrize: X=4959, Y=3642\\n\\nButton A: X+13, Y+45\\nButton B: X+64, Y+21\\nPrize: X=4904, Y=18254\\n\\nButton A: X+14, Y+25\\nButton B: X+23, Y+11\\nPrize: X=19135, Y=10219\\n\\nButton A: X+13, Y+42\\nButton B: X+57, Y+34\\nPrize: X=13251, Y=6998\\n\\nButton A: X+33, Y+70\\nButton B: X+90, Y+31\\nPrize: X=8517, Y=6393\\n\\nButton A: X+56, Y+23\\nButton B: X+14, Y+30\\nPrize: X=5380, Y=13846\\n\\nButton A: X+21, Y+84\\nButton B: X+96, Y+46\\nPrize: X=2790, Y=7104\\n\\nButton A: X+13, Y+80\\nButton B: X+72, Y+11\\nPrize: X=17096, Y=16347\\n\\nButton A: X+81, Y+24\\nButton B: X+14, Y+61\\nPrize: X=17781, Y=12394\\n\\nButton A: X+45, Y+17\\nButton B: X+36, Y+73\\nPrize: X=18548, Y=17739\\n\\nButton A: X+21, Y+66\\nButton B: X+85, Y+11\\nPrize: X=2277, Y=4851\\n\\nButton A: X+18, Y+99\\nButton B: X+74, Y+36\\nPrize: X=4656, Y=3348\\n\\nButton A: X+65, Y+98\\nButton B: X+92, Y+31\\nPrize: X=8597, Y=6930\\n\\nButton A: X+14, Y+57\\nButton B: X+81, Y+37\\nPrize: X=19567, Y=13477\\n\\nButton A: X+54, Y+16\\nButton B: X+12, Y+73\\nPrize: X=3444, Y=3451\\n\\nButton A: X+22, Y+89\\nButton B: X+26, Y+24\\nPrize: X=1790, Y=5293\\n\\nButton A: X+47, Y+17\\nButton B: X+31, Y+57\\nPrize: X=11850, Y=17566\\n\\nButton A: X+27, Y+96\\nButton B: X+97, Y+69\\nPrize: X=4487, Y=7953\\n\\nButton A: X+41, Y+53\\nButton B: X+89, Y+17\\nPrize: X=11105, Y=5825\\n\\nButton A: X+71, Y+49\\nButton B: X+11, Y+94\\nPrize: X=2508, Y=9162\\n\\nButton A: X+53, Y+36\\nButton B: X+11, Y+38\\nPrize: X=10288, Y=2718\\n\\nButton A: X+83, Y+29\\nButton B: X+13, Y+57\\nPrize: X=9843, Y=17143\\n\\nButton A: X+18, Y+49\\nButton B: X+40, Y+17\\nPrize: X=8472, Y=10274\\n\\nButton A: X+15, Y+55\\nButton B: X+75, Y+34\\nPrize: X=6215, Y=9604\\n\\nButton A: X+30, Y+58\\nButton B: X+52, Y+19\\nPrize: X=5712, Y=17904\\n\\nButton A: X+36, Y+84\\nButton B: X+46, Y+28\\nPrize: X=3040, Y=5824\\n\\nButton A: X+26, Y+11\\nButton B: X+21, Y+32\\nPrize: X=10596, Y=7065\\n\\nButton A: X+70, Y+31\\nButton B: X+11, Y+36\\nPrize: X=8534, Y=8904\\n\\nButton A: X+95, Y+19\\nButton B: X+44, Y+75\\nPrize: X=3640, Y=1059\\n\\nButton A: X+29, Y+67\\nButton B: X+68, Y+27\\nPrize: X=8255, Y=7883\\n\\nButton A: X+84, Y+33\\nButton B: X+25, Y+84\\nPrize: X=4049, Y=4632\\n\\nButton A: X+17, Y+78\\nButton B: X+51, Y+15\\nPrize: X=3621, Y=3036\\n\\nButton A: X+82, Y+25\\nButton B: X+13, Y+67\\nPrize: X=4537, Y=14506\\n\\nButton A: X+28, Y+16\\nButton B: X+23, Y+67\\nPrize: X=3341, Y=4225\\n\\nButton A: X+62, Y+41\\nButton B: X+17, Y+36\\nPrize: X=18861, Y=723\\n\\nButton A: X+70, Y+25\\nButton B: X+26, Y+73\\nPrize: X=16688, Y=16884\\n\\nButton A: X+85, Y+92\\nButton B: X+48, Y+14\\nPrize: X=909, Y=870\\n\\nButton A: X+29, Y+74\\nButton B: X+50, Y+11\\nPrize: X=18891, Y=8058\\n\\nButton A: X+23, Y+63\\nButton B: X+50, Y+18\\nPrize: X=5056, Y=3024\\n\\nButton A: X+29, Y+43\\nButton B: X+40, Y+19\\nPrize: X=10544, Y=716\\n\\nButton A: X+46, Y+96\\nButton B: X+86, Y+46\\nPrize: X=9694, Y=7684\\n\\nButton A: X+75, Y+70\\nButton B: X+49, Y+11\\nPrize: X=9283, Y=6337\\n\\nButton A: X+25, Y+11\\nButton B: X+27, Y+52\\nPrize: X=638, Y=1043\\n\\nButton A: X+15, Y+56\\nButton B: X+47, Y+15\\nPrize: X=18007, Y=16959\\n\\nButton A: X+61, Y+25\\nButton B: X+24, Y+67\\nPrize: X=15079, Y=1237\\n\\nButton A: X+56, Y+11\\nButton B: X+17, Y+40\\nPrize: X=17394, Y=17724\\n\\nButton A: X+30, Y+68\\nButton B: X+33, Y+13\\nPrize: X=9923, Y=5571\\n\\nButton A: X+61, Y+39\\nButton B: X+12, Y+43\\nPrize: X=15896, Y=13259\\n\\nButton A: X+26, Y+51\\nButton B: X+39, Y+17\\nPrize: X=5723, Y=12807\\n\\nButton A: X+59, Y+17\\nButton B: X+85, Y+93\\nPrize: X=8930, Y=6204\\n\\nButton A: X+99, Y+42\\nButton B: X+30, Y+40\\nPrize: X=7461, Y=3738\\n\\nButton A: X+65, Y+30\\nButton B: X+13, Y+29\\nPrize: X=3643, Y=11834\\n\\nButton A: X+13, Y+93\\nButton B: X+86, Y+30\\nPrize: X=1633, Y=3489\\n\\nButton A: X+70, Y+38\\nButton B: X+17, Y+37\\nPrize: X=8175, Y=1579\\n\\nButton A: X+24, Y+47\\nButton B: X+87, Y+38\\nPrize: X=8892, Y=6294\\n\\nButton A: X+25, Y+67\\nButton B: X+64, Y+13\\nPrize: X=4549, Y=5692\\n\\nButton A: X+71, Y+39\\nButton B: X+22, Y+67\\nPrize: X=6883, Y=6252\\n\\nButton A: X+32, Y+66\\nButton B: X+85, Y+26\\nPrize: X=3078, Y=4258\\n\\nButton A: X+21, Y+64\\nButton B: X+31, Y+13\\nPrize: X=19329, Y=2923\\n\\nButton A: X+34, Y+73\\nButton B: X+57, Y+20\\nPrize: X=14763, Y=4648\\n\\nButton A: X+97, Y+29\\nButton B: X+82, Y+89\\nPrize: X=3610, Y=2240\\n\\nButton A: X+65, Y+44\\nButton B: X+15, Y+34\\nPrize: X=6290, Y=9534\\n\\nButton A: X+89, Y+46\\nButton B: X+22, Y+51\\nPrize: X=9045, Y=6379\\n\\nButton A: X+52, Y+32\\nButton B: X+26, Y+54\\nPrize: X=19230, Y=13894\\n\\nButton A: X+12, Y+75\\nButton B: X+79, Y+11\\nPrize: X=11466, Y=10336\\n\\nButton A: X+12, Y+49\\nButton B: X+56, Y+14\\nPrize: X=13172, Y=7347\\n\\nButton A: X+15, Y+44\\nButton B: X+69, Y+13\\nPrize: X=8261, Y=13915\\n\\nButton A: X+63, Y+26\\nButton B: X+28, Y+61\\nPrize: X=15145, Y=2335\\n\\nButton A: X+42, Y+14\\nButton B: X+21, Y+63\\nPrize: X=4410, Y=4270\\n\\nButton A: X+95, Y+46\\nButton B: X+33, Y+75\\nPrize: X=4701, Y=7116\\n\\nButton A: X+34, Y+11\\nButton B: X+21, Y+47\\nPrize: X=18003, Y=7794\\n\\nButton A: X+19, Y+39\\nButton B: X+47, Y+19\\nPrize: X=8505, Y=1141\\n\\nButton A: X+17, Y+66\\nButton B: X+64, Y+55\\nPrize: X=3070, Y=7469\\n\\nButton A: X+50, Y+16\\nButton B: X+33, Y+59\\nPrize: X=2446, Y=8024\\n\\nButton A: X+16, Y+57\\nButton B: X+47, Y+12\\nPrize: X=415, Y=18149\\n\\nButton A: X+23, Y+48\\nButton B: X+52, Y+14\\nPrize: X=2972, Y=814\\n\\nButton A: X+62, Y+26\\nButton B: X+15, Y+31\\nPrize: X=3279, Y=6843\\n\\nButton A: X+31, Y+52\\nButton B: X+34, Y+17\\nPrize: X=1358, Y=15065\\n\\nButton A: X+95, Y+93\\nButton B: X+26, Y+99\\nPrize: X=5782, Y=9117\\n\\nButton A: X+49, Y+15\\nButton B: X+14, Y+39\\nPrize: X=18967, Y=16094\\n\\nButton A: X+76, Y+32\\nButton B: X+65, Y+92\\nPrize: X=8236, Y=5536\\n\\nButton A: X+37, Y+16\\nButton B: X+24, Y+64\\nPrize: X=1646, Y=3232\\n\\nButton A: X+22, Y+43\\nButton B: X+28, Y+16\\nPrize: X=5438, Y=5495\\n\\nButton A: X+86, Y+63\\nButton B: X+30, Y+77\\nPrize: X=8148, Y=10976\\n\\nButton A: X+51, Y+65\\nButton B: X+73, Y+11\\nPrize: X=5137, Y=2035\\n\\nButton A: X+25, Y+52\\nButton B: X+64, Y+37\\nPrize: X=13289, Y=4649\\n\\nButton A: X+16, Y+70\\nButton B: X+69, Y+16\\nPrize: X=9895, Y=10980\\n\\nButton A: X+14, Y+65\\nButton B: X+84, Y+32\\nPrize: X=10434, Y=2379\\n\\nButton A: X+14, Y+61\\nButton B: X+86, Y+48\\nPrize: X=3052, Y=4150\\n\\nButton A: X+32, Y+50\\nButton B: X+36, Y+18\\nPrize: X=4264, Y=4138\\n\\nButton A: X+82, Y+38\\nButton B: X+14, Y+24\\nPrize: X=4188, Y=2256\\n\\nButton A: X+61, Y+20\\nButton B: X+15, Y+38\\nPrize: X=7687, Y=18234\\n\\nButton A: X+37, Y+14\\nButton B: X+61, Y+85\\nPrize: X=8114, Y=7776\\n\\nButton A: X+90, Y+19\\nButton B: X+66, Y+75\\nPrize: X=9474, Y=3771\\n\\nButton A: X+47, Y+67\\nButton B: X+43, Y+20\\nPrize: X=4175, Y=5417\\n\\nButton A: X+56, Y+11\\nButton B: X+30, Y+75\\nPrize: X=10350, Y=16515\\n\\nButton A: X+86, Y+17\\nButton B: X+38, Y+94\\nPrize: X=4804, Y=5620\\n\\nButton A: X+34, Y+18\\nButton B: X+26, Y+57\\nPrize: X=17426, Y=13637\\n\\nButton A: X+62, Y+21\\nButton B: X+30, Y+65\\nPrize: X=18144, Y=8552\\n\\nButton A: X+17, Y+37\\nButton B: X+47, Y+23\\nPrize: X=9243, Y=18155\\n\\nButton A: X+53, Y+90\\nButton B: X+91, Y+12\\nPrize: X=2433, Y=1566\\n\\nButton A: X+14, Y+68\\nButton B: X+81, Y+20\\nPrize: X=12501, Y=11304\\n\\nButton A: X+85, Y+28\\nButton B: X+13, Y+70\\nPrize: X=12080, Y=12422\\n\\nButton A: X+79, Y+11\\nButton B: X+12, Y+76\\nPrize: X=6071, Y=1299\\n\\nButton A: X+12, Y+92\\nButton B: X+99, Y+47\\nPrize: X=2640, Y=3152\\n\\nButton A: X+30, Y+62\\nButton B: X+39, Y+12\\nPrize: X=8291, Y=4558\\n\\nButton A: X+14, Y+42\\nButton B: X+34, Y+16\\nPrize: X=276, Y=11052\\n\\nButton A: X+21, Y+85\\nButton B: X+23, Y+11\\nPrize: X=2544, Y=7588\\n\\nButton A: X+83, Y+57\\nButton B: X+23, Y+86\\nPrize: X=8707, Y=10262\\n\\nButton A: X+43, Y+32\\nButton B: X+21, Y+86\\nPrize: X=1304, Y=2026\\n\\nButton A: X+97, Y+46\\nButton B: X+46, Y+92\\nPrize: X=5722, Y=8188\\n\\nButton A: X+35, Y+65\\nButton B: X+54, Y+17\\nPrize: X=12560, Y=18125\\n\\nButton A: X+72, Y+21\\nButton B: X+11, Y+42\\nPrize: X=2813, Y=7466\\n\\nButton A: X+38, Y+19\\nButton B: X+28, Y+48\\nPrize: X=9660, Y=12772\\n\\nButton A: X+11, Y+36\\nButton B: X+65, Y+30\\nPrize: X=16768, Y=1838\\n\\nButton A: X+92, Y+35\\nButton B: X+35, Y+75\\nPrize: X=8778, Y=5190\\n\\nButton A: X+45, Y+44\\nButton B: X+11, Y+58\\nPrize: X=4444, Y=6424\\n\\nButton A: X+12, Y+80\\nButton B: X+52, Y+11\\nPrize: X=6020, Y=12049\\n\\nButton A: X+12, Y+36\\nButton B: X+84, Y+55\\nPrize: X=632, Y=19349\\n\\nButton A: X+60, Y+12\\nButton B: X+25, Y+56\\nPrize: X=17500, Y=15636\\n\\nButton A: X+18, Y+36\\nButton B: X+76, Y+33\\nPrize: X=4856, Y=2334\\n\\nButton A: X+85, Y+17\\nButton B: X+24, Y+39\\nPrize: X=975, Y=1221\\n\\nButton A: X+94, Y+19\\nButton B: X+39, Y+84\\nPrize: X=6280, Y=2335\\n\\nButton A: X+18, Y+65\\nButton B: X+63, Y+21\\nPrize: X=8576, Y=12683\\n\\nButton A: X+16, Y+51\\nButton B: X+55, Y+26\\nPrize: X=8810, Y=13090\\n\\nButton A: X+62, Y+22\\nButton B: X+20, Y+58\\nPrize: X=16494, Y=18220\\n\\nButton A: X+19, Y+44\\nButton B: X+34, Y+20\\nPrize: X=14642, Y=9800\\n\\nButton A: X+82, Y+30\\nButton B: X+29, Y+52\\nPrize: X=1463, Y=1570\\n\\nButton A: X+85, Y+38\\nButton B: X+39, Y+60\\nPrize: X=5882, Y=5524\\n\\nButton A: X+43, Y+15\\nButton B: X+12, Y+34\\nPrize: X=17651, Y=19411\\n\\nButton A: X+35, Y+53\\nButton B: X+49, Y+24\\nPrize: X=11435, Y=4935\\n\\nButton A: X+39, Y+22\\nButton B: X+16, Y+36\\nPrize: X=17783, Y=3722\\n\\nButton A: X+13, Y+51\\nButton B: X+72, Y+35\\nPrize: X=12052, Y=508\\n\\nButton A: X+75, Y+40\\nButton B: X+18, Y+55\\nPrize: X=4286, Y=9900\\n\\nButton A: X+16, Y+98\\nButton B: X+82, Y+66\\nPrize: X=1776, Y=7388\\n\\nButton A: X+93, Y+37\\nButton B: X+61, Y+79\\nPrize: X=6529, Y=4951\\n\\nButton A: X+35, Y+65\\nButton B: X+47, Y+12\\nPrize: X=5647, Y=13037\\n\\nButton A: X+59, Y+24\\nButton B: X+28, Y+68\\nPrize: X=18621, Y=14556\\n\\nButton A: X+67, Y+45\\nButton B: X+14, Y+31\\nPrize: X=7578, Y=17547\\n\\nButton A: X+42, Y+95\\nButton B: X+87, Y+22\\nPrize: X=6594, Y=10021\\n\\nButton A: X+22, Y+60\\nButton B: X+59, Y+46\\nPrize: X=4156, Y=4440\\n\\nButton A: X+12, Y+55\\nButton B: X+73, Y+21\\nPrize: X=2911, Y=7816\\n\\nButton A: X+75, Y+90\\nButton B: X+34, Y+11\\nPrize: X=2185, Y=1430\\n\\nButton A: X+43, Y+23\\nButton B: X+16, Y+95\\nPrize: X=1738, Y=3350\\n\\nButton A: X+25, Y+40\\nButton B: X+44, Y+21\\nPrize: X=6285, Y=18135\\n\\nButton A: X+44, Y+73\\nButton B: X+51, Y+20\\nPrize: X=14033, Y=4199\\n\\nButton A: X+18, Y+38\\nButton B: X+27, Y+11\\nPrize: X=7127, Y=17935\\n\\nButton A: X+14, Y+43\\nButton B: X+40, Y+18\\nPrize: X=3792, Y=4202\\n\\nButton A: X+23, Y+60\\nButton B: X+34, Y+21\\nPrize: X=846, Y=1530\\n\\nButton A: X+16, Y+70\\nButton B: X+43, Y+23\\nPrize: X=3982, Y=5202\\n\\nButton A: X+61, Y+64\\nButton B: X+21, Y+90\\nPrize: X=6949, Y=13000\\n\\nButton A: X+54, Y+31\\nButton B: X+16, Y+44\\nPrize: X=2470, Y=4415\\n\\nButton A: X+99, Y+13\\nButton B: X+24, Y+40\\nPrize: X=9234, Y=2318\\n\\nButton A: X+85, Y+50\\nButton B: X+11, Y+40\\nPrize: X=6489, Y=10360\\n\\nButton A: X+51, Y+13\\nButton B: X+26, Y+76\\nPrize: X=7438, Y=19338\\n\\nButton A: X+11, Y+68\\nButton B: X+32, Y+29\\nPrize: X=617, Y=2126\\n\\nButton A: X+99, Y+80\\nButton B: X+95, Y+11\\nPrize: X=7340, Y=2906\\n\\nButton A: X+26, Y+58\\nButton B: X+69, Y+32\\nPrize: X=9172, Y=7506\\n\\nButton A: X+76, Y+44\\nButton B: X+38, Y+99\\nPrize: X=2698, Y=3795\\n\\nButton A: X+36, Y+12\\nButton B: X+11, Y+49\\nPrize: X=6858, Y=17182\\n\\nButton A: X+86, Y+29\\nButton B: X+15, Y+64\\nPrize: X=2037, Y=4636\\n\\nButton A: X+14, Y+63\\nButton B: X+83, Y+30\\nPrize: X=1922, Y=1229\\n\\nButton A: X+16, Y+29\\nButton B: X+57, Y+25\\nPrize: X=5755, Y=8140\\n\\nButton A: X+47, Y+15\\nButton B: X+24, Y+40\\nPrize: X=5056, Y=13920\\n\\nButton A: X+13, Y+50\\nButton B: X+88, Y+18\\nPrize: X=7126, Y=4014\\n\\nButton A: X+13, Y+31\\nButton B: X+61, Y+31\\nPrize: X=2431, Y=1333\\n\\nButton A: X+63, Y+23\\nButton B: X+29, Y+74\\nPrize: X=9863, Y=4263\\n\\nButton A: X+16, Y+70\\nButton B: X+75, Y+36\\nPrize: X=6117, Y=3684\\n\\nButton A: X+40, Y+29\\nButton B: X+11, Y+88\\nPrize: X=3643, Y=8483\\n\\nButton A: X+12, Y+46\\nButton B: X+78, Y+29\\nPrize: X=7970, Y=2455\\n\\nButton A: X+53, Y+15\\nButton B: X+11, Y+37\\nPrize: X=12738, Y=19550\\n\\nButton A: X+66, Y+27\\nButton B: X+63, Y+89\\nPrize: X=11400, Y=10607\\n\\nButton A: X+50, Y+37\\nButton B: X+17, Y+57\\nPrize: X=2857, Y=3047\\n\\nButton A: X+42, Y+19\\nButton B: X+22, Y+35\\nPrize: X=1582, Y=9101\\n\\nButton A: X+23, Y+44\\nButton B: X+60, Y+34\\nPrize: X=13006, Y=13498\\n\\nButton A: X+37, Y+17\\nButton B: X+41, Y+61\\nPrize: X=3960, Y=3000\\n\\nButton A: X+13, Y+47\\nButton B: X+68, Y+20\\nPrize: X=3872, Y=16008\\n\\nButton A: X+17, Y+99\\nButton B: X+87, Y+73\\nPrize: X=2973, Y=3003\\n\\nButton A: X+25, Y+14\\nButton B: X+23, Y+50\\nPrize: X=1746, Y=19292\\n\\nButton A: X+15, Y+88\\nButton B: X+91, Y+98\\nPrize: X=9099, Y=10230\\n\\nButton A: X+85, Y+13\\nButton B: X+20, Y+22\\nPrize: X=3575, Y=2081\\n\\nButton A: X+45, Y+14\\nButton B: X+30, Y+59\\nPrize: X=18890, Y=7858\\n\\nButton A: X+49, Y+18\\nButton B: X+23, Y+47\\nPrize: X=6869, Y=8829\\n\\nButton A: X+14, Y+62\\nButton B: X+19, Y+18\\nPrize: X=2943, Y=6882\"","export default \"p=0,4 v=3,-3\\np=6,3 v=-1,-3\\np=10,3 v=-1,2\\np=2,0 v=2,-1\\np=0,0 v=1,3\\np=3,0 v=-2,-2\\np=7,6 v=-1,-3\\np=3,0 v=-1,-2\\np=9,3 v=2,3\\np=7,3 v=-1,2\\np=2,4 v=2,-3\\np=9,5 v=-3,-3\"","export default \"p=91,23 v=98,-65\\np=100,68 v=-43,14\\np=33,76 v=55,34\\np=83,21 v=14,67\\np=59,43 v=-65,77\\np=2,89 v=-53,61\\np=22,83 v=44,85\\np=54,82 v=13,72\\np=72,70 v=-81,43\\np=9,89 v=42,-76\\np=80,10 v=-79,-19\\np=65,86 v=-38,-35\\np=67,41 v=-87,72\\np=39,82 v=-20,-80\\np=76,20 v=-4,98\\np=44,22 v=56,63\\np=91,13 v=-74,19\\np=48,56 v=-15,69\\np=61,30 v=99,74\\np=10,38 v=55,80\\np=24,61 v=59,-72\\np=98,50 v=74,95\\np=17,33 v=3,87\\np=91,70 v=17,-7\\np=79,92 v=31,-49\\np=8,30 v=-73,-95\\np=9,34 v=-83,-34\\np=62,17 v=21,29\\np=47,51 v=-56,38\\np=57,64 v=86,96\\np=92,1 v=18,43\\np=16,72 v=89,-69\\np=85,96 v=-23,-91\\np=7,25 v=95,-50\\np=95,71 v=30,-47\\np=23,5 v=19,-91\\np=79,40 v=87,73\\np=12,84 v=63,6\\np=30,79 v=-92,85\\np=64,36 v=91,70\\np=63,6 v=26,50\\np=64,76 v=-41,-80\\np=61,6 v=-10,-22\\np=54,65 v=41,-68\\np=95,101 v=-33,19\\np=90,18 v=77,19\\np=46,40 v=-91,66\\np=11,10 v=-7,43\\np=9,23 v=33,-48\\np=72,59 v=-95,4\\np=10,40 v=-98,-54\\np=85,80 v=-3,82\\np=56,45 v=-50,76\\np=66,8 v=-55,67\\np=34,101 v=75,-84\\np=57,31 v=66,25\\np=1,98 v=-78,71\\np=95,62 v=-4,-85\\np=68,34 v=6,4\\np=64,83 v=-96,64\\np=59,93 v=43,24\\np=41,37 v=40,-37\\np=53,71 v=-90,6\\np=6,54 v=-38,-27\\np=14,78 v=-98,-35\\np=62,72 v=-19,-49\\np=70,52 v=96,-83\\np=8,71 v=-18,-4\\np=75,67 v=-50,96\\np=93,49 v=37,-30\\np=37,67 v=-51,-10\\np=41,19 v=-30,-23\\np=10,13 v=79,-84\\np=22,83 v=-26,-38\\np=68,79 v=-85,-52\\np=78,72 v=-65,-73\\np=66,53 v=-60,-19\\np=84,79 v=-99,-87\\np=12,67 v=34,-10\\np=77,17 v=67,-71\\np=9,41 v=-93,-58\\np=87,42 v=43,-23\\np=88,90 v=27,16\\np=11,28 v=-82,-19\\np=44,68 v=56,58\\np=1,89 v=-58,-87\\np=6,68 v=85,-55\\np=37,41 v=55,52\\np=4,102 v=-47,-56\\np=30,42 v=-77,-51\\np=14,34 v=74,11\\np=91,68 v=72,-28\\np=28,6 v=-23,74\\np=75,30 v=66,34\\np=66,69 v=50,-79\\np=92,86 v=-26,-82\\np=67,32 v=82,80\\np=44,80 v=-61,-28\\np=86,55 v=22,-45\\np=18,44 v=-11,56\\np=41,76 v=25,5\\np=81,1 v=80,-52\\np=3,64 v=-83,-93\\np=3,30 v=-83,1\\np=100,86 v=-88,44\\np=41,31 v=45,70\\np=60,21 v=-65,-23\\np=4,0 v=54,98\\np=24,68 v=-98,-93\\np=5,25 v=79,-81\\np=39,44 v=26,-51\\np=65,5 v=-49,81\\np=50,2 v=-40,-25\\np=96,100 v=-43,88\\np=21,95 v=34,2\\np=38,42 v=15,97\\np=90,102 v=74,64\\np=29,66 v=-58,-54\\np=86,32 v=7,12\\np=57,83 v=-50,-90\\np=25,35 v=-77,11\\np=97,102 v=47,-95\\np=81,12 v=-54,-98\\np=6,56 v=23,-51\\np=80,102 v=-79,16\\np=93,26 v=-83,83\\np=32,86 v=23,-43\\np=24,84 v=-52,-97\\np=20,52 v=23,79\\np=51,95 v=-96,88\\np=23,89 v=69,3\\np=42,23 v=-66,53\\np=96,69 v=-28,65\\np=23,50 v=99,41\\np=97,77 v=94,-80\\np=10,92 v=-63,19\\np=70,32 v=92,1\\np=7,66 v=-96,-67\\np=77,14 v=-34,-37\\np=99,46 v=41,25\\np=61,39 v=-45,-27\\np=76,80 v=-19,93\\np=57,36 v=52,32\\np=62,53 v=38,-67\\np=83,11 v=39,-45\\np=37,92 v=-46,23\\np=81,39 v=-69,73\\np=48,63 v=-5,-24\\np=14,15 v=74,36\\np=48,35 v=81,-30\\np=31,50 v=-21,-10\\np=87,93 v=-83,33\\np=46,101 v=-55,35\\np=79,96 v=-94,54\\np=71,31 v=1,-23\\np=14,51 v=44,76\\np=42,20 v=-91,14\\np=0,21 v=-48,87\\np=61,24 v=-28,-26\\np=48,27 v=-91,8\\np=84,78 v=-49,-90\\np=35,66 v=-77,13\\np=81,30 v=52,39\\np=66,76 v=85,5\\np=19,45 v=80,-78\\np=51,77 v=-55,-79\\np=59,2 v=82,36\\np=22,83 v=22,-65\\np=82,17 v=52,15\\np=84,61 v=-49,52\\np=19,46 v=80,90\\np=35,81 v=71,-13\\np=94,24 v=78,91\\np=19,33 v=8,61\\np=47,25 v=69,-96\\np=6,8 v=-2,-60\\np=9,20 v=-22,-19\\np=68,0 v=21,-5\\np=30,15 v=-97,84\\np=9,59 v=-19,-84\\np=77,35 v=57,35\\np=91,54 v=-13,-31\\np=53,69 v=81,-69\\np=27,41 v=-54,33\\np=28,69 v=-67,65\\np=23,58 v=60,-48\\np=35,16 v=35,36\\np=39,84 v=-84,-18\\np=41,82 v=45,71\\np=34,48 v=16,61\\np=22,1 v=39,-87\\np=42,85 v=-76,68\\np=5,52 v=18,-34\\np=19,58 v=-62,-34\\np=60,4 v=-30,26\\np=32,43 v=4,-92\\np=10,38 v=-78,1\\np=54,76 v=-46,6\\np=9,93 v=-17,-39\\np=93,27 v=-61,-89\\np=39,89 v=93,6\\np=23,69 v=8,55\\np=23,8 v=-52,43\\np=29,96 v=4,57\\np=88,49 v=2,93\\np=37,49 v=20,-36\\np=48,84 v=85,82\\np=62,101 v=6,16\\np=79,82 v=-39,-4\\np=10,71 v=-12,-4\\np=35,42 v=-31,-61\\np=2,95 v=-50,53\\np=44,26 v=-97,-13\\np=2,36 v=84,-89\\np=3,64 v=-25,-39\\np=35,23 v=4,67\\np=38,102 v=-26,-53\\np=11,70 v=-22,-4\\np=41,42 v=-97,55\\np=59,76 v=52,-82\\np=39,23 v=29,53\\np=7,46 v=-47,1\\np=82,27 v=-84,32\\np=56,20 v=26,-5\\np=76,33 v=16,-58\\np=87,46 v=-74,-68\\np=63,3 v=97,2\\np=71,15 v=-30,22\\np=37,6 v=80,5\\np=39,66 v=60,51\\np=85,62 v=-40,94\\np=26,97 v=41,-51\\np=84,63 v=-86,69\\np=23,59 v=-97,-96\\np=93,32 v=77,-47\\np=88,1 v=-23,64\\np=14,36 v=-67,-49\\np=40,94 v=-25,78\\np=54,54 v=-47,1\\np=96,31 v=93,90\\np=91,21 v=-94,-57\\np=88,23 v=25,21\\np=12,64 v=16,-8\\np=75,17 v=-73,70\\np=32,9 v=38,-36\\np=37,2 v=80,64\\np=72,69 v=66,62\\np=52,98 v=-23,42\\np=10,74 v=36,38\\np=33,6 v=-42,-87\\np=83,55 v=22,-48\\np=59,80 v=-80,76\\np=1,32 v=-70,-30\\np=34,49 v=33,-58\\np=28,25 v=34,74\\np=57,43 v=50,23\\np=7,12 v=53,9\\np=54,30 v=-95,-9\\np=11,91 v=28,37\\np=70,38 v=-9,-92\\np=30,15 v=25,77\\np=88,63 v=-98,39\\np=40,15 v=-51,-19\\np=100,26 v=28,-88\\np=68,30 v=-90,66\\np=44,80 v=-56,54\\np=11,58 v=39,42\\np=62,85 v=67,13\\np=92,6 v=2,-88\\np=71,98 v=-30,-5\\np=99,33 v=-69,-13\\np=90,84 v=-87,76\\np=23,71 v=24,27\\np=62,61 v=16,-35\\np=42,57 v=-86,-34\\np=28,66 v=-16,-7\\np=88,94 v=-99,78\\np=95,42 v=51,-82\\np=82,50 v=52,4\\np=1,69 v=-53,-21\\np=37,21 v=91,-37\\np=30,2 v=-32,-81\\np=18,59 v=-7,-96\\np=40,28 v=-56,94\\np=45,66 v=50,-31\\np=39,79 v=-41,-42\\np=75,68 v=97,-42\\np=27,22 v=-21,-33\\np=6,15 v=-34,-68\\np=28,94 v=-65,-7\\np=48,25 v=-15,63\\np=77,51 v=-85,-54\\np=36,53 v=-48,-7\\np=15,38 v=-73,-41\\np=24,73 v=-23,2\\np=17,15 v=-37,63\\np=12,59 v=-33,57\\np=45,66 v=-96,10\\np=27,98 v=-67,71\\np=88,66 v=-14,79\\np=59,12 v=91,36\\np=7,29 v=3,15\\np=44,90 v=-76,47\\np=77,45 v=67,-23\\np=14,62 v=-47,-86\\np=28,90 v=-77,-80\\np=65,17 v=-80,70\\np=63,47 v=62,-99\\np=47,30 v=-71,97\\np=7,47 v=-58,83\\np=2,57 v=12,-3\\np=57,71 v=70,47\\np=56,26 v=94,55\\np=66,97 v=-71,45\\np=41,54 v=-30,-86\\np=31,85 v=-26,47\\np=63,55 v=-39,48\\np=6,84 v=28,-66\\np=64,62 v=-50,86\\np=51,49 v=91,-82\\np=19,95 v=44,30\\np=54,98 v=96,-32\\np=71,65 v=54,42\\np=97,72 v=83,-21\\np=71,19 v=-95,-9\\np=59,45 v=51,83\\np=85,18 v=37,-53\\np=59,58 v=-60,86\\np=96,63 v=68,-89\\np=53,25 v=58,-22\\np=95,72 v=52,7\\np=10,0 v=-83,16\\np=48,50 v=-16,-44\\np=25,27 v=-30,45\\np=79,33 v=73,44\\np=40,3 v=-36,-70\\np=68,85 v=-64,-72\\np=86,73 v=-9,-72\\np=25,53 v=50,90\\np=64,41 v=68,-76\\np=85,42 v=-69,-61\\np=84,57 v=-10,-73\\np=36,53 v=-89,22\\np=24,55 v=54,-17\\np=1,97 v=-43,93\\np=29,1 v=95,-49\\np=19,22 v=28,90\\np=73,59 v=18,-7\\np=65,36 v=41,48\\np=22,50 v=-57,-72\\np=61,36 v=11,56\\np=18,96 v=-68,-1\\np=88,18 v=-89,5\\np=73,2 v=36,68\\np=24,99 v=49,88\\np=43,50 v=-5,-20\\np=34,99 v=95,-56\\np=9,2 v=48,-52\\np=68,39 v=-55,-30\\np=33,99 v=-42,12\\np=80,26 v=52,-23\\np=31,70 v=19,-7\\np=75,27 v=23,-69\\np=41,8 v=40,-22\\np=2,36 v=-28,-89\\np=13,92 v=49,-38\\np=25,60 v=-82,96\\np=7,33 v=-83,11\\np=58,63 v=56,-65\\np=62,85 v=-85,68\\np=97,16 v=-18,-50\\np=48,34 v=-47,43\\np=43,82 v=-71,20\\np=63,55 v=-60,-17\\np=28,62 v=-75,-70\\np=7,52 v=-12,47\\np=72,73 v=66,-4\\np=98,33 v=68,-64\\np=87,51 v=-79,-89\\np=98,63 v=-58,-72\\np=57,22 v=-15,87\\np=11,20 v=42,-63\\np=72,10 v=66,-67\\np=28,20 v=-87,1\\np=22,5 v=-90,29\\np=23,30 v=66,30\\np=38,26 v=-21,32\\np=90,87 v=-28,58\\np=71,94 v=22,13\\np=32,32 v=24,-71\\np=9,30 v=69,29\\np=34,64 v=-11,17\\np=80,35 v=78,63\\np=39,93 v=72,-8\\np=63,94 v=-42,96\\np=85,26 v=-69,-31\\np=5,100 v=-22,5\\np=96,37 v=99,-85\\np=55,51 v=43,5\\np=20,58 v=84,93\\np=1,29 v=41,82\\np=83,73 v=-79,-62\\np=71,98 v=21,23\\np=49,72 v=-87,-38\\np=0,63 v=-50,62\\np=69,50 v=68,34\\np=94,37 v=48,38\\np=5,28 v=-53,63\\np=99,58 v=-15,44\\np=1,86 v=-78,34\\np=25,25 v=69,-91\\np=15,13 v=-57,-19\\np=68,59 v=92,-17\\np=7,65 v=-58,72\\np=90,88 v=-83,83\\np=31,60 v=69,-40\\np=83,60 v=52,-55\\np=16,63 v=86,-5\\np=21,19 v=-82,-85\\np=4,74 v=-12,-1\\np=51,76 v=-73,-63\\np=71,67 v=26,41\\np=3,86 v=-88,6\\np=5,65 v=73,31\\np=79,66 v=-44,-96\\np=80,79 v=39,49\\np=24,66 v=-25,64\\np=0,1 v=2,-49\\np=40,21 v=-25,97\\np=97,47 v=-28,90\\np=97,70 v=-61,-99\\np=12,42 v=-38,-44\\np=42,39 v=-86,42\\np=17,28 v=94,-16\\np=68,50 v=37,4\\np=31,46 v=-81,-89\\np=95,74 v=-23,-28\\np=24,35 v=-82,-23\\np=53,27 v=54,27\\np=26,17 v=95,-57\\np=77,92 v=37,54\\np=99,33 v=68,-30\\np=46,100 v=20,19\\np=64,22 v=-95,43\\np=9,94 v=-88,6\\np=44,78 v=70,-52\\np=100,67 v=38,-66\\np=31,79 v=90,16\\np=57,67 v=40,-86\\np=79,48 v=67,-96\\np=46,100 v=73,44\\np=26,18 v=-7,80\\np=60,84 v=21,-59\\np=18,16 v=64,17\\np=48,81 v=91,-35\\np=54,9 v=-10,43\\np=34,58 v=-16,31\\np=33,0 v=-77,-63\\np=90,1 v=-36,-27\\np=53,68 v=71,34\\np=37,60 v=75,-93\\np=49,8 v=30,-40\\np=10,102 v=94,19\\np=78,54 v=60,-21\\np=42,52 v=35,48\\np=98,69 v=66,-32\\np=89,98 v=-47,80\\np=44,8 v=56,70\\np=67,8 v=97,26\\np=7,81 v=65,39\\np=87,38 v=23,97\\np=95,11 v=87,-5\\np=23,13 v=14,80\\np=98,13 v=84,34\\np=1,57 v=-22,3\\np=22,10 v=81,-8\\np=75,14 v=-44,-26\\np=7,75 v=3,-80\\np=1,20 v=-58,84\\np=20,12 v=79,-60\\np=80,8 v=78,-36\\np=41,66 v=64,-33\\np=82,30 v=-59,63\\np=95,50 v=53,-84\\np=27,0 v=-87,40\\np=58,18 v=-25,53\\np=50,34 v=65,22\\np=6,41 v=50,37\\np=3,72 v=-56,-25\\np=85,1 v=67,-15\\np=63,52 v=34,-93\\np=28,72 v=4,-35\\np=59,102 v=-71,-39\\np=26,16 v=24,49\\np=10,97 v=-3,90\\np=22,82 v=-32,88\\np=47,25 v=-96,-16\\np=58,102 v=72,-78\\np=26,92 v=76,-72\\np=28,22 v=34,-2\"","export default \"##########\\n#..O..O.O#\\n#......O.#\\n#.OO..O.O#\\n#..O@..O.#\\n#O#..O...#\\n#O..O..O.#\\n#.OO.O.OO#\\n#....O...#\\n##########\\n\\n<vv>^<v^>v>^vv^v>v<>v^v<v<^vv<<<^><<><>>v<vvv<>^v^>^<<<><<v<<<v^vv^v>^\\nvvv<<^>^v^^><<>>><>^<<><^vv^^<>vvv<>><^^v>^>vv<>v<<<<v<^v>^<^^>>>^<v<v\\n><>vv>v^v^<>><>>>><^^>vv>v<^^^>>v^v^<^^>v^^>v^<^v>v<>>v^v^<v>v^^<^^vv<\\n<<v<^>>^^^^>>>v^<>vvv^><v<<<>^^^vv^<vvv>^>v<^^^^v<>^>vvvv><>>v^<<^^^^^\\n^><^><>>><>^^<<^^v>>><^<v>^<vv>>v>>>^v><>^v><<<<v>>v<v<v>vvv>^<><<>^><\\n^>><>^v<><^vvv<^^<><v<<<<<><^v<<<><<<^^<v<^^^><^>>^<v^><<<^>>^v<v^v<v^\\n>^>>^v>vv>^<<^v<>><<><<v<<v><>v<^vv<<<>^^v^>^^>>><<^v>>v^v><^^>>^<>vv^\\n<><^^>^^^<><vvvvv^v<v<<>^v<v>v<<^><<><<><<<^^<<<^<<>><<><^^^>^^<>^>v<>\\n^^>vv<^v^v<vv>^<><v<^v>^^^>>>^^vvv^>vvv<>>>^<^>>>>>^<<^v>^vvv<>^<><<v>\\nv^^>>><<^^<>>^v^<v^vv<>v^<<>^<^v^v><^<<<><<^<v><v<>vv>>v><v^<vv<>v^<<^\"","export default \"##################################################\\n#OO..OO..O....O##O....O..#...O..O..............OO#\\n#.OO.O.O.......O..O.....#O....#O#.......O.O...O.##\\n#OO..O..O..O......OO.....O#..OOO..O.....#....O...#\\n#...O......#O.O##.#..O.O#..O.O....O.#.#.OO#O.OO#O#\\n#...#...O..OO.....O.........OO.OO.O........O...#.#\\n#...#....O...O##O...O.....O....#.....O..O.O.O.OOO#\\n#.O...O..#.#OO.O.##...#...##O....O...#...#....O..#\\n##.###.O......#..O...O....#....O....#O.....O#..O.#\\n#...#O.O...#O..O.O............OO.O..O..#.##..O.OO#\\n#...OOO............#OO....O.O.O#.......O......O#.#\\n##............#O.....O......O..O.O.#.OO.O.O......#\\n#O...O..#...O....O..O...OO#.#OO#.........##.#O..##\\n#O...O..O#O..O#.#.O.O...O.O..OOO.O....O....O.O...#\\n#....#...#.O.O#O..O..OOO..O....O.....#...O...O.#.#\\n#..O...#...OO.O.O.OOO.OO..#..O..OO...O......O#..O#\\n#O.....O.O...O.O.#.O....O.....O...O....O...O.....#\\n#.O..O..O.#O..O...O.O..O..OO.OO#...O.O....#.#.O..#\\n#O..#O...O.O.....O#OO..O.......#.OO.OOOOOOO#..O..#\\n#O#O...O..#...O#O.O......O..OO...O.....O...O.....#\\n#O......O##....O#....O..#.OOOO.O.O..#OO........O.#\\n#O..OO....#.#........O....O..O#.OO.....#.O.OO....#\\n#.....O.....OO#OO....O.O...#.....OO.O...O.....O..#\\n#.....O.O....#......O..O..O...O.....O....O.....O.#\\n#.O.O#.......#O....O..OO@#...O#.O...OO...OO.#.O..#\\n#OO...OO..#.#...OO.....#....O.....OO....O#..#....#\\n#.O.#.O.......#.....O.O.......O...O....#...O.....#\\n#.OOO.O..#...O...O..#O......O..O.O##..#.##.O.....#\\n#O.O#..OO......OO..OO..O#..#O.O...#O#........#.OO#\\n#..O.O.....#...OOO..OO.#.....OO#.......#OOO..O..O#\\n#O.O..OO...O..O.O....OO...O.O...O..O......OO.....#\\n##...O....#O..OOO.O.#.OO.#......O#..O.#O...#.....#\\n#...O...O....O.#...O...........OO.OOO..O.O..#.#OO#\\n#.O.#....#.O#..#O..O....#..OO.O..O..O.#........O.#\\n#O#O...O.....O.O......#OOO.O#.......O....#O.#.#O##\\n#O.O#..O...OO....O......O.O.....O......O.OOO....O#\\n#....#OO...O.......#OO.O.O..#.O......#.....O..O..#\\n#....O.....OO....OOO..O.OO..#OO..O.....OOO.#.....#\\n##..OOO.#.O.........#..O..O..O..O.O.OOOO..#....O.#\\n#...OO....OOO......O.......O.......#........O.O..#\\n#O.O...#OOO....O.#...O...OO...O....OO.......#....#\\n#.......O.O..#...OOO..#..O..OO..O..O.OOOO.O..OO..#\\n#..O..O..O..O.##.OO...#..O#..O.#...OOO..O......O.#\\n#.....OO..OO...O.#.O..OOO..OOO....OO.........#.O.#\\n#..O.....O.O..O...O..##OO....O...O....#.O.O..#.OO#\\n#..OO.......O..O#.OOO.....O....O...#..O.O.....#O##\\n#...O..#...O..O........#...OO.O.O...#.O.....O....#\\n#O....O.O#...OO......OO.OO..O.......#..#.#..OO...#\\n#..#.#.....##.##O....O...O.......O..OO....O...OO.#\\n##################################################\\n\\n^v^<>>vv<<<^v>v>>^<v<>vvv^<<>^><^^vv>^>>>>>>v^<v^>v^>>>^v>vv<^<<vv>^<^>v>v>>>v<^>^^^>^><v^<>v<<^^vv^>><>^v>><<>v<vvv^^^v^<^><<^^v>v^>v^^^^v>^^>^>v>>vv^^>>v^v<<^vvv<v<v<>v>v^^<^v<^v<<v^>>^>v^<v>^vvv><><<vv><<>^<>^v><>^>^^>v<>v^<>v^<^v^v><>>>^>vvv<^>^v<^<>vvvv><v><<^^>^><<>^vv>^>>^<<><v>><>^<^vv^<vvvv>^<<^^v<v<^^^<^>v>^><^>^<><<><vv^^<v^>^^<v<^>>><<^>v^>^v>^^<>v<>>v^<<<^v^<<^v>^<^^v^^^v>>^>^v^^v>>v>>vv<^^^<<^v<^^v<^^>^v<v<>>^^<<^<v<^>>>>^<>><<>^><^<vv>>>vv^>^><>v<^v><>><v>><v^<v^<<^^vv^>>>v^<>v<<^<^<^^<>^^>v^<^v^<>vv^^<>^v>^^<<v^>vv^>^<v<<vv>^<<>>v<<^^><>>>^<>^v><vvvvvv>>^v^^>v^^vvv^^v^<<v^><<^>>^^<vv>v><>>^<>^vv>v^vv<<v>^<^<^<<<<v<>v^>vvv^><v>^<>>v^<>^^<^vv^<>^v<>v^^v<v>^<>v<v>^><><v<>v<v<<v^><^<v>v>^>>^>^^<><<v^^vv<v^<v><>vv^^vv>><v<<^>v>><^v<^v>vv<v>>^vv>>^<^<>^v>v>^>v^<<v>vv<<^^<^<^<>>>>^^><<v>>^>^>v><v^<vvv^<v^v>vv^vv^vvvv<<<^v^vv><^<^>^^<v<<vv>^^vv<>>>^>^><>v>^<^<vv<<>v>vv<>>^vv<v<^<<^<<><v<v<<>>^<^>>>^>>^>v^<^^v<v^><vv><^>^v^>v>vv<^v<<v<<v^^<^vv^<vvv<<><>v>v^v>vv<^v<vv<^^>v^><<v>>\\nv<>>^^vv<>^v^<<^>><><>^vvvv^^><<<<^>v<>v>>>^>^>>>v>>>^^<>><<^^^^v<>><>v^>>vv^><<v<^><^^v^<v>v^>>>v><v><v>v<<v<>>v^<^<^vv>^v>vvv<^><><<>^^>v^v>vvv<^>>>>^^^^vv<>^vv>^<v<>^v>v^<>v<v<>>><v><vvvv^vv^^<<v>>>>v^vvvv^^><^^^<v^>><<^>^^><>^<v^<<v^v<^<^<vvv<<>>v>>^v>><^v<v<<^^><>>vv<><^<^^^>^v^^>v<^<^><<^v<v<v>v^>^<<<<>v^^^><>vv>^>v^>^>vvv>>><^>^<<><><>v>^<v>><>^^>v>^><^^vvv^^^>>vv<vv>vv><^<>>vvv^^><<>>vvvv^^><<>><>vv^^>v^^vv<><^>^>^<<><>>v^^<^^>>^<v>>^<^^v>^^^<v^v<<><v<v>><vvv>>v<>v>v^<<^v>>><>v><v<<v^v>^v^<^<>>v^vv>^<v><<<^v^>><^^>^^v><>^>^<>^<<^>v<^<<^v<v<>>v^^>^^>v<v>^v<<>^>v<><^<v>>v><v><^>vv<<v^^^^^<<><>>><v>>v>vvv<>v>^>^vvv><>^^^>v^<<<v>>v>^>>>>v^^v>v>>v^<^v<^v><<^v^>>^>^<<><<<<>^<v>^^>^^v^>><<^<^v>v>v<v>>>>v><>v<<v^^v>^>><^<^^v^>><>v^v^vv^^^><<^<>^vv>v<<>^v^^<>><>^^<v^v>v<v^<^>vvv><^^><^^>v<v^>^<<>^v<<<>>v<^<>^v^<^>vvvv<v>v>>^^vv^<^v><<>^^v>^<<>v^vv^<>><^^v^^^v^^<<<>v>^<>>>>vv^^>^>^v><<^^<>^^<<<<<<^^<^v<>^v><v^^>>vv^^vvv^v^>^v<>v>v^<v^v<^>^^v>^^v^vv<>v^><<v<<^<^^v<>^>^v<^vvvv>><>v<vvv>>><\\n>v<^<^<>v><^<<<<v>^^<<v<^>^>v<<^><v>v<<<^^<<v^v<^>^v<><>^^>^^<<v<<vvv^^^>^v<vv><v>>v>v>^<v^<^^><v>^v^<^v<v<v>^>^><><^<<^><v<>>^vv>^<>v><v^v<<^<v><v^<^>v^><<<><<<<>v^>>^>>>^<vvvv>v<>^v^<>>vv<^^v^v^^^>v>^>><<^>v^<^v^^v<<<<>v>v<>v>^vv><^^v>^^v^^<^v^<<^<><<vv>v<>>v^<<><>v<v>v<<><<^<<<<vvv><>vv^>^^v^^^>>vv>^v<<v^>^vv<^v<><v<vv<>v^^v<^^v>vv<>>^^>^><v<vvvv><^<<>vvvv<<>^vv<vv<>^^<^><>v^<><v>v<^>v^v<<^vv^>v^^<v^^<v<v^v<<^vv^vv^^v<vv>^<><<^>v^>><<<><^<><><^>>>><v><<><<vv>v^>v<<^vv^><v^^<v>v<>v<v>v^vv><v^><v>>^><<<<v>^<<vv^<>v><v<^>^^^><^^<><v^<^>^^<v><<^<^>v>v>^^^^^^v^^^vv>^>^><><<<vv<vvvv^><v>v^<>^^>^<^v^>vv^<<<^v<>^>v<^vv<vv<<>v>^^vv^v^^^vv><<<>>><^v^<<^<>v^v<^<^<^^>v<<>>^<v^^>><v<v^v^^>^><v<<><>vvv<<^^^>>>v<<<>^<^<v>v>><v<<<v<><v>>>>v<^v>><^<^^<>>vv><^^v>><>^<v^><v^^vv^>^^^<>v<^>^<<<^>v^<^^>^v>^<^v^vv^><^>vvv>><<<v>><^>^^<^^<v<><>v^vvv><^<<v^<>v^<v^v^>v^vv<^vv>>^v<^^^>v>vv>vvvvvvv<^<<vvv<vv<>^<v^>vv<vv^^^^^<>>^^<vvv^^^>vvv<v>^<v>^<^>v<>^v>^<<<^>v>^<<>vvvvv><<^v>>>^v>^^<>><>>v^<>^^^><<vv<v<<^^\\nv>v>v<<^>v^^>>>v><v><v>vv<^^<^>vv>v>><v^<<<v<<vv<>vv^<>v^v^v<vv^><>v>>^^v><<^^<^^><^v^vv><<^v><<<<<<^><^^^<^>><^v>><<<>^vv<^^v>^v>^v<v<<^<^<v^^><v<vv>>^>^>vv>>^>^<^vv^vv><<<^>^<>^><<v>^<vv^<>^<^<<>^^><<>>>v><v<<<v^<<><^^><<v<>^^^^>v>>^>>^v>vvvvv^v^vv<v>^^^<v^><v^>^<v>><^><^vv^v><^^<<v^<v>^>>>><v<>v<>v^^^v><^^v^^^><<^^>^>>^^v<^>^<v^v>>>>vv^^v>v^^><>v^^^>^^^>>>^>^<^vv>v><v>^^>>>^<^>vv<<vvv^v>v><>^<>^<vv^><vv>v^^^^vv<^><^<<<<>v<^>vvv<v^^v<vv^<v<>>^<<>v<v>>>v<<v^<vv<^>>^v^>vv<><>vv>v^^v>>v>^<>^<v>>^<>><v>>^<<><^>^>><^^^v><v^<>^^^<^v<><^^>^<v^<^v>^vv<^^v^^<><^<^vv^vv<^^vv<v^<v^>v<>vv^>^>vv><vv<<><<<>><v>><^<<<<v<>v<v^vv^<>v<^^<<^>>vv>v><>vv^<^<v^>>^v>>vv>^^><<>^>vvv<^>^>^<v><^^>^>^<><v>^<<>>v>v>vvv>^^^>>>^><^<>>>>><vv<^<>v>v><vvv<vv>^><<v><^^<vv^<v^>vvv<<><>v<>><v^><v<<vv<>^^v<v<v^><^<vvv>vv^><>vv>>>>v<><<v>>v^^<<>>>>v^><<v>><^v^<v^v<v>^v^<^^>v><<<vv^<^^v<<vv<v<^>v^<>v^<v>v<<vv^>><>^^>^vv^><v^^<vvv^vv>><^^v<><>^<>>><^<>v<>>^^<^<v<<<><>v^^vv>>>v^<v<^^^<v>>v<v<<vv<>><vv^v^>>>vv^^<^^>><>^v<>^v\\n>^><>^vvv<^vv<>v^>^>^<^v>><>^vv^<vvv>>v<v<v^<^v>^<vv^^<v^^^^^^v<v><v>^^^^<>v<>v<<><>>><>>v<^<>>v^vvv<<vv^^^^<>>^>v<<v<^>>>vvv>>^v<^v<<vv^<v^v^<v<vv>v>^^>v<>^>v>>^>vv><<>v<v>>>v<^>^v^v^><>^v^v>^^>vvvvv>^vv^v>>v>v^v>>>vvvvv>>v^>^>^vv<>vvvv>>^^<<v>^>>v>v>^v<v<<v<<^^>^vv><>^v^<^^^<vv>^<vv><^<<<v<v><<<^<^v^<^<<^<v>^v^^<><>>>^>>^vv>^>v><v^<v<<<>>v^vv^>v>>^vvv<<>>^^^>vvv>>^^><v>^>><<>v^<>^>^<^^^v>>><<^v>>^><>>vv<>v<><<<<vvv^^<<^^<^v<><v^^^>v>>^^<v<>^<^<<v>>>v<vv>>^<>^v<^^^><<^<<^<<>vv<><v^^v><<<<v>v<<vvvvv^v><v^^v^>v<^<>^>^<^v<>><<^^^^>>^^>^<><v<<v^vv>^>v>^^^>v^<<^v<v>vv^><><v<^^v^<><>v<v>^^<v>><<>><^^<^^<<v>v<v^<^>><<<v<<><v><><v>vv<^>v<<^<^^<<<v>><<v>^>><^><v><>v><>v<<>^v>>^<v>v<<v<^^>><<vvvv^<v<v^<^>v<<>vv>^<>^<>><vv<^<>><v>^<<<v>>>vv<>^v>v>^v^>>vv<vv>>v^<><>^<<^<><<vv^<<><>v>^<<>^^^>>v><v><>><^v><<vv<<v>^<^vv^v><>>v^^^^vv><>^>>>^^><v><v><^v^vv^v<>>^<vv^v><<<^^>v<v^<^>>><v<>vv>>^<v<^vv<>>>v>><^v>v<><><^<<v>vv<^<>>>v^><<>^vv^^><>v^>v<>vv<v>^>><<><^>^^>vvv><<vv<v^v^^^>v^<^v>^v>^<<<>^vv<<<v><\\n<<^^>^v>v^v^vv><>^>><<>v>>><<<><>>vv^<<>>>^^v^vvv>v>v^^v^^vvv<>^<v^^vv<^v^>v>>vv>v>><^><<<<<<>>v<>>^^><<<>^^v<<<^<v^^>><<^v><<v><^vv<vv>v>^^<v^>v>>><v>^<^<v^^<><v<>>^^<>>v>^<<vv>^>v<>>v>^<v<<<<<>vv^v<>>^^vv<^<v^<^vv<^vv>><vv><^<<>v^v^^><v^vv<<<v^<v><><v><^>><>><<^^^v<><<>v^<^vv^>v^^<^<^^^<vvvv<^<^v^<>><><<<vvv><>^<^v>^>v^vvv<^^v<>><<^^^<v>vv>>vvv<v>^^v<v^^v^>>^^<<v>><>v<vv^<>v^>v>vvv<^^>^><^>^v<v^vv<><>v>>v<<v>>^v>>vv^>>^^<<<>v^^>^v>>>^<>v<><<^<v^>>>vv<^>vv>v><<^>^>>>>><v<><v>v<<>v<^^^<<vv^<<v^^>>^^>v><<<>>^<>v<vv^^vv^v^vv^^<<v>v><><^><^v>^<v^v>v^>^^>^^^<v<>>v<<^^><<<^>v>v>>^<><^>vv>^v^<>v^^^v>v^vv><<<><<><<v^^v^>>>^><>>>v><<<<^<>><v^^^<>><v>^v^vv^v>^v<^<<vv^<v^v<^<vv<v^<^^><^<<>>><><v^^^v>^^v<><<<^>^<^>v<^vv>>>><<v^^><>v<v<<v^<^>><>vv^>^vvv<^^<^vv>^vv^v<<<><>v<>v<^^^v^<^><^<^<><>>^<>v<>>>^v^>>v^v><^<v<v<v><^>>v>v^v>^<^><<<>^<<>v^v^<v^v^vv>^^<v^<<<<<<^<^v^v<<^<>vv<>^<^<^<^><^^<^><^v><^<vv>^v^>v<vv<>v^^<<<>^<^<v^<^<^>v<^><^<>>vv>>vv<><^<^>>^^v^^><>>><<<>v>v^<<<<v>>v^<v>v>>^v^<^vvvv^^v><\\nv<^v>v>^v^^<^>v^<>v^>^>v<<vvv^^<v<v^^^vv^>v>>^^>><^v<<>v<>><^v<<^<^<vvvv<>v<<<<<v^v<<vvvvvvv<>v>><>^^^vvv^><^<v<>^>vv>v>>^<><>^v<^<^vvvv<v<<><>v>^><<v^v>^>vvvv<<>>v^v>><v<v>v>>>v<>>^>^v<<^><<^<<>^<^<v^<<>v<<vv<<v><v^v>^v<<<>vv>vv^^><vvv<^<>^<<^>^^<<^>^<>>v^^>vv^<<>v<v>>v^^vv<^><^<vv>>v><vv^>^<v^v^<^vv<<^<v<<v>^>^v>>v^v<<vv^<>vvv>^v<>^^<^<^<^<^<vv^>>v<^v>^v^<>^^<>>><<>><<<^>^^<v><<<v^v^<<>^<<v<v<^>>>^vv<<><^><^v<<^<^^^<>v>^v<>v<^<^<<v<v<v<^><<>><<^vvv<^<<^<^^>v^^^vv>><>^^>v>v<v<><^vv<v^^v>^<<><><^<v<^^>>><<<<v>^v><^>>^<<^^<^>^v^>>><^>^^>v<>v<><<^^>^>^<v><vvv>^>>^^>>>>^><^^>vv<>^^>>>v<<<vv<^<<v^vv<v<<^^v<^v<v><<v><><><v^>^v<vv>v><v^<>><<>^>^<v^>^v>vvv>^v><vv^v^v<v>^>^vv<v<^^<<<^v^v>^^>^^^<v^v<^v<vv><<>^v>^><v^>v^vvv<^>vv>^<^<^vv^<>>vv>v>>^<v<v<<>^>>v<>><>^<<^^^vv<<<^v^^v^<^><v^v<>><^><<^><<^<>v^v^><v^^>v^><>^>><v>><<^v>^<>vv>>v^<<<v^<<v^v^^^<^<v<><>v<^vv<>vv<v^<>^><^<>>>^v^^>>v<>^^v>>>vv^<<>vv^<^^<<^<v><^^>vv^vv^<>^v<<>^<>^>>vv^vv^^>>v^v><<<>>>^><vv^>v<>v^^><<v^>v<<>^>>^>v>^<^>v^v^><^^v>\\n^>vv^<><^^<>vvvvv<^<v^^v^<vv<^^^<<<>><^v><<<><<v<<<^^<vv>^v^^>^v^<>v<^>v^<<<^v^^^<v<v<v^<<<^v<<<<^^<^v>^>v^v<^^v>>>v^<<^<<><>^<>^<v<^<v<^^<v><v<v^>vvvvv>><^>v^^<vv<^^^>>^<><>^^<>vv>v<vv^><>^v^^v<^v^<^^<^<vvv<v>v>v>>^<^>>vv^<^><><>^^v^v^>^<>><vv>>v^vvv>^>^v>v>v^^<^>>v^v><<>><^<v><<>^><^<vv<<v^><^v<<><><<^>><v^<^<v<><<^v>vv<v>^>v<vvvv>>^>v<^^<>vv^<>v>>><^v^>>vv>>^v^vv^>>>>^vv>v>><<>><v^<>v><v^><^^>>>><^<<<v^<v>><v^v^^<^<^>><^vv><><<<vv<v><v^>vv>v>>>v^<>^><v<<<^<v>vv^^>^<<v<<<^^<<>^v<><<>vv<^>v<^^v<v>v^<v^vv<^vv<^^v^>v><^vv<v<><v>>v>v>^>^<v^<v>v>^^<v><^^<v^v^>>^<^^^^<vv<v><v<<>v^^>^<^^<<>v>vv<<^^<>^v>>>^<<^<v>>v>>^v<<><^<<<>^>>^>>^>v>^>v<><vv<^^^^vv>^v><><<vvv>vvvv^v>^><v^<^<v^>v^>><<v<v<^^><vvv^>>>v<>v<v^<vvvv^>^v>>^<v<^^><vv<>v^^><v^>^>v>^><>>>^>^>><^<v>>vv<>vv>^vv<>><><>^v^<<<<vv^v<<^><<vv<v<^>>>v<v<>><vv><<v^^v^<vv<>>v<>^v^>^^<<v<v<^<^>v^>v>^><^v>^^v>^^^<v><^vv<v<v>>^>v>^>^<<>v<vv>^v^<<<>v>^^v^>^vvv<<vvv>><^v<v<><^^>><v^v<vv^<v>v<vv^v<<v^>^^>><<>><v<^>vvv><v^^><^>>^v>v^v>>>^<^<<<v^^^v\\nv<<v^<>vv><<v<<v^^>>v>^><<v^><<><>>vv<>>^<<<v>^<v>>^><<>>^>^^<vv>v^>v^<>>>^<v<<<v^<<^v^<>^<v^<>v<<<<<<>v<>><<>vv^^<>vvv^>^v>^<v^v^<v<^<>v^v^^^><v>^^><>^^v^^<^v<v^vv<^v>>^<vv<<v><v><v<><^^>><^v<>v^>v^^>>^^<^>><^v>vv<<^v>v^^<v^vv^>>^>^<^>><v<<v<<><^>>v>>^<^>>^>>>^^^>v<>^>>v<>><<^vvv><v^>>^^vvvv<v<>vv>>>v><<^v^<<vvv^><<<<v>^<<><>v><v<v^v>>^^>>v>^<<<v^^<<v>>v><>v<><^vv>^^>>v^^><^^>>>^>vv>^<>^^<^^v<<<<<^^v^v<>>^^v>><>>v><^v><<<<^<><>><><vv<^<<^<>>^<><<^>v>v<>^<<^>^<^^^>^v<<vv^<>>>v^<<^^>v>^vv>^^<vv<v^^>v><vvvv^^^v<>vv<v<^v^<^<^vv>^<v<><<<>^><v>v^^v>><<^v<^^>vv<v^>^>v^^><v<vv^^vv<^v>^><^^vv^<^^^vvv^v<<><vvv^<v>><<>>>>v>^v^vv<v>^>v>v<>v>^>^<^>^><>v^^<^<^<vvv^>^v<>><<<<^><><>^v^v^vvvv<<<<v<^^><vv^<^<^<^^vvv^>v^v>>^>v>^^^<^v<<<><>v>>v><>vv>^v>^^<<>^<<<>^><>>v^v<v><^^<<^^<>>><vv>v>^<<^<>>^vv^^^>^vv>>>v^>^>^<v^v<<<^<<v>^vv>vv^^v><<<<v><<v^vv^<><^<>vv<<v>>>v<v<<^<^^^v^v<<^>^<^>vv>^^<><v^v^<<^^<<>>><><<v<<><vv^vv>^v<>>v^^<>>^>>>v<^<^><v^v^>v>>^>>^v^^vv^<v>^><v>vvv>v><>^><<v>v^><><v^v<^v>v<v>>v>v>>^\\nvv<<^v><<v^<^v<>>v<v^<^v^>v^^vvv^>vv>>^^>^<^>^^^v^v><vv<v^<<v^^>v^>^<>><^^v<<vv>v^<v>v^<^v^<<^^><v<>v^>^^<<^>>>^<v^>>vv<^^^^^^^<^<v^^>v^<^vv<^>vv<^vv>^<^<><^<<>>v><<>^<<^v^><<v^v^^>v^^>^>><v>v>^^<>><^>^^>^v^v<v>>vvv^>>^v^>><>><<^vvv<^^>v^<<v><>><>>^v^>^<<^<<^v<v>v<^^v>><v^<v<<v^<^v^v>^>v^<>>>vv^v^^vv^^<^vv<><<>v>>>^>^^<<^<><>><^>>>^v^<><>^^>>>><v<<vv^v<<><^>v>v>^<<v<vv<v<>vv^^<v>^^<>^><v>v^>^><^><^^^^v^v<v^><v>vvvv<><<<><v^^^^^v<<v>>>vv<v<>>^<>><<<v<^>^>>^<<<<^>^<^^v>><^v>>v^v><<^<^<<v>>>>^v^v<v^v<vv^^v<<>v>^>v<<v>^^v><><>^<v^><<<<>^^^^<<vv^^v<^<v^<<v^>^vvv<>>v>>>>v><^>v>^v>v<>>><>v^<<<<>v>^vv<^<<<>^>><^>v>v<<>>><^v><<<>v^v<v^><>^^><<<v^^>^v^^<vvv<v<<>v<^v^^^^<^v<<v<<vv<^<^>vvv><><^v>><><vv^<^^^<<v>>^v>>^<vvvv^^^>>^v>^v^<v^>^<^^^^^^<>v<>v>^<>v^v>^<^v>^<v<<^>vvvvv>^vvv<<>^v>>v>v^v<<v<^^>v^v<vv>^>vv<^>>vv^^>v^>v><v<<>>>^<>vv<>^^^v^<v><>^v<<>>v>vv<vv^^<>vv<<<>v>>^^^^v>^^>>><<^^>v>>^v<v>^<v<v<>v>><v>v>><>^^>>^<<v>^<<<vvv>vvv<>^^v><<<<<>^<vv^vv^>v^v^<>>^^>vv<><<<<v^<^vv^^^^v<v<>>^<<<>>>>^v>\\nv<v^v^><vv<^v<v<^<v^vvvv^^v>^^<><vv<>>^vvv^v>^v>^vvv>>^<v^>^^>^^<>v>^^v>v^^vv><>>v<<><<<>^<^v>>^^^v><>^<^<<<^<^<v<<>><<^v^<<<^>>><v<><>^>>v<>>v>v<v><<<<^>^<^v>^<>^<v>v>v^^^><^>>><<v^><^<<v<v^<v<^v<<^>>>>vv^<>>>v<v<>^<^>v^<v^>vv<^><><v^^v<><^<<<><^v^>>^<^v^<><^>v^>><<v^<><^v>^<<vv>v<><<^^<^<<v>^^><^v><<>^<<>^>v<>v>v^<<^v^v><>>>v^v<v><^^<>><^v^<vv^<vv^<<><>v>^<v<>^<>>v^^<^<<>v<^^<>^^^v>^^v^^^<><v^v>v>>>><>v<v>>v><<^<>v^vv>v^<v<vv<v^^^^<^v^>v><^><^>>v<>^>^^^^^<<><^^v>v<><<vvv<^>^<>vv>v<>><^^<><>><v<v^v^<^^v<vv<<v<<<vv<v><v>v^>v^^<vv^^v<vvv>><vvvv>>v<v<<<><<v^^v<>^>^v>^^^>>^v^^>><<<v^><>^<v<^^^>>vvvv^><<^^^<>>^<v^vvvv^v^v<><<v<^^^vvv><>^<vv<>v<v<^v>vv<vv>>>>>^^vv^<^<<<>^><vv<^vvv>^^>><<<^><^v<v>v><>v<v<v^^v>^^<<v<^^^v<v<^>>^<><v^v<><<<><vv^^^^v><>vvv<v>>vv><vvv^<<^>v>v>>v<>^v^>vv>^>>v>^>>><><<>>^^<>>^><^<<^>^>vvv>>^vvv<>v><v>^vv<<>v<<>>^v<<^>>v>><>^^>v^^<^>>v><>v^>v<^<>>vv<^^>><vv<<v<>^^>vv^>^<v<v>vv<v^^^<>^><^^^>^v>^v<v<><><^<^<^<^v>v>^^><v>^>>>^v^v<>vv<v<>^^^^v>>v^>>><^>>v<<<^^<^>><v^v^v\\n<<v>><v^v^^<<><v^<v<<><>vv^^<^v>^v>v><>v<><<v>^^^^^>>><<vv^v^<>vvvv><v>v>v<>>v^>^v<^v>>v<^<vv^v<>^<^^^>v^v^>>^>^vv^^^vv>^v>><>^><><^>v^^>v<>>^v<v^v^^>>^^>>v>^>>v^>^^^>^v<><^v<v><<^>vv<<><vv<v^v<^v><v^^^<<<v^<<>^>^<v<vv<<>^>v<<vv><^>vv<<^vv<^<>>>^<>>v>v>>><^v^<v<<<^^v^v^>^^<v<^<>v^^>vv^v^<^^>><^v<<>><><v^^><^^<<>>>^><^>v^<v^^><<<^<<v>v<>>><^>><<>>v^<^vv<><v>v^v<^><<v>v>><<^><><^^>><<>^^>v<^<vvv<vvv^^<v^>>^v<>v^vv^^v^vv^vv>v<^>v^<v<vv<<vv<^^>v^><^v<^^><vv>^v<v>>>>v^>>vv><v<v<v<^v>v><^><<<<<vv>v<<<>v>v<v><>^<v<^>vvv<<v><>^^<^<^<<v^v^^v<><^><v>^<^<^v>^<>>><v><v>v>v^<v>><vv>^>><^v>v<^^<><v>><<><^<<<>^vv>><<<v<^v^<v^>^<v<>^<>^^<v><^vv>><<><>v>v>>>>^<>v<vvv>vv^^^v^>>v><<^>>><>^v^v<>><<<>v>>><<<<><v>><^v><><^v<^><<<^vv<^vvv^<<<vvvvvvv>>vvv^<<<v^>^<<^<>v^<><<>>^<v<<<^><v^<>>>>^>v>^>^><<<^vv><^<<<^^<>>v^v<v^v><v>^v<^><^vvv<<^^^^vv>><vv<<><^>vv<v<^<^v<<^<v<v^<><v>>vvvv<^^<<^v<>^>^^v^v>v^^<v>>><>vv<v^v<^><><>^^^^^v^>^vv<^<^<v>^^>^<v<v<><>vv^<v^v^vvv>v^^v<<<v^v<v^><v^v<<<>^>v^><<v>>>vv>v^>><>^v>>v^\\n<>^>><v^>v>v<<>^v>^>><<>^>v>^<v>v>v>v<v^v><<<<v<>>^^v^>v><<^^v<^^>><^vv><<^<v^><v>>v^<v^v<^>v^>^v^>v^v^>>>^<><<<>^>>>v<vvvv<<>>vvv<v><^^<<><^vvvvvv<<^v>^^^v^^>vvv>>v>^v^vvv^><>><^<^v<<>^^>vv<<<^<><^^v<^><>v^v<><>v>vv<v^>v>^^>^v<>><>vvv<^<v><<^>><^v^vvv><^><<^<^<v^v<v<<^vv<>v^^><v>>>>v^v<<><^><v^<<>v^^>^^<>^<>^^v<^<>>v>v>^<<v^^^v^>^^<<<vv>^^>>vv^^<>>^^<>v>>^>^v>^>v>v>>vv<>v^v>v^v>><<vv><>^^<><>^><v<<<v>v^<<<v>>>>vv^vv><^^>>v<v^<vv<^<>>>vv^<^<>^vv>vv<>v<^>^>vv^v<<<<>^>vv<<^v^v><^>vv^<><>^><v<>v<vvv^>v^^v<v^^v^^<<v<<vv>><v>>>^vv>>^>vv^><v^^^<vv><vv^^<^><vv^^<>><<<<<v<<v<v^>^<v><^<^^>v<<>v<<vv^<>v><<<>^<vvv>><^<^>^v><>>>>>^<<^<>v>^<^<<v><v>v<>^v<<^><<<^^>>vv>^<v><<><>v^<^<><><vvv><^^^<vvv>v>^v><v^^v^v<<^<^>>v^^>vv<^><><><>^^>^v>v<v^^<>^v^<><^<>>^^<>v<^v^^>^v<<<v<<v>v<>^<v>>^>v^vv<^^<v^>>^>><^><^v<v>v<>^v>^v<v>^<<<>>v>v<<>v^<<vv<^><^^^vv>^<<vv<^<v><v><^^^v<v^<<v<^^<>>^<<v>^<><^<vv^v<<<><<v>v>v><v>v<^^v<<v<<v^v^<<vv^vv^v>^^<<<<<vv^vv<^^><^^v><>v<^^^>>vvv<><^>^v<v<<^v<<^>^>^v>^^v>>vv>>v^><>^>\\nv^><v^v<<<v<v<<<<<<v>^>>^><<v><><>v<<v>>><>v>^>^^<><<^<^>^^^^<<^vv<^<vvvv>^^vv^><<>>>vvv<>>^v>vv>>^^<vvv>v<<^<^>v<v^><>^<>^^vv^v><v<^>^<v<vv^>^^><>>>v^v<<><vv<<^^><>v^<^>v^^><<vv>v><>>^v>v<v>^<v^v^^<^<v<^^^<^<>v^<v<<>v>v^>v>v^>>^^^^^>^<<vvv<>^>^^vv<^^>>v^v<^><>vvv^^>^<v<<<>^<^^>>>v>>v<<^>v>><>^<>^v>^<<^<<>>>v^<>^<^v<<v^^vv<v><^^v><^vvv<v^<>><v<v^v<vv^^<^v^<v<>>>>>vvv^^^<vv^<^^>><^<><>v^><^<<v^v>^^<>>v^>^v>^>v<vv^>v<>^v<>><vvv><>^><^v<v^v^^><^<>^^v^>>>v^^vv>v^^<^>>^^^<>v^><<>^^<v><v^<<><><^v>^vv<<^<^<v>^<vv<<^^<>^v<vvv<>><v<>^^>>>^^><v><^vv<^v<<<<^vvvv^v<^v<>^vv^<^<<^<>v<v^v^^>^v^>>^>^>v<<^^vvv><><vv^v>v<v<<v><>>v^<>v^<v>v<<^<<^^>^v^^v<^<^vv^v>v^v<v<^>v<>v^^<^<^vv^^<^<^><v>>><>^<<v>^v^>^>v<>^><v<>^^v<<^<^^><^v>vv^<^<v>>>v>><vv^^>^^^>>><>v<<<^<^<vv^<>^v<^>>^>v^<<<<v^v>^<v<v^<>^<^v^>^>><<<v^vv^^^v<^>^>^<^^<v<^^^vv<>>>^>vv^<>>^^<><^^vv<>><>^><>^vv><^v>v^>vv>v^>v<^v>v^v>>v^vvvvvvv^<><vvvv^>v^>^^>v>^vvv^>v>v<><<<>><v><<<v<^^<>v^<>>^<<^^v>v>^v>v^^>^>^^^^^>v^<>^vvv><>vvv<<>^>v>vv^vv^v^>>^v><v^\\n>v>v>vv^><^<><v^<^^>v<>^><^>v^<v^<^^^<^vv<v<>>>><<v><vvvvv<>v^>vv<v^^vv^v<>v^<>><<^v<>vvv^v>^<v>^>v<^^>><>^<<>v<^><v<^><<v>^v^<<^v<<<><^<><<<v^v^<>^<v^<^^^v<vvvv^vv^>^<vv>^>v<<>>^<<v^^^v^<vvv^v^v<<>vvvv>v^><v^v<<^<vv^v<<<>v^vv>^><v^<v>^^><^^v<>^<>v^v>^v<>^>>^v<^vvvv^>>><><<<>vvv>vvv<>>>v<vv>v>v<<v^<<<<^^<^^v^<>^<v>>^>v>^^>^^^v^^v<^>>>v^<vvv<vv<>v>>><v^><>^vv><v<^vv<v^^^^^vv<vv<<<>^^vvv>>v<^v><<^v>v<^<>^<vv>vv<^^^^v<><><<<<^>>v>v^>>><>vvv>>><<<>^<v><^><v><v^<>v<>^>^vv<^<^vvv^>^>>^<^^vv>^v^<>v><v<^^>v^<<v<<>><v><>>^^^v<>^^^vv^>^<<>^>v><>vv>>^<<>>v<<^vvv<<>^^><<>>v<^v><<>v><><<<v^^^vvv<<<v^><>>vvv<^<^>^^<^<>><v<v><<v><vv<>v<<^>vvv>>v<v<^><v>v^><vv^^><<<^><<>v<<<^^v<<v<>^^<>>>^v>v>>>^>><<<^^^^>>v^<^^<<^>>v><<^>>>^^^^^<>^<^<vv^>^<<^v<v^v<^>>v>>v>^v^v<>^>^^>v<>v<<^v>^<<v><^<v>>>v<vvv^<<^<^>^v><>><<^^vvv^v>v>^<v<><<<v>v^<vv>^<<<>^><>^<v^>>vvv^>^>>^v>><^v>v<^>^^><^<v^vvv<<<>v^vv<^^<>v<>^<<>v>>^<^^vv<<<>^^^^<v>^<>>v^vv^v<>>><<>^^<^vvvv^>v<^<<><<^>^^v^<<^<v><^v^^v>><v^^v<v>><>>>vv^>>>^<>^^<<^^^>\\n^^<v<>>>>vv^^<<>v>^^v><<<>^<<><<vv<v<<>v>vv^>^<<<<>><^^^v<^v><><^<>^^v><<<vv<<v^>^v^>>^<>^<<>>>>>^>v<<v^>^<v^^^><>>>^v<v<^^v>^>v><<^^<<v><><^vvvvv^<<v>^>>><^<<><^>^<^><<><<v^vv><<^^<v><^vv<>>^^>^v<><>vv^v<^<<><<><<><v^vvv^vv<^<<<v>>><<^><^vv<<^v>>><><v^^^v<>>^v<<>v>vvv<>^>^v<v>^v>v>v<>v>><><^<^v^<v<v^>>>^>v>>>^^>>>v^<<^v<<^^>v>v<^<v<<>^<><>vv>>>^^<^^<<>vv<<<v<><<^^^<vv<^>^>>>^v^^<>><<^v^<>v^^v<^^<v^>>v>>v>><>v<^^v<<<<>v^v><>>^>^>>^v><^><>^>^<<^v<v<^<<vv^^<>>><^><^^<<<^^>v>^>><<<vv^^v^<^<>^v^<>>>>^vvv><^v^v<v<^<v^><v^^><vvv<<>^>^vv<>v>v><<>>vv<^vv^v^<<<><^><vv>v^<^<v^v<vvvvv>vv^>><^>><>>>>^vv^^>><v>>>^<>^^^<><vv>vv<^<v>><<^<^v<>^<<<^vvv>>><<v^^<vv>>>v^v>^>^><v>^vv<><^v>^^>^<v>v<>>>v>v<<vv>^><v>><v^>v>^<^v^<^v<>>vvv>^^^<v^<<<^<><v^^>^<<vv^<^^^^>><^>^><>^^^>>>^^vv>^<v>v^<<>>v^^<<><^v^>>^<v>>v^>^<>><^><<>^<v>vv<vv>^>>vvv^<<vv>v<>>><>vvv>v<><^>>>v^^^^>>>>^v<^vvv<^vvvv>>^><v^>>^<^<>^<<^><v<v>^v^<^>v^^^v<v>><v<>^v^v<><v>>^^v^<^^^^><v<^^v>^<<^<>><^v><v^<<<>v<^^^vv<v>^<^v<>vv>^<^>v<<v^v^<>v^v<v\\n^^<<<vv^>>^<v<<>v>>v^>>v><vvvv<v<><v^v^^<>v>>^^<^v<>v<>>>v<^v^<v>^^^<<<^>^^v^vv>^<<v><><>vv<^^^v^^vv>^vv^^>vvvv^vv<vv>v<>v^^v<<>^<>^v<<>vv^>><v<<^vv<>v^^>>><><^^<v<<vvv^>^<>^<>^<><^><<<v><>^v^^v>^<><^><<^>^v<<>^><>^>vv^^<<vvv<v^v<<<>><v>^v^^^>v>^<<^<v<v^<^<v>>v^<^^^>>^>v<^<><^v><^^v<v^<><<>>vv>v<<<v^vv>^^><>^<^>v^^<^^<<<<<^v^>v<>v^<>>>>v<>>v><<^^^>><>^v^^v^><^^v<^v>vv>v<^v<<v<vvvvv^<><v^<><<<^<<v<v^^<^v^>><>>><>^v^>>v<>>v^>^<^^<v^>v><^v^^vv>^<vv<>>vvv<>^^<<vv^v<v<<vv>><v^<vv^<v<<><v<vv<^v>>^^>>^>v^<v<vvvv<>^v>v^<^v<^><<^v<>>^^<>v><>v^>vvv>vv^^<v>^^^<^v^^v>v<v>>^v^v^v^<<v>>^><v<>^vv><^><>>>^<^>^^vv<v^^^^v>>>^^^><v^><v^^^v<>v>^>vv^^v^>v><<^>v><vv^v^>^v<<vv^^<^v>vv><<v<v><v^v^v><^>^^^^><>v<<v^^v>v><><>><>>^^>>><<<>v<^^vv^>vv^v^>^^>>^^<<>vvv<<<v><vv>><<vv^vv<>^^<^v^v>^^<^v>>>^<^<>^^<>^<<<<>><^<v><<^>^^v>^><<v^>>^^^v><<<vvvv^<v>^v<><^>>vv><^>>>^<>v^<<<>^^v^v><^><^^v<^vvvv<><<^>>>^<v^^<<vv>><<><<><<^>v<>>^><^^^vv^^v<^>v>><^^<^>^<v>^v^<^><<>^v><><^v^<^v^>><v>^v<vv<^v^^v^^vv>vv>>^>>><v<><>><v<\\n>^<v<v<<<<^v^vv>><^>^^<^vv>^>v>^^<^^<v^>>^vvv><^v>^v>vvv>v>^<^^v^vv^v^v>><<vv>vv<vvv>>>^^>^><<^>^<vv^>v<^^v^>vv<^v<>>vvv^^<>>^v^>^^>^^><>^>v>><^<^><v<^<^v^><v><<<^v>^>^<^>v<vv<>^v^^>>>><v>>^>^><^>^>>^vv^<vv><v^^^>^^v>^v<>>v<><<vv><^^^^^<v^>v>^^<<<>^<><^>^v<<>^^>^^^v<>v><>^<<>^v^<<vv>^<v<^<v^><vvvv<<>><vv<<>v>vvv^^^^v<^^<^<>>^><>v<^^>^^^^v^<>><^>^^^<^vv>^>^^^>v^v>^v><>^^<>v^<>^^<>v^^v^<><^<v^>>^<<<<vv>v><<<vvv>^<^<^>^^<<v<><>^<v<^^>>^^>v^<<<vv>v>^>>^^>^>>>>v>>^<<>vv<^v^>^>>>>^<v><<<><v>><>v<><>>v^v>v^^<v^<vv<<<v>^^v>>>^<^vvv^vvv^>v>>^>v<>>v^<^v><><<vv^^<>v>^v>v>><v^<v^v>^<^v>vv^<<>>>^vv>><>^<v<<<<v^^>><<<^><^><^v>><<^^^v<<^vv^^><<<v^<><<^<>^><v>v^v^v>^<>vvvvvvv^>^>^^>v<><^><<>^vv<>^v<v^v<>v<<><v<><v^vv>v<^v^^<vv^>>vv<v<<>>^^>v>^^vv^>><^v^^^^<v<vv^v^<<<>v<<^^^vv>^^vv>>>^^<<^v<>>v<vv>>>vv<^^<>>^>vv^>>><<>^>v>vv<^<>vv>v^^<<^^^vv<>^^v^<^>^^>>>v>>^>^v<^><^<>v^v<v^<>>><^<^^<^^>^^>vv^>^><<<v^>^^^vv>><vvv^v>>^vv^<<v>vv>^<>^><v>vvv>^>>><v<^<<>vv>>>^<v^v<v<^^^<v^vvvv^^^^v<>><vv^vv<>vv<<<<<<v^^^^^\\n<<^vv^^vv^><><<>>><<<^>^<^v>v>^><>>>^>vv>v^<<<vv>>^^^v<>v>vv<<<vv<<^v>v<^<v<^>^>v><^<>v><<><v<>>>v>v^v>v>v^^^v^v>vv^^>^><v^<<v^v>>^><v^^<<v^^^<^^^vvv<<^>^^<^^<^<<^^<v<<v<>v><v<>v^^^<vv^vvvvv>^v>vv^^>>vv><<^<v<^^>^<><v>><^^^^v>^>v^><v^>v>>><>^^v^<><>^><<<>^<^^>^>vv<>>^v<<^<>>>v>vv<vv><<vvv<<v<<<>^>>>v<<^^v^v<vv<v^^<>^^^<<^^v<^v^^><^^^>vvv<v<v>v^vv>><<><><vv><<><v>^<<>^^^>^^<^<^>^<><>v^^><^<^vvvv>v<v<>^^v<^>v><><^^^>>>>v^<<<<vvv>><>v<v<>^><^v>>v^>v^><v<v><^<>^^^<^<<>^<<<v<v^<>^^>v<^>^<^<^^vv>v<vv>><^<v^v^v<>vv^>v<^^^<v<v<>>>v<>>^^^<<^^v<<v><<>vvv^>^^<^>^vv>v><^<^<>>><<v<<>v>^>v<<>>^<^>v>^^<^><<<<v^v^<^>^^>>v<v><>>>^^>^>>vv>v^v^<v<<<><>>^^>v<^^>v<v<<<^v^^>v<v<v<>^<^v^vvv<<>^<>^v><vvv^^^v>v<<^v<>>vv^^^v^<vv^<<><^^^v^>>><<<v^<<^v<<v<><^>vv><<><v<v><<v><<>^v<>v^><v^v^<>v^>>^>><v<v<<<>v<^>^<v<^<v>v<><<<^^>^>^v<<v>^<<v>><^><^^<<^>>>>>^>^><^<^^^<v^^v<v<v^^v>vv^<^v<><>^><<>^<^^vv<><>>>^<v<^v>vvv<>^<<<>^^<^^^v<v<><<^>^>vv>>^vv^^>^^<^vv<<>>>vv<^<<^vvv^<^^v^<v>vv<v><><>^>^^<<<^<v<v^^>><v^^vv>><>>^>\\n>vv^>v<<<>^>>>^^>><>vv<vv>^>^v^^^^v^v^>^><<v<v>>^<>v>vv>v^>^<<vv^<^v>vv^v><>>>>>^^<^><>v>vv>v<^>vvv><^^^>^^>><>>^^vv><v^v^<^<v^^v^><<^<v<<v^<>^^v^v^<>vvvvv<^vv><<vv<<<vv>^^^>vv<><><^v<><v<v<<v>>v>^^vvv<^^<<<><>^^><^v>^^<^>v<v><v<v^<^^>>>><<v><<>>^>vv>><vv<^>v>^<<v>><vv^>^v^<^>>><><v^<><^v>^^>vvv><vv^><v<vv^><<^v^^^vvv>>^>^v<vv<^<^^v>^<v^^v<<^v>^<<>>v^<^<^>>^^<v>v^^v^<>^v<v<>><^>>>>>>v<<<<>^^v><<>v^vv<<>^<^>>v>><^vv>^>vv^<v>^^<v^^>>^>>>v^^>^^><^v<><>^^>>>^v>^><<^<>^^^>^v>><v><>>v^>vv^^v<<><v^^^^^vv>^<^<v^<vv><>v><v^vv>v<<>v><<vv<^<v^<^>>^>^><^v^v>^v>><v^v>v<v<^v^vv>v<^vv<vvv<v^>^<^>vv<^^>^<^<v><^><<<>>^<<^^<^<v<vv<<^>v<v>>v^>^>^><<>^<>^^>v<<>><^v>>v>>>>>>>v^v<<^<^><^^<<v<vvv^>>v<<><><<v^^vvvv^<^<<>^<>><v>>^><^v<^>v<^><><<<>>><>v^^<<^<<<>^^<^^^^>^<>>v^^vv<vvv><>vv>>>>>>^v<>v^^<<>^<^><v^<^^><v>v^<<^<^>vv>^^>vv^>^v>vvv^>^>>>>><<<>vvvv<^>>>>v>^<v>v<v>^<^^v<<><^v<<>>v<v<v^^>vv>vvv<><>vv<<<^^>>>>v<>^>^v<v^vv^v^<^>vvv>v>^^v^v<>vv>>><^<>>v>vvv^>vv<<v>^^>>^^^>><><v^<^^v>vv<^^v^<v^v^v<<<^^v<v>^<>\"","export default \"#################\\n#...#...#...#..E#\\n#.#.#.#.#.#.#.#.#\\n#.#.#.#...#...#.#\\n#.#.#.#.###.#.#.#\\n#...#.#.#.....#.#\\n#.#.#.#.#.#####.#\\n#.#...#.#.#.....#\\n#.#.#####.#.###.#\\n#.#.#.......#...#\\n#.#.###.#####.###\\n#.#.#...#.....#.#\\n#.#.#.#####.###.#\\n#.#.#.........#.#\\n#.#.#.#########.#\\n#S#.............#\\n#################\"","export default \"#############################################################################################################################################\\n#...#.................................#...#...#...............#...............#.........#...............#...#.....#.........#.....#........E#\\n#.###.#.#####.###########.#.#.#####.#.#.#.#.#.#.###.#####.#.###.#########.#.#.#.#.#####.###.#######.#####.#.#.#.#.#######.#.#.#.###.###.###.#\\n#.........#...#.........#.#.#.........#.#...#.....#.....#.#.....#.........#.#...#.#...#...#.....#...#.........................#.....#...#.#.#\\n#######.###.#####.###.###.#########.#.#.###############.###.#####.#########.#.###.###.###.#####.#.#.#.#########.###.#.#.#.###.#######.###.#.#\\n#.........#.....#...#.#...#.........#...#...#...#.............#...#.#.....#.#...#...#...#.......#...#.....#...#...#...#.#...#.....#...#...#.#\\n#.#######.#.###.#.#.###.###.#######.#.#.#.#.#.###.###.#.#####.#.###.#.#.#.#.#.#.###.#.#.#.#######.#.#####.#.#.###.#####.###.###.###.###.#.#.#\\n#.#...#.#.....#.#.....................#...#...#...#.#.#...#...#.#.....#.#.#...#...#.#.........#...#.....#.#.#...#.....#.....................#\\n#.#.#.#.#####.#.#####.#.###.#.#.#.#.#.#.#######.###.#.###.#.#.#.###.###.#####.###.#.#.#.#.#.###.###.###.#.#.###.#####.###.#####.#.###.#.#####\\n#.#.#.#.......#.....#.#.....#.#.#...#...#.........................#...#.........#.#.#.#...#.#.....#.#...#.#...#.#.....#.#.....#.#.#.......#.#\\n#.#.#.#######.#####.#.#######.#.###.#.###.#######.#######.#.#.#.#.###.#######.###.#.###.#.###.#####.#.###.#.#.###.#####.#####.###.#######.#.#\\n#...#.......#.......................#.#...#.....#...#...#.#...#.#.#.......#.......#...#.#.#...#...#.#.....#.#...#...#.............#...#.#...#\\n#.###.#####.#########.###.#.#####.#.#.#.#####.#.###.#.#.###.#.###.#########.#.#######.#.#.#.###.#.#.###########.###.#.#########.###.#.#.###.#\\n#...#.....#.#...#.........#.#...#...#...#.....#...#.#.#.....#...#...#.......#.......#.#.#.#.#.........................#.......#.#...#.#...#.#\\n#####.###.#.#.#.#.###.#####.#.#.###.#####.#########.#.#####.###.#.#.#.#######.#.#.###.#.#.#.#.###.#.###.#########.#.###.#####.#.#.###.#.#.#.#\\n#.....#.....#.#.#...#.#.....#.#.#.......#...........#.....#.....#.#.#.#.#.......#.#...#.#...#...#...#...#.......#.#.....#...#.#.#.#...#.#...#\\n#.###.#######.#####.#.#.#####.###.#######.###.###########.#####.###.#.#.#.###.###.#.###.#######.#.#.#.###.###.###.#######.###.#.#.#.#########\\n#.#.......#...#.......#.#...........#.....#.............#.....#.#...#.#.....#.#...#...#.#.#...#.#.#...#.#.#.#.............#...#.#.#.#.......#\\n#.#.#.###.#.#.#.#######.#.#####.#####.#######.#########.#####.#.#.#.#.#######.#######.#.#.#.#.#.#.###.#.#.#.#############.#.#####.#.#.#####.#\\n#.#.....#.#.#...#...#...#.#...#.#.....#.....#.....#...#.#.....#.#.#.#.....#...#.......#.#.#.#...#.#...#.#.....#.#...#...#.#.......#...#...#.#\\n#.###.#.#.#####.#.#.#.###.#.#.###.#####.###.###.#.#.#.#.#.#####.#.#######.#.#.#.#######.#.#.#####.#.#.#.#####.#.#.#.###.#.#########.###.#.#.#\\n#.......#.....#.#.#...#...#.#.#...#...#...#.#.....#.#...#.#...#.#.#.......#.#.#...#...#...#.......#.#.....#.....#.#...#...#.............#.#.#\\n#.###.#######.#.#.#########.#.#.###.#.###.#.#.#####.#####.#.#.#.#.#.#######.#.###.#.#.#.#.#######.#.#######.#####.###.#.#.#.#####.#########.#\\n#.....#.....#.#.#.........#.#...#...#...#.#...#...#.#.....#.#.#.#.#...#...#.#...#.#.#.#.......#.........#...#.#...#...#.#...#...#.#.....#...#\\n#####.#.###.#.#.#.#######.#.#####.#.###.#.#####.###.###.###.#.#.#.#.#.#.#.#.###.#.#.#.###.#####.#######.#.###.#.###.###.#.#.#.###.#.###.#.###\\n#...#.#...#.....#.#.....#.#.#...#.#.#.........#...#.....#.#.#...#.#...#.#...#...#.#.#.....#.......#...#.#.#...#.#.......#.#.#.....#.#.#.#...#\\n#.#.#.###.#.###.#.###.###.#.#.#.#.#.#######.#.#.#.#######.#.#####.#.###.#.#######.#.#######.#####.#.###.#.#.###.#.###.#####.#######.#.#.#.#.#\\n#.#.#.#...#.....#...#...#...#.#...#...#...#.#...#...#.....#...#...#.#...#.#...#...#...#.....#...#.#...#.....#...#...#.......#.......#.#.#.#.#\\n#.#.#.#.#.#####.###.###.#####.#######.###.#.#####.###.###.###.#.###.#.#.###.#.#.###.###.#####.#.#.###.#######.#####.#######.#.#######.#.#.#.#\\n#.#.#...#.#.....#.....#.............#...#...#...#.....#.#.......#...#.#.#...#...#...........#.#.#.....#.......#.....#...#...#.#.......#...#.#\\n#.###.###.#.#########.#.###########.###.#.###.#.###.###.#########.#####.#.#########.#.#######.#.#.#####.#######.#####.#.#.###.###.#######.#.#\\n#.....#...#.........#.#...#.......#...#.#.....#...#.......#.....#...#...#.....#...#.#.#.#.....#.#.#...........#...#.......#.#.#...#.......#.#\\n#.###.#.###########.#.###.#.#####.#####.#########.#.###.###.###.###.#.###.###.#.#.#.#.#.#.#####.###.#####.#.###.#.#.#######.#.#.###.###.#.#.#\\n#...#...#.....#.....#.#...#.#...#.#...#.....#...#.......#...#.....#...#.....#.#.#.#.#.#.#.#...#.....#.....#.#...#.....#.....#.......#...#...#\\n###.#####.#.###.#####.#####.###.#.#.#.#####.#.#.#####.###.###.#####.###.###.#.#.#.###.#.#.###.#######.#####.#.#######.#.#.#.#.#####.#.#.#.###\\n#.........#.#...#...#.#.....#...#.#.#...#...#.#.#.....#...#...#.....#...#...#...#...#...#...#.......#...#...#.#...#...#.#.#.#.....#.#.#.....#\\n#.#########.#.#####.#.#.#####.###.#.###.#.#####.#.#####.###.#.#.#####.###.#########.###.###.#####.#####.#.###.#.#.#.#####.#######.#.#.#.#.#.#\\n#...#.......#.#.....#...#...#.#...#.#.#.#.....#.#.#...#.#.#.#.#...#...#...#...#...#.......#.....#.....#.#...#.#.#.#.....#.#...............#.#\\n###.#.#######.#.###.#####.#.#.#.###.#.#.###.#.#.#.#.###.#.#.#####.#.###.###.#.#.#.#.###########.#.#.#.#.###.#.#.#.###.#.#.#.#.#.###.#.#.#.#.#\\n#.....#...#...#.#.....#...#...#.#...#.#...#.#.#.....#...#.#.....#.#.#.......#...#.#.#.#.......#.#.#.#.#.#.#.#...#.#...#.#...#.#.#.#.#.#.#...#\\n#.#####.#.#.###.#######.#.#####.#.###.###.###.#.#####.###.#####.#.#.#####.#######.#.#.#.###.#.#.#.#.###.#.#.#####.#.#.#.#.###.#.#.#.#.#.###.#\\n#.........#.#...........#.....#...#.....#...#.#.#.....#.......#...#...#.......#...#.#.#.#...#...#.#.......#...........#.#.#...#.............#\\n#.#.#####.#.#.###############.#######.#.###.#.#.#.#####.#.###.#######.#.#.###.#.###.#.#.#.#######.###.###.#########.###.###.#.#.#.#.#.#.#.#.#\\n#.#.#...#...#.#.............#.#.......#...#.#.#.#...#...#.#.#.......#.#.#.#.#.#.#.#...#.#.......#...#...#...#...........#...#.#.#.#...#...#.#\\n#.#.#.#.#####.#########.###.#.#.###.#.#.#.#.#.#.###.#.###.#.#####.###.#.#.#.#.#.#.###.#.#.###.#.###.#.#####.#.#########.#.###.#.###.#.#.###.#\\n#.#.#.#.....#.#.......#...#.#...#.#.#.#.#.....#.#...#.#.#.#.....#.#...#.#.#...#.#.......#.#...#.#...#.....#...#.......#...#...#.......#.#.#.#\\n#.#.#.#######.#.#####.#####.#####.#.###.#########.###.#.#.###.###.#.###.#.#.###.#.#####.#.#.###.#.#####.###.###.#####.###.#######.###.#.#.#.#\\n#.#.#.......#...#.#...#.......#...#.....#...#.....#.#...#...#.#...#.#...#.#.....#.....#.#.#.#...#.....#...#.#...#...#.#...#.....#.#.....#.#.#\\n#.#.#.#####.#####.#.###.#####.###.#######.###.#####.#.#.###.#.#.###.#####.#.#.#######.#.#.#.#########.###.#.#.#####.#.#####.###.#.#.#.#.#.#.#\\n#.#...#.....#.....#.....#...#...#...#.......#.#.#.....#.....#.....#.....#.#.#...#.....#.#.#.........#.#.#.#...#.....#.#.....#...#.#...#.....#\\n#.###.#.#####.###.#######.#.###.#.#.#.#.###.#.#.#.#####.#.#############.#.#.###.#.#####.#.#######.###.#.#.###.#.#.#.#.#.#####.###.###.#####.#\\n#...#.#...#.....#...#.....#...#.#.#...#.#...#.#.....#...#.#.............#.......#.#.....#...#.....#...#.#.....#.#.#.#.#...#.#.#...#.#.....#.#\\n###.#.###.#.#######.#.#.#.###.#.#.#####.#.###.#######.###.#.#############.#########.#.#.#.###.#.###.#.#.#.#####.#.#.#.###.#.#.#.###.#.###.#.#\\n#...#...#...#.....#.#.#...#.#.....#...#.#...#.#.......#...#.#...#.......#.....#.....#...#.#...#.#...#...#.....#.#.#.#.....#.#...............#\\n#.###.#.#####.###.#.#.#####.#######.#.#.###.#.#.#.#.#######.#.###.#####.#####.#.###########.#.###.#####.###.#.#.#.#########.#.#####.#.#.#.#.#\\n#.#...#.#.......#.#.#.#.....#...#...#.#.#...#.#.#...........#.#...#...#...#...#.#.....#.......#...#.......#.#...#.......#...#...#.#.#...#.#.#\\n#.#.#.#.#.#######.#.#.###.#.###.#.###.#.#.###.#.###.#.###.#.#.#.###.#.#.###.###.#.#.#.#.#####.#.###.#####.#.#######.#.###.#.###.#.#.#.###.#.#\\n#.....#.#.....#...#...#...#.....#...#.#...#...#...#.#...#...#...#...#.#.#...#...#.#.#...#.....#.#...#...#.........#.#.#...#.....#.....#...#.#\\n###.#.#.#.#.#.#.###.###.#####.###.#.#.#####.###.#.#.###.#####.###.###.#.#.#####.#.#.#######.###.#.###.#.#.#.#.###.#.###.#############.#.###.#\\n#...#.#.#...#.#.#.#.....#.........#.#.#.....#.#.#.#.#.#...#.#...#.#...#.#.#.....#.#.......#.#.#.......#...#.#...#.#...#.....#.......#...#...#\\n#.#.#.#.###.###.#.###.#########.###.#.#.#####.#.#.#.#.###.#.###.###.#.#.#.###.###.#.#####.#.#.#.###.#.#####.#.#.#.###.#.###.#.#####.#.###.###\\n#.#...#.....#...#.....#.............#.....#...#.#.#.#...#.#...#...#.#.#.#.#...#.#.#.......#.#.....#.#.#...#...#.#.#.#.....#...#...#.#.#.....#\\n#.#.#.#######.#.#######.#############.###.#.#.#.#.#.###.#.#.#####.#.#.#.#.#.###.#.#.#######.#.#####.#.#.#.#####.#.#.#####.#######.#.#.#####.#\\n#.............#.#...#.....#...#.......#.#.#.#...#.#.....#.#.....#.#.#.#.....#.....#.#...#.....#.....#.........#.#.#.....#.........#.#.....#.#\\n#.###.#######.###.#.#.#####.#.#.#####.#.#.#.#####.#######.#.###.#.#.#.#######.#####.###.#.#####.#######.###.#.#.#.#####.#####.#.###.#.###.#.#\\n#.#.......#...#...#...#.#...#.....#...#...#.#.....#.....#.#.#.#.......#...#.#...#.#...#...#.....#.#.....#...#...#...........#.#.#...#...#.#.#\\n#.#.#####.#.###.#######.#.#######.#.###.#####.#.###.###.#.#.#.#########.#.#.###.#.###.#.###.#####.#.#.###.###########.#######.#.#.###.###.#.#\\n#...#.....#...#.#.......#.#...#...#.#.........#.#...#.#...#.#.#...#...#.#.#...#.....#.#.#...#.....#.#.....#.......#...#...................#.#\\n#.###.#########.#.###.###.#.#.#.###.#############.#.#.#####.#.#.#.#.#.#.#.###.#.#.###.#.#.###.#.#.#.###.###.#####.#.###.###.#####.###.#.###.#\\n#...#.....#.....#...#.#...#.#.#.....#...#.......#.#.....#.....#.#...#...#.#...#.#...#.#.#.#...#.#.#.#...#...#...#.#...#.#...#.....#.....#...#\\n#########.#.#######.#.#.###.#.#####.#.#.#.#####.#.#.###.#.#####.#########.#.###.#.#.#.#.#.#.###.#.#.###.#.###.#.#.#.###.#.###.#####.#.#######\\n#.........#.......#.#.#.....#.....#.#.#...#...#...#...#.#...#...#.....#...#...#.#.#.....#.#.#...#.#.......#...#.#...#...#...#.#.......#.....#\\n#.###############.#.#############.#.#.###.#.#.#####.#.#####.#.###.###.#####.#.#.#.#######.#.#.###.#########.###.#####.#####.#.#.#####.#.###.#\\n#...#.........#...#.............#.#...#...#.#.#.....#.....#.#.#...#.#.....#.#.#.#.......#.#.#...#.#.....#.....#...#...#.#...#.#.#.#...#.#...#\\n###.#.###.#####.#.#.###.###.###.#.#.#######.#.#####.#####.#.#.#.###.###.#.###.#.#######.#.#.###.#.###.#.#####.###.#.###.#.###.#.#.#.###.#.#.#\\n#...#.#.#.....#.#.#.#.#.......#.#.#.........#.....#.....#...#.#.....#...#...#.#...#...#...#...#.#.......#...#...#.#.#.....#...#...#.#...#.#.#\\n#.#.#.#.#####.#.#.#.#.#######.###.#.#############.#.###.#.###.#.###.#.#####.#.###.###.#######.#.#.#.###.#.#.###.#.#.#######.#####.#.#.###.#.#\\n#.#.#.#.....#...#.#...#...#.#...#...#.#.....#...#.....#.#...#...#...#.....#.....#.....#.......#.#.......#.#.....#.#.........#.#...#...#...#.#\\n#.###.#.#########.###.#.#.#.###.#####.#.#.###.#.#######.#.#####.#.#######.#####.#####.###.#####.#.#######.#######.###########.#.###.#.#.#####\\n#.....#.......#.....#...#.............#.#.....#.........#.#.....#.......#.#...#...#.#...#.#.....#.#.........#...#.......#...#...#.#...#.....#\\n#.###########.#.#.#########.#.#####.###.#######.###.#.#.###.#########.###.#.#.###.#.###.###.#####.#.#######.###.#######.#.#.#.###.#########.#\\n#...........#...#.#.......#.#.........#.#...#.......#.#.#...#.......#.#...#.#.........#.#...#.#...#...#.....#.........#...#.#.#.....#.....#.#\\n#########.#.#.###.#.#.#####.#.###.###.#.#.###.#.#.#.#.#.#.#####.#.#.###.###############.#.#.#.#.#####.#.#####.#####.#.#####.#.#.###.#####.#.#\\n#...#.......#...#...#.......#...#...#.....#...#.#...#.#.......#.#.#.....#.............#...#...#...#.#.#...#.........#.......#...#.#.#.....#.#\\n#.###.###.###############.#.###.###.#######.###.#.#.#.#######.#.#.###.#.#.###########.#####.#####.#.#.###.#.#######.#############.#.#.###.#.#\\n#...#.#...#.....#...#...#.#...#.#...#.....#.#.#...#.#.........#.#.#.#.#...#...........#.....#.....#.#.#.......#...#.#.............#...#...#.#\\n#.#.#.#.#.#.###.#.#.#.#.###.#.#.#.###.###.#.#.#####.#############.#.#.#####.#######.###.#.#.#.#####.#.#.#######.#.###.#######.#####.#####.#.#\\n#.#.#.#.#...#.#...#...#.....#...#.....#...#.#...#...#.....#.......#.#...........#...#...#.#...#...#...#...#.....#...#.....#.#.......#.......#\\n###.#.#.#.###.#####.#######.###########.###.#.###.#######.#.###.###.#####.#.###.###.#.###.#.#.#.#.#####.#.#.#######.#####.#.#######.#.#####.#\\n#...#.#...#.............#...#...#.......#...#.............#...#...#.....#.#...#...#.#...#.#.#...#.......#.....#.....#.#.........#...#.....#.#\\n#.#.#.###.###.#.#########.###.#.#.#######.###################.###.#.###.#.###.###.#####.#.#############.#.#####.###.#.#.#######.###.#####.#.#\\n#.#.#.#...#...#.#...#.....#...#.#.........#.........#...#.....#...#.#.#.#.#.#.#.#.....#.#...#.........#.#...#...#.....#.#.#...#.......#...#.#\\n#.###.#.###.###.#.#.#.#####.###.###########.#######.#.#.#.###.#.###.#.#.#.#.#.#.###.###.###.#.#######.#.###.#.###.#####.#.#.#.#####.#.#.#####\\n#...#.#...#.......#.....#.....#...........#.......#...#...#...#.#.#.#.#...#.#.............#.#.#.#...#.#...#.#.....#...#.#.#.#...............#\\n###.#.#.#.#.###########.#.###.###########.#######.#########.###.#.#.#.#####.#####.#######.#.#.#.#.#.#.###.###.#####.#.#.#.#.#######.###.###.#\\n#...#.#.............#.#.#...#...#.....#.#.......#...........#...#.#...#.........#.#...#...#.....#.#...#.#.#...#.....#.#...#.#...#.#...#...#.#\\n#.#.#.###.#.#.#.###.#.#.###.#.#.###.#.#.#.#####.#########.###.###.###.#######.#.#.#.#.###########.###.#.#.#.#.#.#####.###.#.#.#.#.#.#.#.###.#\\n#.#.#...#.#.#.....#.#.#.#...#.#.....#...#.....#...#...#...#...#.#.....#.....#.....#.#...#.........#.#...#.#.#.#.#...#.....#...........#.#...#\\n#.#####.#.#.#######.#.#.#.###.#########.#####.#####.#.#.###.###.#.#####.###.#######.###.#.#########.###.#.#.###.###.###########.#.#.#####.#.#\\n#.......#.....#.....#.#.#.#.....#.....#.#...#.......#.....#.#...#...#...#.#.#.........#.#...#.#.........#.#...#...#.......#.....#.......#.#.#\\n#.###.#####.#.#.#####.#.#.#####.###.#.#.###.###############.#.#####.#.###.#.#.#.#####.#.###.#.#.#.#######.#.#.#.#.#.###.#.#.#####.#.#.#.#.###\\n#.#...........#.#...#...#.#...#.#...#.#.#.....#...#...#...#.#.....#.#.#...#...#.#...#.#.....#.#.#.#.......#.#.......#...#.#.#.#...#.#...#...#\\n#.###.#####.###.#.#.#####.#.#.#.#.###.#.#.###.#.#.#.###.#.#.#.###.#.#.#.#.#####.#.#.#.###.#.#.#.#.#.###########.###.#.#####.#.#.#.#.#.#.###.#\\n#...#.....#.....#.#.........#...#.#.....#.#.....#...#...#.#...#.#.#...#.#.#.....#.#.#.............#...#.......#.....#...#...#...#.#...#...#.#\\n###.#.###.#.#####.#######.#######.#.###.#.#######.###.###.#.#.#.#.#####.#.#.#####.#.###.#######.#.###.#.#####.###.#.###.#.###.###.#######.#.#\\n#...#.#.#.#.......#.....#...#.....#...#.#...#.....#...#.....#...#...#...#...#...#.#...#...#.....#.#...#.....#...#.#.....#.#.....#.#.......#.#\\n#.###.#.#.#.#######.###.#.#.###.#######.###.#.#####.###.#######.#.#.#.#########.#.#.#.###.#.###.###.#######.###.#.###.#.#.#.#####.#.#######.#\\n#.....#.#.#.........#...#.#...#...#...#...#.#...#...#.........#.#.#.#...#.....#...#.#.#.#.#...#...#.....#...#...#.......#.#.#...#.#.#.......#\\n#####.#.#.#.#######.#.###.###.#.#.#.#.###.#.#.#.#.#####.#.#.###.#.#####.#.###.#.#.#.#.#.#.###.###.#####.#.#.#.###.#######.#.#.#.#.#.###.#####\\n#.#...#...#.........#.....#...#.#...#...#...#.#...#...#.#.......#...#...#.#.....#...#.#.....#.#.#.....#.#...#.#...#.......#.#.#.#.#...#.....#\\n#.#.#.#.###.#########.#####.###.#####.#.#.###.###.#.#.###.#.#######.#.###.#######.#.#.#.#####.#.#####.#.#.#.#.#####.#######.#.#.#.###.#.###.#\\n#...#...#.#...#.....#.#...#...#.#...#.#.#.#...#.....#...#.#.......#...#.......#.....#...#.....#.....#...#.#.#.....#.#...#...#.#.....#.#.#.#.#\\n#.###.###.#.#.#.###.###.#.###.###.#.###.#.#.###.#######.#.###.#.#########.###.#.#####.###.#########.#######.#####.#.#.###.###.###.#.#.#.#.#.#\\n#...........#...#.#.........#.....#...#.#.#.#...#...#.#.#...#.#.........#...#.#.....#.....#.......#.........#...#...#.....#.#.....#.#.#...#.#\\n#.###.#.###.#####.#########.#########.#.#.#.#.###.#.#.#.###.#.###.#####.#.#.#.#####.#######.#####.###.###.#####.#####.#####.#####.###.#.#.#.#\\n#.#...#.#.............#...#.#.....#...#...#.#.....#...#.....#.....#.....#.#.#...#...#.......#...#...#.#.#.#.......#...#.....#...#.....#...#.#\\n#.#.###.#.#.###########.#.#.###.#.#.#######.#########.###.#.###.###.#####.#.#.#.#.#####.#.###.#####.#.#.#.#.#.#####.###.###.#.#.#.#####.###.#\\n#.#...#.#.#.#...........#...#.....#.......#.......#...#.#.#.#...#.#...#.....#...#...#...#.#.....#...#...#.#.#.......#...#...#.#.........#.#.#\\n#.###.#.#.###.#.#############.###.#######.#.###.###.###.#.#.#.###.###.#######.#.###.#.###.#.###.#.#.#####.#.###########.#.###.###.#####.#.#.#\\n#...#.#.#.#...#.#...#.#.......#...#.....#.........#.#...#.#...#.....#.......#.#.#...#.#.....#.#.#.#...........#.........#.#.#.#...........#.#\\n###.#.#.#.#.#####.#.#.#.#####.#.###.#########.###.#.###.#.#####.###########.#.#.#.###.#.#####.#.#.#.#########.#.#.#######.#.#.#.#######.###.#\\n#...#.#.#.#.#.....#.#...#.....#...#.........#...#.......#.#.......#...#.....#.#.#...#.#...#...#...#.#.......#.#.#.......#.#.....#.....#...#.#\\n#.###.#.#.#.#.#####.###.#.###.###.#####.#######.#.#####.#.###.###.#.#.#.#####.#.###.#.###.#.#.#####.###.#.#.#.###.#####.#.#.#####.###.#.#.#.#\\n#.#.....#.#.......#...#.#.......#.#...#.....#...#.#...#.#...#.#.#...#.#.......#...#.#...#...#.#.......#.#.#.#...#.....#.#.#.#...#...#...#.#.#\\n#.#.#####.#########.#.#########.#.#.#.#.#.#.#.#####.#.#.###.#.#.#####.#.###.#####.#.###.###.#.#.#####.#.#.#####.#####.#.#.###.#.###.###.#.#.#\\n#.............#...#.#.#.....#...#...#.#...#.#.#.....#.#...#.#.....#.#.#.....#.#...#...#.#...#.#.#.....#.#.....#...#...#.#.....#.....#.....#.#\\n#.#.#####.#.###.#.###.#.###.#.#######.#.###.#.###.###.#.###.#####.#.#.#######.#.#####.#.#.#.#.#.###.#.#######.###.#.###.#############.#.###.#\\n#.#.......#.#...#...#.#...#...#...#...#...#.#.....#.#.#.#...#...#.#.#.#.........#.....#...#.#.#.#...#.#.........#.#...#.#.......#...#...#...#\\n#.###.#######.#####.#.###.#####.#.#.#######.#######.#.###.###.#.#.#.#.#.###.#####.###.#.###.#.#.#.###.#.#########.#####.#.#####.#.#.###.#.#.#\\n#.....................#...#...#.#...............#.#...#...#...#.#.#.#.#.........#.#...#.#...#.#...#...#.........#.#.....#.#.......#...#...#.#\\n###.###.#######.###.#.#.#.#.#.#.#########.#####.#.#.###.###.###.#.#.#.###.#.#####.#.#.###.###.#.###.###.#######.#.#.#####.#.#######.#######.#\\n#.#.....#.........#...#.......................#...#.....#.....#.#...#.....#.....#.#.#.....#...#.....#.....#...#.#...#.....#.....#.........#.#\\n#.###############.#####.###.#.###.#.#.###.###.#######.#.#.#####.#####.#####.###.#.#.#######.#####.#######.#.###.#######.#.#####.#.#.#.#####.#\\n#.#.............#.......#...#...#...#.#.....#...#...#.#...#...#.....#...#...#.............#.#...#.....#...#.#.........#.#...#...............#\\n#.#.#.#########.###.#####.#####.###.#.###.#.###.#.#.#.#####.#.#####.###.#.#.#.###.#.#.#.###.#.#.#####.#.###.#.#######.#####.#.###.#.#########\\n#.#.#.#...#.........#...#.#...#.#...#.....#.#.#.#.#.#.#.....#.......................#.#.#...#.#.......#.#...#.#.............#.#...#.......#.#\\n#.#.#.#.#.###########.#.#.#.###.#########.#.#.#.#.#.#.#.#############.###.#.#######.###.#.###.#########.#.#.#.#####.#######.###.###.#.###.#.#\\n#...............#...#.#...#...#.......#...#.#.#.#.#...#.#...........#.#...#.........#...#.#...#...#...#.#.#.#.#...#.#...#...#...#...#...#...#\\n#.###.#.#.#.###.#.#.#.#######.#######.#.#.#.#.#.#.#####.#.###.#######.#.#####.#######.###.#.###.#.#.#.#.###.#.#.#.###.#.#####.###.#.###.#.#.#\\n#S..#...#.....#...#.................#...#.....#.........#...#.........#.........................#...#.......#...#.....#...........#.....#...#\\n#############################################################################################################################################\"","export default \"Register A: 729\\nRegister B: 0\\nRegister C: 0\\n\\nProgram: 0,1,5,4,3,0\"","export default \"Register A: 2024\\nRegister B: 0\\nRegister C: 0\\n\\nProgram: 0,3,5,4,3,0\"","export default \"Register A: 48744869\\nRegister B: 0\\nRegister C: 0\\n\\nProgram: 2,4,1,2,7,5,1,3,4,4,5,5,0,3,3,0\"","export default \"5,4\\n4,2\\n4,5\\n3,0\\n2,1\\n6,3\\n2,4\\n1,5\\n0,6\\n3,3\\n2,6\\n5,1\\n1,2\\n5,5\\n2,5\\n6,5\\n1,4\\n0,4\\n6,4\\n1,1\\n6,1\\n1,0\\n0,5\\n1,6\\n2,0\"","export default \"67,67\\n67,52\\n27,69\\n27,3\\n3,24\\n16,3\\n7,14\\n36,67\\n9,20\\n33,5\\n15,8\\n1,1\\n22,7\\n21,19\\n9,47\\n30,11\\n19,32\\n13,7\\n21,68\\n69,53\\n12,21\\n21,21\\n17,27\\n18,45\\n53,65\\n23,13\\n15,25\\n29,65\\n28,25\\n57,49\\n63,69\\n14,31\\n59,63\\n5,37\\n35,61\\n21,18\\n43,67\\n10,49\\n15,41\\n10,29\\n1,3\\n33,1\\n63,43\\n31,2\\n17,49\\n35,15\\n23,23\\n10,11\\n65,68\\n13,26\\n4,33\\n29,4\\n5,7\\n7,18\\n29,59\\n19,43\\n27,21\\n31,55\\n22,39\\n33,0\\n47,57\\n13,36\\n31,7\\n23,33\\n7,21\\n8,39\\n23,16\\n9,38\\n27,28\\n26,15\\n70,69\\n31,67\\n3,10\\n23,45\\n1,25\\n1,19\\n49,61\\n1,38\\n25,57\\n35,59\\n24,55\\n17,40\\n8,13\\n3,1\\n67,62\\n17,17\\n17,21\\n63,49\\n69,67\\n15,19\\n66,63\\n23,66\\n5,20\\n32,21\\n13,45\\n31,61\\n13,15\\n11,27\\n17,51\\n68,69\\n14,39\\n1,20\\n57,55\\n5,43\\n9,10\\n69,52\\n67,59\\n37,3\\n47,50\\n19,33\\n37,9\\n17,1\\n25,61\\n53,69\\n57,61\\n17,31\\n20,5\\n33,60\\n56,47\\n13,29\\n3,27\\n11,19\\n37,59\\n26,29\\n4,35\\n62,67\\n23,57\\n55,70\\n11,37\\n3,6\\n7,40\\n16,23\\n1,5\\n54,55\\n19,38\\n9,25\\n1,8\\n15,39\\n10,31\\n1,56\\n11,39\\n33,65\\n58,63\\n33,69\\n15,32\\n55,44\\n25,11\\n4,41\\n5,13\\n63,47\\n25,10\\n61,53\\n21,30\\n16,47\\n7,17\\n31,1\\n3,21\\n8,33\\n17,50\\n5,26\\n1,13\\n50,69\\n54,65\\n6,41\\n8,11\\n17,42\\n9,42\\n25,41\\n5,29\\n7,7\\n3,49\\n1,16\\n29,21\\n41,63\\n19,39\\n51,60\\n26,17\\n35,3\\n61,52\\n20,27\\n60,65\\n23,19\\n5,34\\n17,47\\n21,23\\n30,9\\n25,55\\n7,30\\n17,44\\n24,27\\n29,57\\n25,4\\n41,57\\n19,45\\n46,61\\n57,63\\n64,55\\n52,63\\n17,14\\n59,53\\n44,61\\n9,34\\n1,11\\n17,19\\n11,7\\n7,36\\n27,23\\n31,27\\n39,10\\n11,15\\n3,46\\n15,30\\n11,25\\n35,12\\n25,62\\n55,63\\n1,37\\n51,63\\n23,62\\n23,37\\n12,3\\n54,59\\n39,67\\n65,55\\n23,2\\n60,59\\n2,31\\n68,61\\n8,21\\n45,54\\n13,33\\n19,31\\n17,48\\n48,57\\n63,62\\n59,55\\n61,54\\n40,23\\n17,36\\n6,11\\n48,59\\n29,62\\n2,29\\n27,70\\n31,58\\n21,45\\n5,5\\n26,57\\n25,65\\n28,9\\n20,43\\n6,5\\n4,21\\n69,55\\n63,64\\n9,26\\n40,67\\n37,63\\n42,55\\n17,15\\n9,31\\n35,4\\n3,31\\n19,42\\n13,10\\n43,6\\n55,69\\n31,21\\n29,7\\n23,41\\n19,35\\n47,69\\n0,25\\n58,61\\n53,68\\n66,55\\n45,70\\n19,6\\n5,19\\n40,69\\n3,43\\n12,7\\n25,19\\n4,47\\n17,7\\n62,65\\n57,44\\n25,3\\n58,69\\n65,66\\n7,2\\n21,9\\n23,3\\n26,7\\n5,35\\n56,51\\n18,21\\n45,63\\n65,63\\n0,51\\n13,37\\n6,15\\n57,67\\n43,55\\n11,43\\n69,63\\n3,23\\n13,16\\n15,28\\n11,5\\n33,66\\n23,58\\n11,41\\n61,61\\n13,25\\n27,61\\n16,9\\n17,11\\n27,20\\n51,61\\n37,66\\n4,31\\n7,3\\n29,61\\n27,59\\n13,9\\n3,9\\n35,6\\n25,64\\n1,49\\n1,15\\n13,5\\n60,55\\n5,41\\n9,27\\n69,54\\n60,63\\n27,15\\n22,43\\n22,23\\n11,9\\n49,62\\n23,60\\n27,43\\n61,63\\n21,39\\n5,2\\n7,0\\n25,29\\n7,8\\n29,6\\n15,29\\n33,68\\n9,33\\n3,14\\n25,37\\n16,33\\n19,17\\n49,59\\n27,7\\n19,9\\n17,37\\n13,27\\n15,16\\n43,4\\n41,64\\n9,24\\n9,5\\n26,41\\n68,57\\n27,66\\n11,26\\n9,36\\n21,25\\n19,36\\n15,36\\n8,3\\n23,36\\n40,7\\n51,69\\n28,61\\n18,27\\n21,10\\n61,56\\n42,57\\n9,3\\n69,69\\n31,5\\n25,44\\n8,43\\n34,67\\n35,1\\n35,69\\n2,45\\n69,49\\n21,27\\n5,22\\n47,62\\n25,21\\n35,62\\n69,65\\n16,21\\n69,61\\n25,17\\n27,57\\n43,61\\n59,67\\n29,58\\n14,13\\n1,34\\n38,63\\n64,57\\n27,8\\n24,41\\n5,17\\n27,64\\n35,67\\n20,21\\n23,63\\n57,66\\n37,69\\n3,4\\n47,56\\n25,47\\n5,25\\n19,11\\n31,66\\n18,5\\n29,63\\n70,49\\n30,57\\n11,23\\n17,33\\n23,56\\n2,43\\n7,24\\n29,67\\n35,65\\n17,35\\n37,5\\n32,15\\n29,68\\n3,45\\n9,29\\n7,28\\n53,64\\n19,25\\n45,69\\n22,31\\n9,23\\n36,5\\n18,29\\n32,63\\n45,67\\n30,19\\n28,17\\n26,37\\n1,33\\n15,23\\n67,60\\n24,33\\n37,67\\n25,26\\n25,7\\n7,13\\n13,13\\n13,24\\n49,60\\n10,5\\n63,67\\n21,65\\n16,11\\n26,55\\n4,37\\n22,45\\n15,34\\n33,2\\n29,20\\n12,29\\n61,45\\n26,39\\n27,25\\n23,59\\n15,33\\n69,47\\n70,59\\n17,30\\n21,5\\n23,18\\n29,56\\n68,67\\n21,16\\n8,29\\n11,24\\n28,35\\n41,66\\n1,39\\n15,11\\n1,41\\n22,3\\n30,31\\n4,43\\n25,42\\n29,17\\n64,59\\n17,46\\n29,66\\n24,69\\n1,6\\n60,69\\n11,11\\n30,23\\n16,7\\n58,53\\n21,17\\n27,39\\n25,1\\n29,15\\n29,9\\n51,58\\n14,37\\n25,53\\n15,31\\n16,5\\n1,42\\n3,11\\n33,63\\n27,45\\n42,61\\n33,3\\n58,65\\n21,37\\n55,67\\n35,63\\n33,18\\n55,52\\n33,15\\n17,29\\n11,35\\n53,67\\n9,37\\n5,3\\n41,65\\n23,39\\n4,1\\n17,38\\n30,39\\n17,23\\n49,63\\n25,45\\n19,23\\n19,29\\n63,65\\n50,65\\n21,15\\n26,23\\n59,52\\n24,23\\n68,33\\n19,40\\n29,69\\n24,47\\n29,27\\n69,56\\n29,22\\n28,29\\n21,35\\n21,41\\n26,59\\n23,6\\n37,7\\n19,16\\n63,63\\n31,60\\n30,25\\n16,39\\n13,11\\n19,7\\n11,14\\n25,67\\n21,33\\n65,49\\n25,43\\n22,21\\n13,28\\n17,25\\n27,63\\n9,39\\n5,39\\n61,57\\n18,13\\n59,57\\n18,11\\n67,69\\n54,63\\n39,64\\n23,21\\n47,65\\n46,67\\n31,16\\n66,57\\n29,19\\n5,9\\n61,68\\n9,7\\n31,23\\n55,61\\n40,57\\n3,3\\n10,15\\n15,26\\n64,65\\n5,23\\n65,67\\n56,59\\n25,66\\n54,57\\n59,56\\n20,29\\n42,69\\n62,43\\n21,29\\n67,61\\n48,69\\n26,1\\n32,69\\n14,17\\n32,11\\n36,69\\n25,24\\n11,32\\n29,14\\n7,9\\n29,64\\n57,56\\n24,3\\n27,38\\n30,1\\n5,4\\n21,7\\n9,19\\n43,69\\n28,1\\n14,41\\n6,9\\n3,37\\n21,69\\n44,69\\n27,11\\n55,60\\n69,57\\n21,13\\n22,69\\n25,68\\n11,40\\n11,18\\n20,9\\n14,11\\n27,44\\n37,60\\n34,63\\n45,59\\n44,67\\n69,66\\n7,39\\n65,57\\n7,31\\n15,7\\n13,42\\n3,19\\n3,15\\n14,7\\n19,34\\n7,1\\n31,69\\n5,6\\n3,8\\n13,19\\n15,15\\n13,41\\n67,57\\n11,17\\n9,35\\n29,25\\n41,59\\n21,4\\n67,51\\n29,23\\n56,67\\n1,22\\n7,33\\n3,40\\n17,9\\n47,55\\n31,64\\n23,35\\n7,11\\n5,45\\n10,27\\n21,34\\n28,3\\n1,17\\n19,48\\n13,17\\n25,23\\n1,31\\n7,37\\n36,15\\n11,29\\n53,66\\n23,69\\n12,37\\n27,68\\n53,57\\n31,18\\n3,29\\n61,67\\n13,23\\n65,65\\n39,62\\n8,7\\n64,61\\n27,62\\n7,43\\n52,61\\n19,19\\n31,59\\n37,65\\n22,25\\n17,41\\n57,58\\n20,45\\n15,13\\n28,59\\n18,9\\n11,21\\n15,35\\n23,5\\n1,40\\n69,50\\n36,13\\n59,61\\n19,12\\n21,26\\n65,59\\n22,35\\n25,9\\n57,57\\n1,21\\n29,43\\n55,65\\n1,2\\n63,52\\n19,21\\n27,37\\n25,34\\n23,43\\n64,69\\n59,58\\n31,65\\n1,23\\n26,19\\n3,33\\n30,41\\n9,41\\n15,9\\n43,65\\n15,17\\n25,60\\n1,43\\n57,69\\n5,15\\n5,1\\n47,60\\n9,9\\n9,13\\n31,63\\n63,59\\n25,59\\n17,5\\n1,45\\n23,46\\n30,69\\n29,16\\n38,69\\n23,11\\n31,25\\n49,49\\n41,69\\n62,57\\n3,28\\n14,23\\n10,19\\n35,10\\n9,16\\n61,55\\n1,9\\n53,59\\n6,33\\n39,69\\n23,9\\n23,40\\n5,28\\n7,25\\n59,59\\n18,25\\n69,64\\n2,37\\n13,39\\n3,16\\n62,61\\n23,25\\n21,36\\n21,42\\n2,35\\n13,48\\n67,55\\n29,8\\n25,18\\n14,19\\n25,14\\n3,39\\n6,37\\n20,23\\n25,5\\n42,63\\n26,5\\n15,21\\n31,17\\n19,13\\n7,41\\n19,41\\n61,65\\n5,11\\n24,37\\n51,68\\n21,47\\n17,43\\n69,59\\n23,47\\n24,21\\n5,31\\n27,65\\n3,17\\n8,49\\n6,23\\n19,37\\n36,27\\n3,25\\n25,63\\n31,62\\n47,63\\n7,35\\n56,63\\n2,27\\n21,38\\n7,22\\n39,63\\n27,2\\n10,45\\n25,69\\n46,13\\n33,7\\n43,14\\n27,27\\n65,69\\n33,4\\n21,11\\n9,21\\n31,57\\n24,9\\n5,27\\n19,27\\n23,61\\n33,21\\n28,43\\n67,53\\n2,19\\n53,63\\n7,26\\n23,17\\n51,65\\n47,67\\n26,25\\n16,19\\n1,35\\n3,41\\n52,55\\n31,3\\n66,67\\n61,59\\n13,20\\n12,5\\n18,23\\n4,11\\n21,64\\n27,12\\n7,15\\n1,32\\n9,46\\n29,26\\n10,37\\n51,66\\n30,37\\n16,15\\n7,23\\n17,13\\n27,67\\n19,15\\n7,5\\n5,8\\n4,13\\n17,18\\n9,4\\n14,21\\n27,19\\n31,10\\n12,9\\n41,61\\n7,29\\n1,12\\n20,19\\n35,64\\n63,57\\n24,45\\n7,27\\n41,67\\n39,65\\n10,41\\n38,67\\n50,63\\n11,22\\n23,29\\n31,19\\n51,54\\n6,43\\n61,69\\n27,41\\n25,39\\n1,10\\n67,65\\n22,11\\n5,18\\n10,7\\n57,62\\n5,30\\n65,61\\n27,56\\n55,56\\n17,28\\n27,22\\n5,33\\n69,51\\n21,67\\n23,28\\n3,7\\n33,24\\n23,12\\n29,5\\n47,68\\n1,27\\n3,5\\n24,15\\n20,13\\n15,27\\n14,5\\n36,63\\n18,33\\n64,47\\n1,4\\n12,33\\n12,13\\n12,17\\n59,60\\n45,61\\n2,3\\n4,17\\n32,5\\n49,57\\n21,8\\n24,7\\n10,9\\n2,23\\n62,59\\n49,69\\n1,14\\n67,64\\n1,18\\n32,7\\n30,5\\n1,26\\n7,19\\n15,37\\n51,67\\n15,5\\n12,39\\n59,66\\n29,1\\n57,65\\n24,13\\n59,69\\n0,37\\n3,35\\n21,14\\n9,15\\n40,61\\n19,47\\n61,70\\n9,11\\n5,38\\n66,59\\n30,13\\n18,17\\n27,17\\n1,7\\n21,62\\n27,5\\n23,20\\n29,3\\n45,64\\n55,68\\n16,25\\n4,25\\n21,32\\n34,29\\n44,35\\n41,18\\n21,59\\n67,35\\n5,60\\n55,9\\n58,29\\n7,65\\n65,14\\n19,2\\n41,5\\n63,8\\n11,62\\n37,39\\n45,37\\n20,57\\n44,33\\n0,47\\n57,39\\n45,35\\n31,47\\n38,27\\n48,25\\n31,39\\n32,47\\n13,1\\n10,47\\n13,31\\n69,7\\n7,52\\n43,21\\n29,51\\n45,22\\n59,32\\n63,44\\n33,17\\n21,53\\n9,68\\n17,53\\n43,41\\n29,46\\n13,52\\n66,43\\n69,41\\n11,63\\n13,55\\n44,57\\n65,5\\n40,1\\n47,51\\n1,61\\n31,43\\n46,57\\n16,69\\n53,9\\n55,13\\n5,57\\n11,68\\n44,39\\n64,1\\n43,11\\n35,27\\n66,13\\n15,49\\n66,9\\n3,57\\n39,5\\n15,65\\n39,51\\n36,21\\n33,55\\n47,53\\n65,21\\n57,54\\n49,14\\n15,47\\n55,7\\n65,24\\n35,19\\n33,47\\n53,12\\n39,49\\n40,51\\n2,49\\n3,64\\n18,59\\n21,1\\n59,29\\n35,36\\n3,51\\n39,21\\n45,41\\n33,27\\n59,51\\n55,31\\n53,37\\n65,39\\n16,1\\n11,52\\n41,11\\n45,58\\n13,59\\n13,56\\n55,45\\n67,18\\n11,47\\n45,17\\n45,9\\n39,28\\n57,48\\n37,24\\n62,39\\n59,9\\n66,11\\n61,37\\n47,27\\n17,52\\n42,9\\n39,57\\n67,16\\n37,11\\n52,21\\n33,29\\n13,65\\n49,66\\n68,3\\n36,49\\n49,20\\n43,27\\n59,23\\n62,27\\n51,37\\n43,47\\n63,12\\n59,45\\n43,31\\n68,23\\n47,29\\n69,42\\n65,43\\n63,25\\n52,17\\n27,55\\n39,1\\n70,25\\n69,16\\n29,55\\n29,32\\n68,49\\n13,64\\n33,37\\n42,17\\n66,49\\n65,34\\n36,45\\n67,25\\n45,53\\n55,1\\n64,53\\n61,20\\n63,5\\n47,3\\n68,19\\n27,13\\n8,59\\n35,47\\n63,3\\n38,11\\n31,9\\n17,60\\n43,66\\n41,35\\n34,41\\n66,25\\n39,18\\n53,31\\n21,51\\n49,16\\n34,15\\n51,36\\n47,19\\n37,42\\n20,53\\n61,42\\n50,27\\n37,4\\n57,26\\n43,7\\n47,9\\n45,40\\n47,33\\n9,62\\n25,33\\n69,27\\n60,43\\n43,15\\n48,45\\n35,49\\n5,53\\n69,5\\n54,61\\n50,9\\n66,47\\n38,43\\n35,51\\n62,29\\n37,45\\n63,50\\n59,39\\n49,39\\n66,39\\n23,55\\n49,38\\n47,61\\n43,20\\n61,2\\n69,3\\n66,33\\n64,21\\n43,60\\n67,15\\n5,55\\n28,51\\n55,26\\n47,48\\n23,67\\n23,7\\n47,23\\n41,37\\n3,61\\n13,49\\n55,21\\n61,39\\n29,36\\n55,49\\n37,30\\n59,47\\n59,19\\n63,54\\n0,65\\n33,58\\n37,16\\n40,49\\n45,57\\n58,11\\n61,31\\n61,15\\n21,61\\n60,29\\n31,41\\n61,23\\n56,17\\n29,49\\n23,1\\n40,13\\n49,6\\n31,49\\n43,9\\n36,39\\n49,24\\n41,25\\n43,22\\n25,49\\n15,55\\n39,46\\n19,53\\n65,7\\n31,30\\n25,13\\n6,13\\n31,54\\n47,11\\n41,2\\n69,30\\n38,55\\n43,19\\n57,19\\n46,65\\n1,57\\n33,59\\n63,31\\n49,54\\n12,69\\n69,34\\n32,27\\n69,15\\n15,59\\n45,11\\n61,29\\n14,55\\n35,13\\n37,31\\n53,17\\n36,57\\n65,41\\n33,13\\n55,53\\n56,37\\n3,53\\n33,33\\n19,57\\n49,37\\n65,53\\n68,9\\n51,49\\n67,0\\n45,4\\n15,70\\n37,32\\n42,29\\n51,44\\n42,49\\n1,55\\n12,67\\n37,15\\n53,11\\n41,7\\n57,36\\n69,37\\n32,39\\n12,1\\n12,65\\n49,45\\n35,38\\n27,35\\n39,59\\n55,32\\n35,56\\n45,33\\n45,12\\n55,38\\n39,29\\n63,10\\n39,33\\n51,23\\n53,1\\n33,40\\n64,11\\n42,15\\n35,31\\n56,49\\n61,14\\n55,5\\n67,45\\n51,8\\n11,33\\n44,29\\n31,53\\n65,9\\n45,55\\n35,33\\n29,42\\n7,54\\n57,59\\n50,15\\n41,15\\n16,63\\n65,29\\n45,10\\n8,61\\n47,41\\n32,33\\n29,45\\n43,29\\n35,26\\n26,35\\n65,51\\n49,33\\n41,51\\n49,35\\n1,68\\n45,24\\n41,36\\n3,62\\n49,46\\n46,1\\n54,5\\n26,11\\n42,35\\n42,41\\n1,69\\n39,38\\n43,17\\n54,1\\n32,13\\n47,38\\n41,1\\n51,22\\n29,39\\n33,41\\n67,31\\n48,55\\n61,6\\n61,24\\n26,47\\n46,27\\n17,56\\n47,7\\n4,57\\n47,21\\n39,27\\n50,41\\n45,36\\n53,25\\n11,49\\n39,11\\n13,53\\n9,55\\n48,29\\n61,9\\n21,55\\n35,25\\n15,57\\n63,23\\n51,9\\n2,61\\n25,15\\n19,65\\n45,13\\n57,23\\n61,33\\n57,16\\n29,29\\n39,19\\n41,4\\n33,51\\n65,13\\n47,42\\n39,13\\n19,60\\n67,13\\n62,15\\n62,47\\n49,31\\n60,41\\n42,1\\n60,25\\n65,6\\n41,49\\n40,37\\n55,33\\n65,33\\n35,57\\n60,21\\n62,19\\n2,59\\n11,50\\n59,1\\n58,27\\n69,12\\n53,28\\n51,11\\n39,8\\n41,31\\n34,23\\n51,27\\n43,59\\n51,51\\n27,30\\n53,42\\n42,11\\n35,39\\n49,29\\n23,64\\n52,43\\n44,17\\n64,29\\n41,9\\n11,12\\n44,1\\n35,21\\n46,51\\n63,55\\n55,42\\n25,30\\n63,19\\n55,59\\n37,61\\n51,21\\n8,55\\n48,37\\n57,47\\n69,46\\n53,27\\n64,41\\n13,58\\n47,35\\n35,37\\n55,37\\n55,25\\n41,43\\n47,17\\n57,1\\n61,32\\n41,58\\n31,13\\n2,53\\n37,40\\n51,12\\n57,43\\n45,27\\n55,28\\n29,31\\n47,47\\n55,46\\n28,45\\n39,23\\n61,41\\n61,43\\n47,5\\n1,66\\n13,60\\n57,7\\n37,49\\n69,1\\n32,23\\n59,65\\n47,45\\n7,68\\n68,25\\n60,17\\n67,49\\n7,70\\n65,32\\n67,17\\n45,1\\n42,33\\n59,11\\n61,46\\n9,61\\n61,25\\n57,15\\n61,5\\n57,13\\n21,43\\n21,49\\n20,67\\n29,37\\n51,4\\n35,55\\n9,1\\n33,61\\n66,29\\n46,39\\n53,33\\n37,37\\n57,10\\n39,39\\n38,1\\n27,47\\n43,25\\n60,49\\n67,3\\n53,13\\n59,6\\n53,6\\n59,33\\n33,23\\n17,55\\n41,29\\n56,21\\n1,51\\n17,0\\n68,13\\n43,53\\n57,35\\n30,45\\n57,21\\n51,7\\n15,63\\n48,49\\n15,3\\n3,59\\n45,3\\n57,31\\n55,17\\n40,17\\n18,67\\n58,23\\n65,37\\n57,34\\n59,3\\n69,10\\n36,51\\n53,50\\n61,13\\n9,59\\n43,8\\n7,57\\n43,23\\n31,36\\n49,11\\n46,53\\n26,33\\n21,63\\n59,8\\n43,37\\n51,5\\n31,35\\n13,47\\n65,47\\n49,41\\n67,37\\n13,21\\n58,15\\n67,7\\n33,56\\n38,19\\n21,66\\n1,63\\n65,27\\n59,27\\n43,51\\n50,5\\n52,15\\n68,37\\n1,59\\n23,65\\n52,37\\n39,16\\n39,4\\n67,40\\n9,65\\n68,41\\n33,31\\n32,37\\n55,39\\n6,49\\n9,64\\n19,5\\n5,52\\n33,39\\n5,63\\n59,14\\n59,25\\n31,45\\n69,22\\n61,19\\n51,39\\n36,9\\n62,49\\n52,19\\n53,3\\n35,2\\n27,29\\n61,1\\n13,69\\n22,55\\n57,25\\n9,43\\n69,19\\n56,13\\n59,41\\n61,47\\n61,12\\n32,31\\n51,32\\n13,61\\n27,9\\n23,31\\n16,67\\n69,38\\n45,49\\n11,3\\n19,52\\n23,49\\n67,54\\n16,53\\n11,55\\n41,23\\n9,45\\n57,11\\n63,1\\n51,24\\n47,31\\n57,45\\n7,53\\n41,13\\n11,45\\n63,17\\n26,49\\n69,23\\n46,25\\n59,15\\n20,51\\n41,32\\n15,45\\n45,31\\n31,29\\n15,1\\n14,67\\n56,5\\n20,3\\n61,4\\n69,9\\n39,48\\n47,43\\n5,61\\n43,26\\n27,53\\n65,17\\n13,43\\n53,15\\n49,65\\n63,61\\n55,8\\n39,15\\n39,40\\n61,51\\n37,1\\n57,29\\n66,19\\n63,33\\n29,13\\n51,38\\n2,67\\n31,33\\n55,4\\n12,45\\n60,1\\n41,27\\n47,37\\n13,67\\n19,59\\n47,25\\n51,33\\n1,62\\n48,13\\n10,65\\n53,23\\n37,47\\n25,52\\n11,1\\n49,53\\n55,51\\n25,51\\n60,9\\n39,55\\n58,51\\n57,33\\n15,54\\n18,3\\n2,55\\n49,1\\n43,48\\n31,28\\n51,41\\n11,34\\n66,51\\n32,43\\n69,35\\n37,25\\n39,17\\n33,25\\n47,10\\n67,43\\n63,45\\n17,59\\n61,49\\n56,3\\n37,41\\n39,31\\n49,17\\n25,27\\n19,63\\n60,37\\n7,49\\n17,45\\n49,23\\n64,15\\n36,1\\n22,51\\n63,32\\n5,68\\n13,35\\n33,8\\n69,31\\n50,11\\n7,69\\n17,3\\n69,45\\n49,25\\n59,5\\n55,11\\n1,53\\n10,61\\n35,54\\n11,57\\n35,53\\n37,19\\n19,55\\n43,12\\n33,43\\n36,53\\n59,38\\n63,11\\n59,7\\n39,45\\n27,31\\n65,30\\n15,42\\n52,39\\n36,59\\n28,49\\n21,0\\n69,28\\n23,54\\n44,45\\n7,61\\n65,25\\n34,47\\n39,12\\n45,47\\n45,5\\n49,2\\n29,47\\n9,49\\n58,43\\n39,47\\n51,25\\n9,52\\n51,1\\n42,39\\n69,25\\n19,67\\n23,15\\n63,40\\n15,52\\n51,29\\n33,52\\n7,66\\n51,40\\n7,51\\n45,18\\n55,15\\n47,52\\n28,33\\n40,41\\n5,49\\n56,7\\n36,35\\n55,29\\n58,35\\n53,5\\n44,51\\n59,44\\n56,29\\n57,27\\n34,21\\n11,58\\n15,69\\n47,22\\n35,28\\n61,34\\n3,47\\n54,49\\n70,43\\n46,15\\n49,26\\n58,7\\n17,39\\n41,10\\n63,15\\n45,21\\n35,7\\n24,31\\n7,48\\n53,7\\n49,44\\n43,49\\n51,19\\n37,33\\n47,16\\n37,53\\n43,38\\n32,55\\n47,39\\n39,35\\n35,9\\n55,3\\n7,63\\n55,14\\n69,11\\n57,5\\n41,21\\n6,57\\n67,44\\n59,35\\n67,47\\n41,52\\n38,23\\n51,53\\n13,63\\n69,43\\n63,41\\n8,17\\n33,11\\n43,63\\n49,21\\n49,19\\n38,37\\n19,50\\n48,9\\n57,18\\n59,34\\n44,63\\n47,32\\n53,48\\n45,65\\n50,29\\n37,57\\n50,3\\n67,63\\n61,27\\n49,47\\n29,52\\n21,3\\n43,5\\n17,65\\n59,46\\n39,37\\n9,66\\n37,21\\n19,61\\n9,56\\n11,31\\n47,59\\n14,49\\n53,21\\n10,1\\n63,9\\n51,55\\n50,21\\n48,5\\n16,57\\n43,13\\n67,8\\n33,34\\n9,53\\n37,27\\n29,35\\n46,7\\n37,36\\n63,53\\n69,26\\n17,61\\n69,21\\n50,51\\n41,47\\n41,53\\n11,65\\n64,7\\n3,48\\n19,51\\n35,42\\n23,27\\n47,15\\n29,53\\n50,47\\n65,2\\n51,35\\n39,61\\n68,45\\n51,50\\n37,13\\n63,39\\n29,48\\n49,55\\n68,5\\n29,33\\n35,17\\n53,47\\n55,35\\n21,31\\n22,49\\n14,63\\n19,68\\n11,59\\n49,27\\n53,45\\n59,31\\n25,35\\n10,43\\n33,45\\n1,58\\n45,30\\n39,7\\n51,47\\n38,51\\n1,65\\n60,27\\n41,39\\n55,43\\n41,17\\n24,51\\n43,35\\n11,13\\n57,51\\n52,7\\n23,51\\n46,33\\n41,55\\n11,69\\n69,29\\n35,29\\n51,15\\n49,34\\n67,28\\n6,61\\n7,45\\n66,3\\n55,57\\n39,6\\n47,13\\n23,53\\n63,21\\n59,4\\n67,19\\n25,31\\n41,6\\n57,17\\n66,37\\n18,55\\n52,31\\n59,21\\n11,53\\n33,46\\n5,59\\n40,35\\n15,50\\n7,64\\n49,51\\n5,54\\n30,47\\n43,45\\n45,45\\n43,43\\n51,17\\n3,55\\n59,50\\n50,57\\n45,25\\n44,3\\n63,35\\n63,27\\n15,61\\n9,17\\n3,67\\n33,57\\n41,28\\n4,63\\n45,29\\n64,37\\n5,51\\n34,59\\n19,62\\n61,11\\n67,9\\n39,60\\n40,43\\n65,23\\n48,19\\n54,21\\n59,43\\n13,51\\n43,3\\n39,41\\n9,67\\n44,27\\n51,59\\n54,17\\n43,1\\n49,52\\n36,23\\n59,37\\n12,53\\n59,22\\n37,50\\n15,51\\n36,31\\n19,3\\n67,41\\n8,45\\n49,3\\n54,53\\n14,1\\n67,29\\n6,45\\n1,67\\n57,40\\n53,41\\n37,29\\n45,15\\n19,69\\n34,35\\n5,21\\n39,34\\n61,21\\n53,24\\n37,55\\n56,31\\n69,14\\n44,55\\n51,43\\n45,7\\n53,61\\n9,51\\n47,8\\n63,37\\n15,43\\n40,31\\n55,20\\n54,39\\n37,43\\n5,47\\n68,1\\n35,5\\n63,22\\n66,5\\n39,25\\n54,19\\n51,31\\n34,43\\n24,49\\n34,49\\n19,49\\n29,41\\n7,67\\n12,31\\n45,42\\n31,11\\n69,39\\n49,13\\n54,9\\n39,43\\n47,2\\n31,31\\n67,39\\n41,41\\n55,19\\n15,58\\n9,57\\n53,39\\n37,48\\n5,66\\n37,51\\n64,43\\n58,39\\n63,29\\n55,24\\n26,51\\n7,59\\n15,67\\n11,54\\n49,15\\n5,65\\n67,27\\n45,43\\n34,9\\n68,31\\n35,20\\n33,19\\n39,26\\n17,67\\n18,57\\n57,3\\n33,67\\n42,53\\n49,5\\n41,45\\n69,20\\n65,22\\n39,54\\n5,67\\n29,54\\n56,41\\n65,11\\n5,50\\n32,51\\n53,19\\n66,41\\n62,17\\n53,43\\n0,53\\n59,20\\n53,49\\n57,53\\n19,1\\n64,27\\n68,7\\n47,36\\n52,11\\n44,43\\n59,13\\n61,7\\n41,33\\n57,37\\n45,48\\n67,23\\n13,3\\n41,44\\n15,53\\n7,58\\n37,46\\n38,57\\n55,55\\n27,54\\n22,59\\n65,45\\n19,54\\n2,51\\n57,41\\n59,49\\n44,13\\n4,53\\n54,33\\n57,12\\n42,43\\n45,6\\n60,39\\n51,48\\n65,19\\n51,0\\n27,33\\n38,7\\n33,26\\n6,47\\n65,15\\n17,63\\n15,60\\n38,33\\n67,33\\n63,51\\n18,65\\n55,22\\n45,39\\n57,2\\n37,17\\n53,51\\n43,33\\n49,7\\n46,31\\n49,9\\n33,35\\n52,3\\n64,5\\n61,16\\n14,3\\n9,63\\n20,59\\n41,20\\n53,53\\n3,69\\n41,46\\n35,11\\n52,27\\n59,0\\n17,62\\n63,13\\n55,10\\n69,17\\n31,37\\n45,19\\n55,47\\n7,55\\n48,41\\n11,61\\n39,30\\n36,17\\n3,63\\n12,47\\n9,69\\n67,5\\n37,35\\n53,2\\n69,33\\n63,36\\n13,44\\n65,48\\n11,60\\n43,46\\n7,47\\n52,45\\n37,23\\n4,59\\n31,51\\n49,30\\n61,30\\n61,3\\n34,17\\n39,14\\n1,29\\n51,13\\n21,57\\n51,45\\n21,48\\n51,57\\n28,13\\n50,35\\n1,47\\n35,41\\n35,23\\n46,17\\n53,55\\n38,21\\n32,49\\n27,51\\n65,1\\n43,57\\n39,53\\n13,62\\n17,69\\n33,53\\n54,15\\n47,1\\n34,51\\n64,17\\n67,1\\n6,63\\n70,3\\n49,18\\n65,46\\n40,55\\n34,13\\n65,35\\n55,41\\n57,9\\n41,3\\n58,31\\n34,55\\n53,26\\n48,23\\n34,7\\n69,18\\n55,27\\n58,19\\n17,57\\n5,56\\n64,25\\n63,4\\n39,3\\n65,31\\n8,51\\n54,35\\n47,44\\n67,11\\n47,49\\n33,9\\n25,25\\n51,3\\n43,39\\n61,36\\n31,15\\n43,24\\n29,11\\n39,9\\n69,13\\n65,3\\n33,49\\n11,67\\n58,3\\n53,29\\n3,65\\n53,30\\n63,7\\n67,21\\n61,17\\n3,13\\n33,44\\n62,7\\n58,25\\n37,44\\n67,36\\n41,22\\n11,51\\n51,52\\n10,57\\n19,64\\n61,10\\n30,51\\n45,23\\n47,4\\n4,67\\n43,30\\n42,51\\n48,65\\n41,19\\n55,23\\n34,33\\n28,39\\n53,35\\n35,43\\n54,13\\n40,25\\n53,34\\n27,1\\n15,44\\n49,67\\n64,19\\n53,46\\n13,57\\n35,45\\n47,28\\n59,48\\n66,21\\n15,66\\n62,23\\n36,19\\n46,45\\n47,34\\n45,51\\n61,35\\n3,70\\n59,17\\n50,33\\n27,49\\n69,36\\n35,35\\n42,25\\n5,69\\n45,20\\n44,49\\n34,31\\n63,34\\n49,43\\n24,6\\n28,6\\n10,21\\n17,2\\n8,67\\n53,60\\n50,52\\n62,69\\n67,4\\n38,29\\n35,16\\n10,34\\n68,44\\n17,20\\n36,11\\n66,35\\n2,2\\n18,2\\n70,53\\n46,30\\n26,13\\n41,16\\n10,62\\n32,4\\n16,4\\n26,48\\n46,49\\n67,50\\n65,38\\n69,8\\n69,44\\n18,4\\n8,27\\n42,36\\n55,36\\n27,6\\n47,26\\n64,22\\n34,37\\n64,12\\n58,55\\n52,24\\n66,26\\n68,14\\n10,0\\n61,28\\n70,31\\n70,15\\n16,41\\n64,67\\n32,61\\n60,36\\n54,31\\n57,60\\n15,24\\n8,47\\n58,52\\n56,25\\n48,42\\n11,30\\n26,6\\n4,12\\n2,66\\n38,42\\n68,30\\n31,44\\n52,1\\n37,58\\n44,40\\n52,30\\n66,4\\n14,25\\n13,12\\n68,32\\n40,18\\n58,66\\n62,1\\n70,44\\n34,68\\n8,9\\n9,60\\n8,1\\n70,42\\n44,66\\n7,20\\n6,7\\n59,68\\n42,60\\n60,11\\n49,36\\n8,15\\n28,41\\n28,14\\n58,9\\n26,56\\n6,50\\n70,33\\n46,41\\n30,10\\n10,16\\n5,10\\n50,13\\n35,22\\n44,37\\n39,44\\n64,10\\n0,64\\n39,58\\n6,21\\n54,3\\n12,12\\n70,2\\n50,62\\n0,62\\n63,2\\n56,45\\n20,4\\n58,41\\n54,11\\n13,30\\n64,34\\n16,44\\n70,10\\n14,14\\n52,20\\n33,28\\n7,32\\n11,56\\n38,50\\n30,26\\n54,50\\n63,6\\n7,46\\n62,11\\n18,18\\n60,46\\n25,12\\n13,4\\n68,42\\n46,26\\n68,34\\n46,14\\n38,54\\n34,25\\n58,16\\n62,22\\n4,65\\n52,9\\n58,2\\n60,38\\n37,26\\n63,30\\n16,10\\n5,16\\n66,2\\n37,12\\n12,15\\n58,47\\n6,48\\n36,14\\n70,26\\n52,50\\n12,34\\n58,10\\n0,54\\n69,58\\n60,35\\n8,8\\n52,12\\n64,13\\n12,64\\n34,14\\n14,47\\n6,24\\n50,61\\n44,19\\n56,12\\n53,40\\n32,58\\n46,23\\n33,54\\n51,56\\n10,58\\n28,42\\n16,50\\n44,0\\n70,20\\n66,27\\n54,47\\n38,14\\n22,20\\n48,50\\n61,18\\n8,23\\n39,56\\n26,34\\n62,70\\n24,40\\n0,41\\n12,10\\n56,28\\n34,19\\n38,56\\n64,36\\n55,34\\n52,59\\n54,52\\n64,39\\n18,6\\n48,20\\n5,62\\n54,45\\n46,28\\n60,31\\n20,18\\n38,58\\n44,32\\n12,22\\n46,38\\n40,22\\n54,20\\n21,52\\n48,70\\n14,20\\n10,60\\n68,6\\n38,22\\n44,26\\n30,20\\n17,8\\n66,7\\n8,24\\n40,54\\n2,34\\n5,24\\n22,37\\n50,18\\n39,20\\n69,40\\n6,26\\n28,62\\n28,67\\n43,42\\n68,38\\n32,30\\n40,0\\n18,8\\n65,12\\n15,12\\n8,28\\n46,29\\n62,48\\n38,9\\n58,22\\n65,40\\n62,54\\n70,6\\n59,10\\n0,28\\n7,56\\n44,28\\n42,4\\n46,47\\n42,20\\n36,20\\n57,8\\n18,22\\n8,60\\n48,7\\n31,34\\n64,26\\n42,10\\n32,42\\n6,54\\n38,47\\n4,10\\n38,35\\n65,26\\n34,0\\n67,56\\n54,56\\n60,16\\n41,0\\n24,57\\n60,56\\n40,44\\n51,62\\n12,36\\n3,56\\n57,70\\n65,44\\n70,19\\n48,39\\n54,8\\n58,32\\n18,24\\n66,18\\n13,0\\n34,3\\n54,34\\n46,2\\n60,26\\n67,48\\n62,53\\n7,12\\n24,12\\n59,36\\n38,70\\n4,62\\n43,64\\n28,19\\n40,10\\n70,1\\n8,22\\n8,54\\n46,34\\n5,48\\n52,44\\n28,4\\n22,0\\n36,24\\n42,32\\n44,24\\n28,0\\n15,0\\n68,22\\n46,66\\n55,12\\n14,4\\n6,58\\n67,6\\n60,54\\n21,22\\n70,61\\n16,18\\n40,33\\n58,12\\n9,70\\n4,23\\n42,12\\n52,57\\n44,31\\n32,10\\n11,48\\n38,39\\n26,3\\n0,67\\n63,56\\n60,34\\n32,6\\n68,58\\n4,66\\n44,11\\n54,22\\n50,1\\n2,10\\n38,62\\n13,40\\n57,46\\n8,68\\n5,44\\n70,7\\n53,32\\n56,33\\n47,66\\n66,52\\n42,16\\n43,16\\n60,4\\n54,40\\n44,36\\n56,35\\n12,4\\n60,14\\n28,23\\n48,46\\n65,70\\n10,33\\n34,56\\n0,69\\n70,51\\n70,11\\n65,54\\n41,38\\n20,28\\n22,19\\n32,62\\n64,28\\n4,19\\n25,0\\n67,42\\n10,24\\n8,53\\n13,6\\n54,42\\n16,13\\n31,40\\n70,38\\n62,40\\n27,34\\n32,18\\n34,24\\n20,69\\n4,6\\n33,6\\n14,24\\n46,5\\n36,4\\n48,63\\n0,52\\n42,5\\n30,55\\n46,4\\n38,45\\n10,10\\n46,19\\n56,61\\n41,68\\n12,41\\n70,12\\n33,20\\n54,7\\n54,16\\n44,64\\n30,54\\n7,60\\n67,58\\n56,8\\n52,26\\n44,7\\n2,18\\n10,50\\n0,61\\n19,4\\n50,20\\n12,8\\n56,27\\n3,52\\n29,18\\n50,44\\n38,59\\n10,32\\n38,17\\n39,42\\n67,30\\n38,60\\n22,17\\n45,52\\n42,58\\n30,15\\n32,35\\n52,34\\n44,9\\n50,55\\n39,22\\n53,0\\n14,26\\n32,60\\n34,2\\n12,50\\n66,14\\n15,48\\n46,37\\n30,7\\n22,15\\n70,46\\n50,49\\n30,46\\n51,26\\n61,22\\n60,5\\n6,16\\n55,58\\n48,61\\n64,2\\n64,9\\n45,2\\n12,11\\n68,55\\n64,56\\n40,27\\n32,54\\n56,53\\n41,24\\n36,68\\n28,15\\n51,34\\n60,45\\n32,17\\n64,44\\n12,63\\n2,20\\n52,46\\n24,19\\n59,40\\n9,50\\n33,30\\n18,7\\n60,2\\n18,60\\n0,60\\n24,30\\n25,32\\n47,58\\n9,58\\n7,44\\n65,16\\n39,0\\n1,54\\n14,34\\n40,66\\n30,28\\n48,18\\n63,0\\n3,54\\n48,67\\n56,22\\n10,22\\n10,17\\n16,30\\n63,48\\n34,10\\n30,60\\n22,57\\n70,48\\n56,46\\n58,33\\n28,52\\n20,50\\n60,42\\n58,48\\n14,0\\n2,39\\n0,13\\n4,51\\n0,66\\n6,55\\n0,21\\n52,51\\n38,66\\n6,70\\n39,52\\n31,8\\n58,34\\n54,67\\n14,38\\n65,42\\n26,16\\n37,70\\n50,26\\n4,28\\n13,50\\n35,46\\n31,46\\n12,18\\n0,33\\n48,0\\n70,63\\n44,47\\n50,54\\n40,50\\n65,10\\n10,13\\n10,36\\n14,45\\n34,61\\n35,68\\n52,41\\n30,33\\n21,2\\n61,0\\n25,46\\n31,70\\n70,8\\n6,34\\n28,18\\n42,13\\n59,28\\n68,16\\n8,10\\n36,18\\n52,48\\n4,2\\n39,50\\n24,0\\n42,62\\n44,54\\n69,6\\n48,68\\n50,28\\n30,22\\n8,35\\n24,38\\n54,0\\n64,51\\n14,58\\n52,25\\n44,65\\n64,3\\n0,2\\n40,8\\n10,23\\n6,6\\n29,24\\n56,40\\n48,22\\n52,66\\n50,43\\n30,50\\n4,61\\n10,3\\n35,40\\n56,64\\n31,22\\n28,47\\n0,1\\n34,27\\n39,2\\n61,66\\n44,30\\n40,4\\n46,21\\n57,24\\n30,66\\n39,36\\n19,24\\n30,30\\n6,4\\n48,21\\n9,48\\n11,46\\n22,64\\n17,66\\n59,70\\n26,69\\n32,57\\n14,46\\n8,26\\n43,2\\n56,1\\n64,20\\n56,52\\n15,56\\n31,14\\n10,68\\n46,6\\n65,20\\n30,38\\n48,3\\n62,12\\n4,38\\n42,54\\n30,53\\n58,50\\n47,12\\n60,68\\n56,65\\n40,11\\n27,40\\n40,2\\n22,4\\n53,20\\n4,34\\n43,52\\n61,60\\n1,28\\n29,38\\n50,70\\n63,28\\n33,62\\n40,32\\n21,40\\n17,58\\n10,67\\n16,42\\n6,31\\n15,22\\n8,37\\n40,39\\n17,22\\n21,60\\n49,48\\n68,35\\n4,69\\n18,66\\n2,33\\n26,36\\n69,48\\n16,48\\n14,12\\n34,30\\n26,67\\n2,17\\n41,70\\n18,37\\n10,8\\n49,40\\n48,17\\n42,59\\n67,20\\n22,62\\n47,30\\n10,66\\n62,4\\n32,0\\n50,50\\n38,52\\n60,48\\n20,12\\n20,30\\n53,36\\n23,8\\n24,44\\n46,35\\n12,48\\n53,52\\n16,51\\n24,10\\n68,50\\n46,70\\n7,34\\n3,22\\n10,63\\n10,70\\n61,8\\n12,28\\n24,61\\n0,38\\n65,56\\n54,32\\n6,66\\n6,46\\n0,50\\n32,67\\n70,30\\n8,2\\n30,6\\n26,0\\n12,23\\n47,70\\n24,26\\n66,68\\n42,52\\n38,65\\n2,41\\n2,65\\n56,54\\n29,30\\n65,28\\n37,22\\n46,56\\n32,16\\n42,65\\n20,65\\n16,27\\n30,2\\n52,54\\n35,58\\n60,30\\n8,48\\n14,9\\n30,27\\n31,42\\n23,52\\n36,25\\n50,34\\n51,18\\n6,20\\n26,10\\n26,53\\n54,60\\n14,64\\n44,15\\n52,6\\n51,70\\n2,62\\n3,44\\n18,34\\n2,8\\n60,10\\n60,24\\n11,10\\n67,46\\n70,23\\n42,23\\n24,5\\n56,32\\n54,27\\n15,10\\n13,8\\n28,34\\n31,24\\n5,36\\n24,58\\n22,12\\n62,64\\n56,57\\n13,14\\n33,48\\n64,46\\n11,66\\n52,5\\n44,48\\n19,30\\n48,36\\n64,40\\n17,10\\n48,44\\n28,66\\n31,26\\n12,42\\n22,32\\n20,22\\n5,32\\n69,68\\n38,32\\n46,55\\n16,35\\n64,63\\n18,58\\n13,38\\n36,22\\n64,23\\n62,24\\n64,62\\n36,16\\n36,2\\n49,4\\n22,50\\n30,3\\n61,48\\n9,2\\n8,34\\n4,40\\n32,65\\n50,37\\n13,70\\n58,49\\n65,0\\n23,48\\n24,39\\n18,52\\n14,62\\n65,62\\n0,16\\n12,30\\n32,44\\n11,0\\n50,23\\n64,18\\n8,32\\n25,20\\n54,25\\n70,28\\n43,34\\n2,25\\n19,56\\n20,68\\n54,62\\n0,18\\n35,44\\n2,1\\n48,11\\n41,14\\n28,48\\n18,36\\n10,18\\n68,43\\n34,44\\n10,12\\n36,3\\n13,34\\n50,39\\n9,6\\n36,54\\n44,18\\n42,14\\n14,36\\n32,34\\n62,18\\n68,70\\n6,12\\n18,49\\n9,44\\n34,66\\n57,22\\n24,42\\n34,69\\n48,34\\n70,50\\n0,58\\n50,67\\n0,14\\n0,40\\n44,12\\n22,27\\n19,8\\n8,63\\n33,14\\n10,59\\n32,22\\n19,46\\n48,47\\n20,70\\n52,47\\n20,20\\n6,18\\n70,35\\n70,64\\n20,39\\n35,52\\n2,52\\n0,29\\n68,29\\n25,16\\n12,38\\n12,60\\n16,26\\n12,16\\n0,8\\n36,8\\n32,28\\n68,53\\n22,28\\n44,4\\n1,30\\n52,13\\n66,8\\n52,64\\n40,40\\n21,6\\n16,64\\n50,40\\n26,24\\n32,3\\n0,44\\n2,14\\n59,12\\n56,34\\n8,16\\n2,11\\n0,32\\n45,8\\n5,14\\n49,12\\n58,30\\n70,54\\n12,32\\n63,16\\n60,66\\n30,64\\n36,41\\n40,15\\n62,9\\n2,26\\n38,40\\n16,36\\n10,39\\n18,43\\n56,39\\n66,23\\n23,4\\n58,6\\n0,30\\n58,4\\n37,2\\n32,45\\n28,37\\n2,22\\n11,44\\n6,62\\n49,70\\n30,59\\n28,69\\n68,12\\n52,23\\n32,1\\n31,6\\n44,10\\n27,10\\n22,6\\n43,18\\n32,56\\n33,64\\n15,64\\n18,14\\n35,18\\n54,41\\n66,58\\n12,61\\n69,24\\n16,70\\n21,50\\n40,46\\n34,28\\n34,50\\n18,44\\n3,12\\n38,41\\n17,6\"","export default \"r, wr, b, g, bwu, rb, gb, br\\n\\nbrwrr\\nbggr\\ngbbr\\nrrbgbr\\nubwu\\nbwurrg\\nbrgr\\nbbrgwb\"","export default \"bwb, wrrbg, ubwg, rwg, urbbgrr, wugr, rububww, rbrw, ggw, grgwu, wb, gwuuubw, gbr, ugur, rug, ugw, rg, uru, wgrbgug, buwwrwu, bbbuw, urbug, rrbr, uwbr, wurr, wbwrw, bug, rggwguru, brrgub, uuwg, gww, gwb, ubrb, wgrg, rubbgwu, bbb, buu, gbgrwg, rwuwbg, uubwbu, buuu, uwurwgu, gwbugwgw, guru, brww, bwgrugb, rbbgrw, ruubg, wub, wbw, bgww, bgugg, rru, urrwuw, bwwgw, brbww, gwug, bwwwbwb, uubggg, gbgb, rbgub, bwuwgg, wrbb, buwrw, gbbwrrg, gug, wuww, u, ru, gbbbu, ugwrwgb, rgb, rwwuwuwb, ruugwrb, rgruw, wwuwwbbw, urrrbu, bwg, ub, urg, ruwg, bwr, wbwb, brbwrwww, rbwgrgub, gbb, grwwb, bwggw, urwr, rrrug, buw, gbbgrguu, rbgg, brbwur, ububwb, bur, wruru, buurbu, ggb, ggr, rggwrub, uwbbbbgb, rrrb, uwr, bwwrr, brgw, urrwug, gub, rwwb, wgw, ggur, bbrb, uwrbgbu, buubu, urb, bg, gguubbrg, gg, rwr, uubb, wwb, uwgbub, brbgrrb, ubbbrwb, ugr, ggwwug, wbgbu, grw, wrb, brr, rub, gr, guwb, ggrgr, rrb, uuurb, brw, wrg, guw, uggr, uuurgw, wrrgu, wwuu, uruuu, bwrr, wwg, bwguu, rugww, rbw, wur, buuuw, rwb, bbg, gbu, rurw, brwbbb, wbbgguw, rrrr, bwbbb, bgu, uurbb, gwrbwb, wgwrgbwg, wgrw, gugw, urrbb, rww, ruu, uwbrbb, bbbrwb, bugw, wug, wgg, rwru, r, uwg, wggr, brbwgb, uwbuwg, ubr, rbgwrrw, grwbur, grrrbb, wgr, rrbw, uurw, wbgg, buwg, wru, ruwwu, wbbbrg, grgbgbr, uuu, wrr, ubwr, rubbgb, gbrw, gbug, uwrur, ugru, uruggr, ubu, uwgg, wrgb, wbg, ug, guu, bgw, wbu, wuru, rur, wwbwwr, wbugg, wrwgwwb, rrgu, uuugg, bgbb, gb, uwugwgu, bguw, ugwgwugb, brburg, grrbw, brb, bguwb, bwugu, ubwgg, rbr, wwrb, bwgrug, rbww, gwg, rgrgu, bwbgrgb, wwbu, bwugw, uguu, uubuggwb, uwb, gbg, uubur, urwbub, uggrr, wrurb, bbr, uggg, gur, wrwrw, bbbrug, bbuw, b, wbgw, bubgubg, ggg, bru, gbuwr, ruw, wgu, ubb, gru, bb, uwbug, ugbrgu, uruwrrbb, rrug, bgbu, ggwgbrr, rwuuuuu, bgr, rrwu, ruub, burw, bbww, uuuu, gwwb, wrur, grb, br, bwwgg, gburg, ugubw, gbwbwbb, gwrgubrg, bguwwr, grgugbw, rugw, guww, brrrr, uguurb, uwwbbw, guwgu, guguubr, rwu, bbbwb, wggru, bub, rwrg, gw, bw, wrgbrb, ggbru, gwbw, wuwgu, rwgurr, gugr, rbu, wrbguww, uuww, rbuwu, uwu, rburgwu, wgbbuu, rggrur, wbr, buubb, rgwb, bgg, rwurbg, urgrg, rbrrr, rbur, wr, uwuruggr, buug, wubw, uubbbu, gwu, ubgg, rgu, uwwr, brgrgw, uuw, wwr, wu, grgwbbb, rgrbr, bbu, wuwgr, rrg, urw, urgbgr, bwwb, gurgu, rr, rgr, rbg, rgrr, uwgug, gwggbw, rgg, ubgr, ggww, gugggr, rrbgrw, rrr, ubw, uw, gbw, wrww, uwwwrwbu, bgwrugu, guur, grrruuw, ubrgg, ggrb, grg, bgrru, rurrb, ugg, wwgr, uwbrg, wuw, ubbu, rbb, www, wwubgu, ur, bububg, gwr, grgguwg, bubr, wwu, ggru, ugu, rgrru, uburu, wuu, wbugrwu, uur, urwgrwg, bwgwgwg, ubgru, burugw, wgbwrr, urr, wgb, g, ruwggg, wbb, bbrrg, wbuw, uubwugw, rwrr, uubgr, uww, gu, uubu, rrw, ugb, buuwr, uug, rbwbubgb, wgwburur, rrurr, uguw, wbrw, ggu, ruwgwb, rgw, ubrbgu, ururb, rb, ruuu, ubg, rbbbggwu, wg, wbrbbg, gwwwuu, bugg, uu, rbgwrwu, gggbbu, rbggu, wbwwr, uwbbu, ggrwu, brg, buub, bggguu, bu, gbrubgwr, wrwwb, bbw, wubrbb, bbwbbur, bww, uwwuuw\\n\\nwgurrgbbgwuuwwbwwuwggwrbggrbrwrgbbwwwbbbubuuwbwuuguwr\\nbwuuubbguuuurgwrrrrgguugurwbubbrrgugbuwurgu\\nwrguubgwbgrwubrbbgbrbuburugugbrgwruwrrgwgbgwubrgrgg\\nrbbbwbruubwruurbbbrbbbwwgrurgrgwugbbrwgwwuwgwwb\\nwrwrbrgrubguurbubbgbwubrgbbwrwwwburbwrrubbgruwrwrgubbgwwu\\nbrwrbuwbgugubwbuwgwbguwugbuwwurwurgwrurbrgwgwwwbrb\\nbwrrbbruwrgggurgwuwuubuwubbwwwwgbwubwbrguwwbrugurwgrru\\nburrwrgrbuwwwrwbuurrbwgbgwburrwwugubuggbguwrgurbggurwrw\\nbbwrgubwgwgrwubggbrgbrgwuwggwgrbbwbbuuuugwrgbubgurgwgwbbww\\nruwbuwwgwwgubuguurbbwggugwwwugrubwbwgbggwgrr\\nwuubwguggguwrwgbrrwbgubuwgrgbugrwubugggwru\\nrrugrbrwrgruwbwwrbwwubbuubwrrggwruruwbbwrwbbgw\\nwruubuwrgwbrwgbbwrbrbwruubrbuurbbguwubwuuguwwrrgggub\\nbgugwguwgrrbwbuugwgwruwugwugugbuuwwgggwgrggbu\\nbgwrbgugrgwwururrrbrwrwugwwbgrrubrgbburwrrr\\nbuuwbggrbrwwbgugwwugbwbbbrurgrrwrwbuubgrruwggbwbrugwr\\nrwbguwuubururbugrwbguuwuubbbbwrrurgbwubwgwwwgwbgbwggrrwb\\nwbbururwuuwuwrrgbgwgrubggbrburrbrgrugwuwbwrburwwb\\nbuubuggrbbuwbgwuwgwbwbgwrggbbbgguurwrrrubwgwrrurgruubu\\nuwbwwggrrrubwbbgrwgwgwgwguurwrwwrrwwwggrwwbwrgwuuwgw\\nrubbgbbrrbrubgbbggwgrrbrrurwrguggwwbuggbbgbwrwwbuwr\\nwuwbruwgugrgbwgbrgrbrbwbubgbrurbgurrurggbwgwguuwgrugwubwbg\\nbubgbgbwuwbggwuwgbrwbwrbuwrugwubwbwrwggwrggbbur\\nuwuwurrrbwubbbwgbbgwbuuurggwrwgbwwuuwwbwwgburburbruurwugrg\\nbrwrrbuguuuugbrugbwggggwuuuwguubbwuurwububwgwwuggrwr\\nuburugwgwruuruuugwrwrwuggrrgguubwgrbbbrrwwgruwbrurgg\\nruguwgguubbbgwbrwbggbuwrruwgrrbbbgurwgbwwwgrguurrbbuwwggu\\nwbwrwbbrrgwgbuguwggrrwwuruwbuwuurruurrbruurwuuwrgu\\nbuuubgbwugbubrbbgwurbuuuwuwgugbrrurwgbbgrwbrrgwgww\\nrugubbrbguurwrruburrubwwrubrugwwbbrwrgwrbrwwubwwrbu\\ngwruuwbbgrubruubgwuwwgbrguurrwwrrrwbrrgguurbb\\nrgwguuwrwbbgruwrbuwbwbbwwgbwggwubwuwwbwruwrruubrbrburrr\\nrbbwurrrbwugwbburwwwrbgggbggwbwrgubrbwrwwww\\nbgrwrwuwrwgrwgrrwgwrrugurrbrrrggggbwguwrwwbbrb\\nrwrrbwgrbgwbrruwbuwrruwwwgrguwgggbrbrwggwbwgwbrr\\nbuurugugugbrugbugbwwubgwrrubruuurgwurbrrrr\\nugbrbbrwbwgguwwrbbuwwgurbuuurgwrbrgbwwgbwurrrggrwwurur\\ngwgbubrbgwrrgrgrrgwrwbrurgurugguruwgwubbbrbbb\\nububbbrbrgrrgwrurgwwwbuuggwwwrwrwwugruwuuwgbwurru\\nrrururggwgbrrubbbwwwwuuguubugggwrggurbgurgguwgubbgbbrg\\nrgwbbgbgrgrbuuwgubgurbggbbggwgbuggwrugbwuuruugbwuuwg\\nuubgbwgguuubugbwrwgwggwbuwubrrubbwbwwuubbgwbb\\nubugrgwwbgbuurgbbggwggruubrwguuruubuwrbuggbgrrrrguuu\\nbrrgggrrbuugbbbrbgbbbbwgwrugwgbrbuwbuubrbgr\\nrgburwuwbwgrrbwgwgbgguugrrwwbgwuwubbbwwwbbuguw\\nbbgrrwrwwuuwrgrubrwbgrbuuuwuwbbbbgbwbuuwrbbrwrw\\nguuwbwwwrgbgwrwwbbrwruruggburuwrbguwwwwuuuwbw\\nrurwuubwwrggbuwrrgbgwwbbuuwbubgbbrurwbgwbbgwruuwgb\\ngrrrwuruwrgwgggugwbbrugrgggbbgwwbuwbrwuwubwbbrwugrugugw\\nubgubrggrwgugguruuruwuguwwbrbuwubwubrbugrwr\\nrrrwbubburgguurwbgubrggrgwrrurwuruwrrbburrgbwurwgbbwwrrb\\nbubbbuwrgwbbgrgugbbrgbubrrubbbrwbbwuwrggggubwbrr\\nruwgwguwbbwrbbuuuwgrgwrbgrgurruwbgrggwbgbugruwwwrrbb\\nguwrwgbuubwurbwrbbugrrwwggbugwgwugbugbgbgbub\\nrbwwubrgbgwrwrrgbuwrbwuubgwrugbrubwgburbugbrwwuwuwbwwrw\\nrguuubwbwgbbbububugrguurwrwgwrgbwggugwrw\\ngrbgbrggwubbbwbrbrwbbbwbwubuuggrruuruurbgrr\\nuwrubgbwuwrurrbbguubrbwbururwgrggbwwbgbbrwrubggwrbbbggwuuwrw\\nbrrwbrbugubrbrwgruurwbbbgrwwwgbrugwbgrrrbrwugurruuuuwb\\nugbrwbgrbuugwrguwrbbwwrwrrbbrurwbggggwruguwbwbwuuw\\nrrbrwbrbbrgrbbwwggugrwgbgugrgubggwrwrwrubwrgugbwwgbgwbu\\nggwrgwrbwggrbbugugbrwrgrrrurbrwbwrbbbwbbgrwgbbr\\nrbwggrwguwwwwgubgbggbuwwwubrbbrbgbwrbrggburrrwwuwurwg\\nuuwguuwwrrgurugbbbwruuuruwugrbrrgrwrgbbbuggwwrubgw\\nuwwbrgguwbbbburrrbbubrbrurrbbwggurrguguwgbrurwbbbgu\\ngwbrgbbbbgrwurbguwruggbrgrbbbrrbgwgrugbuuruwgwugwwb\\nwrrwwwurrubwbrgbwwggurwruwubggbuurgwbwbwugugbbbwr\\nggbubrwbwbuuuurguuruwbbruwugwgwugbrgbuwwwwgrbwrw\\nwguubbbwgbbbwbgrrburbgwrrrrrrbbgwwuwuurrwbrrw\\nwwuubwwburbrrgrubwgggwguubwrgwgbubuuuguburbrrwurgw\\nwrruugwuuuruubwrbrburuwwbwugwuwrwbwuwuurbwggwbgrbr\\nbwugwggrrrwrbbwbbruurugrrbgbwurburgwrwrrbruguubuwgrgb\\nwbubwgwwwrbbuurbbwwwwbwugrwbrurrruwuwugrrwugubwrbgrrgrr\\nwbgbggrggwgurugurwgrwwuuurgbrggurwurwwgurrbwrbgwrw\\nubruugbbrrgwrbuuguwgruuwggururwrururugwbbrwburrur\\nwwbgbuuggugrrrwwurbgbgbwwgwubgrrruurbubbgwgbrwggurbb\\nrgurrurrwbrgbrbrgbguuguwugwwbggbwubgwrbbuwbrgbbrbrgbwb\\nwuuuugwwwrwurbbugwguuubrguwggrgwrguwubbgrwwgrgbbgrguuwguwrw\\nugggbrubrbuwbruwguwrrguwgwrwgwrbgbuguubgggugrbwubugrr\\ngrbbggbrbuuurugruwbrrgrubgrbruuubwwbgwwbguwwgwwuwggrr\\nbbgrgwbruguwrggwwrwwrrggwbbwgugrgbrwurwurgrubuwgr\\nbrurwguurrrrubbuubggbrbwwrrbrugwrbuguwbgbgwubg\\nwbguwbgbrubgwrwbbgrgrbuwbgubruwbbguwwbbwugwwwwrw\\ngbuuuuruwgbwubgguwgrwggbwbrrwrugrgwbwruuwrr\\nwwrrugrbgrrwwrbbubgwbguuguwrgwuguwuuurguwwuwgbgg\\ngguugwwrrbubwrggbbbuugubbwwrubggbbbwrgggbwguww\\ngwurrgbrrbrurgbgwbgwrrgbbggrwwwbbuugrbbugrwubwb\\nbbwbgrbbrbgrrruuubwwrrbwgwgwrrrrggguggbrrrubggbrrgwbubr\\ngwgbbuguuuwurbggrrwrrgwbwbgbwurwgrugrwgurrwgrubwr\\nugubbgbgrwwrbgwrbwrbbbrbwurgbuurbuwrgguugrrugwbbrr\\ngrggbbuubwbgugguwuburrubwuubuugrgbwgurrwbubrrwburg\\nrwgwggurrbwurbgwbbgugrgrrggbrugrwwrgbbwrburwgrg\\nuwwrbwbrwbgubuugbgbbrbbgbwgbwbgbruwrwuwgbbw\\nguwrgwrgbbguuubbburuburrbrubugrrbwgrbwbwrgwrrgrbruw\\nbuwwgrwuwwuuuuugwubwwggbguurbgbbuggrbwuubbbw\\nrbggrbuuugrwwrwbrgrgugrbgwbuwrbuugbrbgwwurwrbwwrbggwrbburg\\nubwbrwrubbrubbgrwbwbwwugrbbgrgwgbrbwwwruwuuuuurrbuwwg\\nrwwgubgwggrbgbrbgurubbbrwurrgrubrgbgrggggbgbwwwgwrg\\nrugbbwwwwuwgbugubbrrggbwgbgbruguguwgubrguwwb\\nrwurrrgggbrwwrrbubbwrbbbgwugwwbuuwgrbgrbrwwrubgbrwbrrgwrwg\\ngbuwwbruguuubbubrbwubrruurrrrugbbrrwuggwbggw\\nrbubggbgwgruwugbggwgbuubugurwrubuugrrwwwgugwuuw\\ngrrubbguubrbwugbubguuugbrurubgurrrbrubguwrbrrbwwuw\\nbbruggrubwrbgwubbrrrrbwrrbgbuwbuguburrrgwwrwgggrbbugwubww\\nuuwgubwgguwuurrbugbgrwrbwwwgburuuguwguwrwgbgrgguuwrugbr\\nwggrgbrrugbgrugbrrubbbbrwwwugubrurgwwubwbggwuwgwwwwgwbgwb\\nggubuwrggbuwwwrrgrwwgururbuuwuguubrrwuubugrwugburugbbrurgw\\nwgrrwubuugrbbbburgbwubwurwbwgrgwgrrrbggbgrwbwguwwg\\nbggubgbuuwbrurwuwguuguwrgwgbbwugubwuwrggrrr\\nbggbbwbugbwggwgurubwrwgbbggrwwwrrggwbgrrrwgrrrgbwubgrbuurw\\ngbwugruwubgbuubrgbrgwggbgbrrbrbwubbbuwrgubbgwggbgbbbgubrr\\nrwgubwrguurbbrwbrrgwgggbwugbbrwwuuwbguwbuwguuwbwuurwbburr\\nruwbrubububggwuuwbruwubgruurrwuwruurbuuuuwwrubruugw\\nwbrrrrgbuwgruwwrbrrggwgggrbugggbgbbrruwrrwbwbggwg\\nrrgbwuwugurwwbrgbrwuguburbrbbururgwbwgruuubg\\nbrwubwuugrruurrbgrwugubuwuurwrwggubrrbrbgbggwugurgwuubuuu\\nwgburgrbwurruwbuuwbuuwwbgwrggrbguwwbuuubgw\\nwwrrgwrbwwuurrgbgwwruwurbgwuuuwgbrwggugbwrubbwrgrg\\nuuurbbrbgbrbbruruwurwrubrbwgrgubwbuguuurrrwgwwrw\\nwwrgrwuubuurgbuwgrbwbguubbbruwbuwgrwururrrbbbggwurwbwwrbww\\nbgwrwubgrbwbbwuurgbgwuubuggwbgwurrbgwgrgwguubrubwrw\\nrwwgbbrrrruggbwgugurwuwgggwgwubgbrugggrbwgguugw\\nuwbrrbrwruuurbuwgrurbbrgguubbrgbwrwwwwrw\\nbgwwgugrrbwwwbwgwbbgrbrggwrbwrbrwuubbgrrbwbgwurgwugwur\\nrgwurwrubgrgrgruwwrbrbgwbuwggbrbrrgwguggrgwgbwubwgru\\nbwgrgugggugrugwrwbuuwgburbbgurwwwurrgruubggw\\ngwuggrbgubgrrugrbubrgbwuugbwbbbwbwuwrubwuuuwbgwuwgguuwr\\nbbgubbwrbugrwrwgburruruwbwrugwugwwwgwguguwwrgwurrrgww\\nwrwgggrrbgwwggugbbbuwurggbbgbruwbbbbguuwgguubg\\nrbwubgrrbrwuwrrruuruubbrurwrrubuugrrbubrbbbbrbgrwuur\\ngrrrguuwuruggrwgrgguuuwgbggwurwbwbwbbwruruurubugubbgr\\nwgurgbuuugruubgwrrbbbbrburuwrruwggggruurugbbugrrb\\nurburbwgrgubbwgubrbubbgbgrgruugwbwwburrurbuubgrguwrg\\nwrrwugrrbrgwrwwuwrbggbrbgwggrbrbgrgubgrbbbbbwrggu\\nwuubuguugggugwbrwbbuwgurwwgrggububrgrbguwwgbuwrr\\ngwrgwubrwgwrbugurwwrbububrubggbwwgwbubbbuwrb\\nrbrgubgwruwwgwurgbubbggbwrbwrgrgwbguurwwub\\nrwuwbgugbuugwbgwgrwrrggwrrugrwugwgwruurwgbrgwrubrruub\\nrrwgguwrgrwugugbwrrggguuwguwwgwwbbbuwbwwuuurubub\\nbbwwwgbuwwrgbrugwugwuwgwwwbrwgbruububwrwrbugrwgwwuugb\\nubrurrgwgbrwgrubbbuuwuruggbwwbguwrbbwbwugwbugurbrguubur\\ngrugwbuwrwgrwubbbguuwgrrurggbuwbrwruwguggubgwwggrggbw\\ngbuuwrwugwgrburbrwbrggbbuuwuggrwbruuururguuwwwwgrbwwruwrr\\nbrruururbggrbgurbrugrbrrrrgbwgggwgburrugwurrw\\nrgbwuggwrugrwrbbrwbbrwwbbwbrbwurruuwrubgwrgbuugww\\nwwbgrwbugrrbwrrbwrwubrwuurwgbgugbrwgwruwbugrbgugbwrrbrr\\nububuwwgbgrguuguruwugwbubgwbwgrbbwbbbrgwgbuuuwwwwgwrburu\\nrgrguwrgwruuggubwwbbbbbggbrwwurrrubgwgurbbgbubwwguurgbrwr\\nuggwuwgrggurgwwrugrrgguururbuwbuuuugruwwgbrubruru\\nbubwuuuwurbggubbbwrgwuugwwrwubbrbbgwggggwg\\nrrugubbugwugbwrbrbuuwbrrgbubbguwrwgrrwbguurwwubbwur\\ngguuugggwuggbbgugwggwuguwrurrrwguwugwuubbruggurg\\nugrbwwbuuugrgwurbbrbruwgrgwrrwrugggbbgrguugwwrwgwbubrbgwgb\\nugubgubbggrggrbrwuwuugbrurggrguwbwuwuwwwbr\\nwgwuwbbbwbwgurbuugggrbwbuuwwrrwuwrbbwbgrbbrrurgugwgur\\ngrgbbugurrwgurrbbbburbuwwggburgbrgwubwbbrruuugbruuwbrguguu\\nrrbwrwugrggbggwbubgbbugruuwuwwgrurggbwbrruuruuburwugurr\\nrbgruwrgbggggrguubruwbrwgrwgguubruruwrwwrwwgbbubgwg\\nuurwwbguuubbugggwuuwgubrggrgwbwugurrrwrgwugurwrrubbguuuu\\nwrugbbgrgbwgwwrwwrbgrwurbgburgbburgbrgbbrguwruubwbrgrgwuw\\nwgrggwrrwrggwgurubburwbwrwgrgwwrbbbwbbrwrr\\nbbbrgrbbbggrrubbwgbwwgururgbbbggrgwgbggrrbguuwgwrgwwbwugu\\nbbbbbbrwwgwgrgbgrbwuurrruuuuggrbrubuurgrwbgbwuwgurwb\\nrubrgwrgubrgbrgwrgbbbwrbuwurbuubbgbbrwgwbrguggwbbuwrrbuwgr\\nrurbuuugbwwuuuuwbbbbgbgwurrbubwrgugubgwgruguggbburuwbgg\\nbbggwbbrggruwwwbgbuugbguruwrgbrwwurburgbbrruuggurg\\nuwrururrguubwwgurrurrwbrrbggugrrwwgrrrbubuuwbwruu\\nbburgggwrrgrwwwuguwrwwrubuwrrbgrbuuugwuwrwgw\\nbggggbugbwwubwgrgwubrbbwugbwuwbbbbuwgbgubrwbbgu\\nguwrrgggwgugubrguwugburugugrruwurgbwuwgbbwbg\\nbguwwwbbwbruuuwbwwgrbwwggbbggurugurrgbwwgu\\nrgrbbbbgrrwurwbrwrrggrgrugwurwbrrruruubbbwubuwburubwgb\\nbrurubrrwrgwrgubrgbgubgbbbuwwrgugwrbruwuwrrguwrw\\nrgrurwbrgggbrrwbbuguggugwgubrbgbrugbbwrgbrgbrbgwrgwbw\\nwggbgwgggbbbbuuugwbgbrrwbbbruwgwuubbrburgwggugbubwrwggrrwr\\nugwgbugwbbbugrrgbrguwgbuguwbwgrgwrgrbrgggwggwbrrgg\\nbgwbugwgwbgrgrbrubuwwrrrwrbbwuurggbbwurwrw\\nurrruurgbgubwgubrrbuwwwbwgruurrwbuwgwguwrrbuwwgwuwb\\nrugwbgwbwguuuubbwwuugwrwurwrrwggruwrbugwuuurwg\\ngwrubwrwrwbwbgwurgurbrrbbwwugwbbbuggrrrbbwwrbuwwuuwugwgg\\nrwbbrwgrbwugwwbwuwgwwugrrgwgrgrbbrwbwwbguugwuugbwrw\\nuuburwrbrrrbbwrwbrrbggbgbugguuuurbwrrbrbwgggruwwbrgwuggwgr\\ngubrrruuwubgbruwugugburbwbubgbrburrbwuuuwuwrw\\nbwgwuuwbuwgbwuuwbrbbugrgburrurwurrbwguwbbwubgubruug\\nbrbggwbwggbwwrwwbwbuwburgwbrbbrubwbugrwwwwrbrbwwrw\\nbrbrugrburugbgwrgruwuuwwbbwuwbwbruggwguuwwrwrbg\\nwwwbuwubgurwuuurgwwrgurgwbuwuwgbbuwbuugwuurrbwwgwwb\\nwbgrwgrubbugbubuwugrgbgbwuwwguruurggrgwubrugrrbbgbbgb\\nrurbgwrrguugugwbugwgwrgrbbwurguwbggwwrwrrwwurgbwu\\nururuububuugwuwugrrwuwrgrgurbwgrgbbwburuuugrbrwgr\\ngbruggubbgrwubrwwbrgwbruwgrbbwwbuubugruuuwuw\\nwwwbbgbruurrbbbwrgggrggbbgrwbbwbwuurguwuwuubgugwguwwgb\\nrurbbbgwubrrrgbrruugurggbrwguugurrrggurwrguburbrwwrw\\ngubggrrwbrurwurugubuubgrrbbwguuguwbwrbuuwubggbrbgwrrb\\nwggburgrrbrruruurbwwrwuurruuwrrwbuwgbrwubggwwrubwggb\\nrgwwwwuubgwbuubbuuubrbugwgrbbrgubwrgbwgwwubbbbbbwbbgwgw\\nwwubwgubrrugbububwwbbrugbbwurruruggurbuuruuwwrw\\nbwgbbrrbwrbuuuugwgrbgggwbubgbgwrgggggwrrbwugrbwbuwubbg\\ngbwwuwgbgubbrubrruwwwbgwrwgrrwubuwbbwwgurrubwbr\\ngwuwrgwubwrwrggburwggrruggbubwbbggbrugwgbburgugrrggwrw\\nuwuuuurrrubwbwrwwrubuuuuwuugruggwbburwgrbr\\ngrurbggrbrggbgubwrrgwuruuwuwurwurburrubgbugwbrwu\\nburbbggrrggbbubrrrbwwwwburwuuwrruwgruwwgwwrgwbwuwubururwub\\nbuwbrguuurrwuwbwwbuggggbbwwwwbuwbggurwuburugrguuugub\\nuwububuwgbrubbwguuwurrgrurrwbggrrwwrrrgrbubwuwgwrrgbububgr\\ngwuwgrbwrwwugbbgbwwuuwwrbggrruubwwwrgrrwrbrrgrbwwbgbbrw\\nbwbbwrwrgguurbwgrggbrburubgwrrgubwbbgbuugwgbbbgb\\nrguubugwuugbrbbuggwbwgwggwguwbrwuwgrwgugwwwrrwgbw\\nbwruuggrrgbubuggwbrwwbrbwuwwugwbuwuwbubwuwuggb\\nbggwwubbbbwrgburuwbwgbubbwwbrugbgwrggbrwbbbuwrubwgburgruw\\nurwbbbruwbgurrruugggrbbbbwrbubwwggubgurggwbggbgwwgw\\nrwwrrruwrrwuuubwburggbugwrugbgrwgbgrgggurrwbwrwguwwrwg\\nwbuuuuggbbrgurgwurbrruwrrugwuuggbbwbggwugugrrgwgwrwwrg\\nuurguggwrwwubgwgrggruwwuurububwwuurguuwbubgrgbuw\\nuurguwuruggrbbgurgbbubrrrwwurguruugbwggwgrgwgrrwrw\\nburrbwrggwgwwwwbwgbwwrwwwrurubguwwuurrgrgbbgg\\nggbrbwbwuuuurrwuwrrrrwuubgbrwwrrgubrwbrurbwrw\\nwwwwggbugwrwgwuugbuuwubbgggrguuuwbbbbrrrgbgbubggrwww\\nrbwwrugbwrrgrbgbgruwgwbururuurwgbrbrurwrw\\nuwggbrrubrugbbbrgbwwrbubwbgwbuguwgbgbuubuggwbwbrggwbuuwu\\nrbwgwrwgwuruwuruwwuwwbbwbgwgrbrwruuwrguwrw\\nburuwrbgwrrwwurwubgbgggubbugwwugwbgwubbwbrwgrbuug\\nwbubrgubuurbgbgguwubbgwrwrrrrwbwurbgggwbug\\nbrrgugbbwwbwrwrwuggbugrgrwwbbwubwuwubgrwbruggw\\nrbugggrgbubuwggggruwugbwubwruwgbrgrguggbuwbwbwbwrwwr\\ngrubrwrbrwbubbbrbbggrrburwruwbrgbbbwuguubbrwrgrwbrgururb\\nrbwrbgwrgwbrrbbwuggwuwgwwrurwubgbrwuuuubwrbwurwwurugbrwbgwrw\\nuuwruurggwbbubwgrgrurwwrggrgrwwguugwwbbbgurbwbru\\nuruuwrbbubrugwwwgwbgwwwbrggrbwubwrbggugwugwwrrrwg\\nrwburguuwrwbbbrwrgbgrgrwgrrurwugrgrurwgbbwr\\nuwrwggwuuwwbbgwgwubwggurwuuwgwwrwbubrbrubwugrrugbuwgwgbr\\nwugubwuwwbrwgwuurruwwrbwwgrrwgbbbburbggbrbugubbgw\\nwgrrwbrgbbbrbwuurrgwbuuurubggwrbwuwrgurgbbwrguugubwrrub\\nrwugbrrwgwgbbbrwgbwruuurgubuwggbugguurrurgurgrrg\\nbgwugwuruugbwrurggwuwgbbwwruburuuwwuwwbbwuwbrrbg\\nbgruwbbbbguwugrrbbgbwgwwburwwbwwbbwrgwbbgurwrw\\nwwbguwuwuubbbgrggrgruuurwwrbrurbgwurbruwrbgugwwguwuruwb\\nwbbubbbuwrbwrwbguwgggbuwbrwrburwrbugrrwgbwwu\\nruruubwuwubrgwwuwbruugwubrgwrwbgrrbrgwrwbwg\\nwgbuwrgubguruwugggruuwugbwwwbwuguuggwbwrubugbruwr\\nrwrbrrrurgwbwgbbggwgwrgubbbrwbrrrgubwruurwrrbbwwrbbgrgw\\nwgugrggwgwbggrwwuuuwbgwggbrbuguwwbgbruubwrru\\nwwrwwguuuwguwrrgrrubggwggggwgurwwwbggruururr\\nwwgbbrwuuwrrgrrwgwugbwrwbgbuurbggruwubgggwu\\ngrrbbgrgruwrubgbbrbgugbwgbrrbwwbubrubbguwrrgwrrug\\ngwrbubgggwgbgguugwrwwwuwgurwrburwgrbgrubuuwwwwwrurg\\nguguwgrwbuwgwgbuwgrurugrgwrbuugbuburuurrgrburubrgrbg\\nwbgwbbuwubrgbuwwrggrwwwrugbgurwgbwubggwurgwbrwrwbgw\\nwrbgrgburgwugrwubugwrwuwrggbwbgwrgbwbgbbbururgwrw\\nbrurwgwbgwwgurwugggrgubbwbwurbrbguuuruuuuuwgrwrrwwwrwu\\ngrbgbbbrbgubuwbubbbwrurgggwgwurwbubwuwbgugbgurbggwwguguwwb\\nurubggbbwururggburbwububugbbwbgwbbubgggruggrgrww\\nbwwbbwbwwrrwbwwbbgbgrburuwruwwrbrrbbwgrrwrgwrrbrubuggbr\\nrbwruuwrwurwgubbgrwrwbwuugbrurbuwruwurwgubggrru\\ngrrwwrrugwwrubwbuuubrubgwgbrgugbubrurwuuuurrbug\\nwgrbwggbbrwuburubbbrbbwwwgrugbbwwbrbwwuwwuuw\\nruuurbwruubbuwwbrrgwburbwugwbbwrwbrurwbuugguwww\\nwbwurbubgrrbubwwgrugwwwwubwrbgrwgurwugrgguuwgrubbubwgg\\nuwuuubuwggwrwuggbguwrbrbbgrbwrwwrubgrggubbwwgrrbwg\\nwuuwugbgubwwubbbwggguwrgwuwrrrbuugwwubuwubgrwrr\\nuggrbbgbrgrwuugbgbugbggrbgwbugwbgbgwbrrbrgruwgrbwrgr\\nruugbwrubrgwwwgwrrrwuwgbrgbrbbrurwrbruuwwrgug\\nbbubbgbwrwbrbwbbgwbgrggbwguggrgwuwwurwwbruwu\\nurgrrbugwwwurgbggwggugrbbuwwgbgggugubbubgr\\nwwgbuwgwgwubbuwgrugwggwurburrwrrrwruggwuwrr\\nbrrwrwrwuwuugbgbwbguwrruubrwggubbrgwwggwwr\\nugbbwwgrbgugbwwugwruggwgrggugwruggwrbbubwbguuuwuwugrrbb\\nurwwuubbgwuururbwbwgwgrwbuwrwbwugwrubwbwwruubgwbubgbg\\nubbbuwuuggguwrgggwuguuurbbruwbwgrbgbwgrbuubwurbrug\\nwgwbwbwgruubgwbgurwuburrbbbgruuuggwwgbrurrwgrwuww\\nuggrwrgwgubgrbbgwbrgwrbbbbuwbbugrgwuwubuurrbbgrwgbr\\nuwrrwgguuruuubrwuugubugruurguwwuubrrrgbbbwrbuguuwrwgb\\nuguugbwbuwbrwbbwbrgbrrwrwrwrggwuubrubbgbrrbrgwuguguuw\\ngbgruuwrrububurguruuwuubwrurugwuruuwgwgbrgbrbb\\nguwbgruwuggrubbuubuuubuurwuubururrbuggwruggr\\nwuurwrbgguuugrwgbrubgwrwubwwuwguwwgbbbbbbgrwgwr\\nwbgrgrwbwrwbruwruburuwwburwwbgrgrburwrgwbgwr\\nwwuwuuurgrrrgguuwbrwgbuuuuuwrggugrwgrguuuuuubw\\ngwwggggbrgwrrwubbrrbrwbgwuwwuwrrgrguwurrbburubbr\\nrgguwgwggguurwrgwuururrbrgguugwgrbwwurgwuuuurr\\nrwuwbguwgrbwbgggbuwwbwuubrwuwrwbbbuwwubrgw\\nwwrwuurrbuuwbgburrggbrrbbrubwwgbwwrrwubgwuwwrrruugururruww\\nrbrbwugrrugbugwggwurugrruwrubrgrubbrgugrgbbuggbgbbgrrgwrr\\nuuwggwgbrrrgbrrbuburugburuwwggbrguwbuwbwuub\\ngwburgbuwwruwbruggwruruubbuwbbwrrgrgrrwggug\\nbuuuubbrwgwwwbwrbubrbubgruuruwugbggguuurbrwrrgbrugwgbuu\\nububrwwwuwuuwuwubbbrbrwrrwbbrgrwggbugbbgrrugbgr\\nuggwwruwwbbwbrrrubrbugwbuwbgbgbgrrguwgwgrurwwgggb\\ngbguwugrwubwwwubwrbwuwbuwbuuugurgwwgrbbrrbrgwrbrgggrurguwg\\nrrbwuuguggwbgwrwbrgwrrwbgwubbgrrwgurgrrbrbbrwrubuwwrbgub\\ngburubbruwggrbggrrbbgrurrubgrwurwrgrguurrrgggbwrr\\nbwrwubgwwrrrbwuwbuuwwurggwugbguubgwbrwgbbggwggu\\nubugwbbrbrrwbuwbrbrggbrwrurugrrrrrgubrrurrbr\\nurrurrwuugbuwggbbguuwugwwrbbbwggbwurrgwwggurbgugrguwurrwwb\\nwbbrgwurwrggrbrgwgugwuurrubgrgrugrrbwbrguguburrbgbgb\\nuwwurbuubwwruwrwbrbubbruuwburrwrbrbwggbbbgurrggwbgguu\\nwrbwbbgurwbwgrubbgrgbubgbubrrgrbuwggrwruwgurbwwwggrgguugg\\nbrrbubrbbwwbbbwwubwgubbwbuwwwbrggrggwrugrwgwgwbrrrgwwugr\\nuwuruwwwrrbrwgrubggbugwrbuuuubwwugurwwrugrwbrrbbubb\\nbrbbbgrbuwggbrbgbuwwurwbbgggrrugrwbgbgbrrgrgwwbru\\nwuuwrrubrbwuguubwwgwggrwwwwwgwuurbwbbwburgbrwwbwrgrgbgguu\\nrrruuwbbrubbrrrburrurbwrrbwgbuggubgubwrugrrwbuwubwub\\nrbgbuurgruuwrgwwrrbrugbuwrrwbbrggguurwgrrbrrgrgwuug\\nbrrruuwwwrgwbwbgrwuuubwwrbwuruwrwbwwbgbrwgggwb\\ngwrruwburbrugwwgbgubrbwrburrggbrrwrwwrubwrwwrg\\nwrrgbbbwwbgbgwgurrubrguuuwbuuurwugwrwugrwbrwb\\nggbgrrbbrgrgbgugrbbruwruuwbwgggrwruuugrwug\\nrrrbwuwruggwguwrwwurggruwwwrwrrrgrbrubbbwbrbuuugrbggbbgbbu\\nggwbwgubwbggbggrruwwbwuwwrbbbggwwbgguurrurrwug\\nbwbugwwrburgbwuwuwwbugwwbrgbgbwbguwubwuwbrb\\nwrgbubuwgwwwwuwrrgubwubggbwwrwwruubgrrbbugwuugbwrw\\nrruwuwuuugrggrrguurubwbrrrruwbguwwurwbgwbwwbwbuu\\nrbbbrbbgwrbwguwgwwbwburbrrwruwwurgbgrbrrgbugwrwwrggb\\nbgwruuwubrguuuuwbgrbggubbrgrbbrruwugugwbuuwbr\\nwubruuggwugwbubbbrgrugwrrbgwbgrwurrgruwgbwgubbbw\\nwuuwbruwrwwwbwuwwbwrbrwwggbgrbgwwwwggwwggwrgguubbrguwu\\nwbbruwuwggbbbubgbuuwbrwbgrrwurugubrguuurbgrwguug\\ngbggubwgguuruguuurwbgrrbwguwrbugbwbbuuuwurwwgwgbbbb\\nrurrgbgwbwwubuwgubbwwrurgbrwbrbubrurwggbgrb\\ngwugbwbuuwwrruggrggguruubgbwugbrruggbbbrwrgwu\\ngbrwurwbbuuurubbbbgbbbrurwwbbbbwurrbwgbwurbwrwuwbur\\nbrgurwbwrrbwgbugbwwggburwubbwbbugurrbwwubgrgbwb\\nggugwwwrgbwbubrrgrbwwrbuwuwwwrwbuwggugbrugrrrwgrwwrrwrrggu\\nrrubrwwurwrwbrrgbwruwbbwbgguubwuwrwurwruuguwwrugbwb\\nuwbburrrbgburguurbuubrbbwrbuwuggwwugwgruwurguwwruuguugbbrb\\nuwrggbrrubrgrrbubwwguuuwggrburrwuwruuuubrrrbgb\\nuubruguwgurgwbbwrrrwgubwwbwrbrggguurrrugwwbuubgrb\\ngrwwgurrrbgbrwuuwbubwwbrwrgrggrbugrbbbrrwuwgrwwbrbwru\\nrbgwwbbggwrbbwbbuuugrwrrrggggrrurubgwbgbrwbgbwwr\\ngbrwurbrrwbgrurwuubwwrbuurgrrwgwrgrurruuubggbbbggg\\nwrwbuuggrgbwrurwgubgrbruuugrubwgwrrwbrgurbrwb\\ngrbgwbwrrrbgwbbrugrugwwbuuwrbuwbgrgrgrrwwuwuwburrbubgbww\\nwwbrbwbbubbgrbbguwwuurrbgbbguuuurbbguurgbrgwg\\nuwgwbugrbrgwgrgbrrbbugbwrbrbbuubuwbwwwrubwwrbwgggurwwgu\\nurgwuuuurrbrbwguurubgrwwrbrgwurwuubwruwrrggrbg\\nwrbwwbrgbrgrrurbgrrrbwbwurgrbwgrrbrrbggrrwgu\\nrbgrggbrggrgbwgwbbgwgwbubuwgrrbwbubggbbwugugww\\nuubgwurrubrbbrbgrbgbubwrubgwwwruburgbgrrwrgwwuwuggrrrguugr\\nbguubwrwgggbgwuwruwbgwwgrbbbbwwrguwggwbrwwbg\\nwrwurwubbgrurbbuugurggrgugggrbwgwwwrugbuwb\\nuuwwrubgurrgbwgrbbrgrurrwgwrgbwgruwrbuwrrrrgur\\nwbugbgbbubgwugggbwbrbgrgrrggwrwgrwrurbwbwbbbwr\\nurgburwrbwgguuurubgbrwrgwbuburguwwuwwubrwgb\\nruggurbuwgruuggruurwbwbgbgbgbubrbbrgubgwrw\\nrggbbrgbrgubuuubwwwgbrugggugwggubwrrwrgwrrwb\\ngrwugwrbubbggurbwwuwggugubwwrgrbguurwuwurrwrruu\\nbubuwuugbbuurbbgugbuuuwubuwrubgrgurrbburbrbgwbwgbrwgwrwu\\nruwrubuuugwrgbrwurbbwubuwgrrbbwbwuwrwuwrbwbgrbgbbbgb\\nwubrgwuubugrwgrbbgbgbwgrrubuuuwruwuurbbruuwrurrru\\ngggbrbbwgbubbgbgwwggrbrgwwwgbrubgwrbrbrwugrggburwrbbbbgb\\nwubbbruurwrbwubwugwwwbwbggurburbwurwggbbuwrbrrgburbbrbbwgw\\ngwuugggrrbbgwbrrrbbubrrbwguwbwguwbwbbbuwuugbwgrruwb\\ngbwrrruggbugrrgrbgrrbwwrubrwugwbrgrbgbbgrbwgbg\\nbbbruruwrrbburbbrbwggbrbwruwrgwwwrburuggbwruurrgrguuwrw\\ngwrrggugruwrggrgwwubruwwrwubwgwwrurwbgbgwwbwbgbwb\\nugbuuwrrwuuwgggbgugrwbrwurbrgurrrrggbuurbrgugwububbg\\nugrbrrguwuwbuwwrgrrbgburgwugwrggurgguruugwubwwgbruuugbr\\nrggwwwgbuwwgggbrrubwrwbubrbwrbgbgrgbwwbuwwrrurgubbrbrb\\ngwrburgugwubuubbwwgwuurwbuwrwuwurbbbwgggwbbwwub\\nrugbrguwrgubbbrbuwuwwbwwbbggbrurwwbguguwrurgwurubbgwrrrbw\\nugubbwwgguruguwgrwwuwwrgbuwruwwwbgwwbgwbrr\\ngbuwbggwrugrrrrgwurguwrgugggggguguuugbuubuwgugwg\\ngrwbgurbbbgbwgbgwbubrbguuubwbwbgrbrguwbrrwwggggbbwb\\nrbgwwgguburbbgrubbuuwwgwgbbrrwwbwwwurbrbbbrbwuuruuub\\nwgwubrurrwwwrwgwrgrwuuuggwrggrwrugubrgbrwbgubrbw\\nbbrurrubwrwguurwwbggrbwgruugbuuurbbuuruguwgrwg\\nrbwwwubgubrwwgbbbbbubwbgubggbubwbggbwurbgggugbwgwrwwuruwuu\\nbrwrubggrurbwwbruuwuburrbwwbgwwuwruwugwuurwgburb\\nrbruuuwwbbuurbguubwwwruuuwwgwuugwuwgbrbwbrbwrruwgbwuww\\nrrrbrbbuuuurgrwbbuwwubuwbrgbrrwwwggbgbugbbbuwubwrrgw\\nubbgbbwgurruubbubggrrbgurrwgbrguuwuguurwubgwbwrrurbwugbbu\\nbwwwbgguwbuuggrrggbbwgrrbbgbubrbrbbguwwrruwrbbugugu\\ngwuwwwubwuwubwbrggrgugbwwbbrwgbwuwwbwrggrr\\nwrrrurwwwuurbbgwubbgwuubuwrgbbrbwbbbruuugrgwwbwbuwbgwbrw\\nguuugbrbrggbwrwwbwwwbbbbrgrruubggrbwrwrugrugrrugb\\nrrgwwbrgbwuwwgrugrgurbgwuwurwuwwgbgurrgrurwbgrrurbwgu\\nrgrrgwbrugugbugggbrbrrgrwrwuuugwgbwubruwgrwggwgwbururug\\nbbbwggwbuwgwbwrrbuuwwrgbguubuubwgubuwrbbgwrwbgw\\nwgubwwrubwguubuwburuuuubbbwgbrgruuguuububbuwb\\nrbwbwrrgruwwbwrwgbbbgbrrrrgrwbbburgruwruwgggrbwwwuugwg\\nbuburgwrubugbwrugwbwbwbgrburrgubwbwbubuwwu\\nbgwgwwuggububwwrurgurbrububruwgurwbwbgbbrrwgbrugbrrrr\\nwggugwwubuubrgwbwbgwrrggubrrbggubwugwwggwbbbrbgrwwr\\nubbwwrggbgbrgbrwuwwrrrguwuwwrgrbuwrgrbbbbbwbu\\ngbwuggrgbuwrbbrurwruurrgubrwwgrwrubrbwbrubugbwuurggwbgruw\\ngwguwbwgrgwwgrubbwggrrurbubrugrrwuwggguwwgbw\\nwwgwrgrbrgrrgrurrbwwuugurwbbbwubrbwububggub\\nrbwwwgubwwubgruwuurrubburwbgurururgrwgbguub\\nwgbggrugurrbgbgwgbgrugwubrbgbwrwrrwwbrbgbwugwwrbgurbr\\nguggbgbgurgbubwrgwwubuwbbgbgwbruwwgwwrwugrwgurwwwg\\nwwbrwrguwwbgbrgrbwugbgbwwgurbggwbbrrggwwbwugguggugbr\\nwwuuuguggrubbgubbrgbwgwbruwwrbuuwwwwbrbrwbwbbwuggbwr\\nwuwbggbugrurgurgurbruwurubuuugwwgwgwrbrgrwgwwwrug\\ngwwgubwuuugubwrwbwgurruwrbuuuurwugbrrurbwwuwgru\\nbuggbrurggbggwgrrubwurgrwwwbwwbgwuuuugwugubgugbbbwugw\\nwwwgrbwuwbubuwuwuruurrgwurbwwbgbuuuuuubwbrrgubgbuuwbbur\\nbrwrbwbgbugwbbbuwuubrrrwrwwrrururbrrggurwuuuurbuurgubugb\\nuuwrbrrugurwwrbuwbuggbbbwrugbrbwrwwwwwbgrbu\\nuwbgugurrrgwwrugbgwgruwwgbbbwwwrrbubwrwuwguurgwwbg\\nrwgbwwgwgwruwbgwbrwubuubbgbggbbubwwbbrwuggwgrrubgr\"","export default \"###############\\n#...#...#.....#\\n#.#.#.#.#.###.#\\n#S#...#.#.#...#\\n#######.#.#.###\\n#######.#.#...#\\n#######.#.###.#\\n###..E#...#...#\\n###.#######.###\\n#...###...#...#\\n#.#####.#.###.#\\n#.#...#.#.#...#\\n#.#.#.#.#.#.###\\n#...#...#...###\\n###############\"","export default \"#############################################################################################################################################\\n#...#...#.................#...#.....#.....#...###...###...#.........#...###...........#.....#...#######...#.....#.............#.......###...#\\n#.#.#.#.#.###############.#.#.#.###.#.###.#.#.###.#.###.#.#.#######.#.#.###.#########.#.###.#.#.#######.#.#.###.#.###########.#.#####.###.#.#\\n#.#.#.#.#...#.........#...#.#.#.#...#.#...#.#.#...#.#...#.#.....#...#.#.....#.........#.#...#.#...###...#.#...#.#.....#.....#...#.....#...#.#\\n#.#.#.#.###.#.#######.#.###.#.#.#.###.#.###.#.#.###.#.###.#####.#.###.#######.#########.#.###.###.###.###.###.#.#####.#.###.#####.#####.###.#\\n#.#...#...#.#.#.....#.#.###.#...#.#...#.#...#.#...#.#...#.#.....#...#.......#.#...#.....#...#...#...#.#...#...#.#...#.#...#.#.....#.....#...#\\n#.#######.#.#.#.###.#.#.###.#####.#.###.#.###.###.#.###.#.#.#######.#######.#.#.#.#.#######.###.###.#.#.###.###.#.#.#.###.#.#.#####.#####.###\\n#.#.......#...#...#...#.#...#.....#...#.#.#...#...#...#.#.#.......#...#...#.#.#.#.#.#.......###...#.#.#.###.#...#.#...#...#...#...#.....#...#\\n#.#.#############.#####.#.###.#######.#.#.#.###.#####.#.#.#######.###.#.#.#.#.#.#.#.#.###########.#.#.#.###.#.###.#####.#######.#.#####.###.#\\n#.#.#...#...#...#.....#...#...###...#.#.#.#...#...#...#.#.#...###...#...#...#...#...#...###...#...#...#.....#...#...#...###...#.#.#...#.#...#\\n#.#.#.#.#.#.#.#.#####.#####.#####.#.#.#.#.###.###.#.###.#.#.#.#####.###################.###.#.#.###############.###.#.#####.#.#.#.#.#.#.#.###\\n#.#.#.#.#.#...#.....#.....#.#...#.#.#.#.#...#.....#.....#...#.#.....#.........#...#.....#...#.#.#.........#.....#...#.#...#.#.#.#...#...#...#\\n#.#.#.#.#.#########.#####.#.#.#.#.#.#.#.###.#################.#.#####.#######.#.#.#.#####.###.#.#.#######.#.#####.###.#.#.#.#.#.###########.#\\n#.#.#.#.#.......#...#.....#.#.#.#.#.#.#.###.......#.........#.#...#...#...###...#...#...#...#.#.#.......#...#...#.#...#.#.#.#...#.........#.#\\n#.#.#.#.#######.#.###.#####.#.#.#.#.#.#.#########.#.#######.#.###.#.###.#.###########.#.###.#.#.#######.#####.#.#.#.###.#.#.#####.#######.#.#\\n#.#...#.###...#.#...#.....#...#.#.#...#...#...###...#...###.#.###.#...#.#...#.........#.#...#...#...#...#...#.#.#.#.#...#...#.....#...###...#\\n#.#####.###.#.#.###.#####.#####.#.#######.#.#.#######.#.###.#.###.###.#.###.#.#########.#.#######.#.#.###.#.#.#.#.#.#.#######.#####.#.#######\\n#.#...#.....#...#...#.....#.....#.....#...#.#.#.....#.#.#...#...#.#...#.#...#.#.........#.......#.#...#...#.#.#.#.#.#.#.......#.....#.#...###\\n#.#.#.###########.###.#####.#########.#.###.#.#.###.#.#.#.#####.#.#.###.#.###.#.###############.#.#####.###.#.#.#.#.#.#.#######.#####.#.#.###\\n#.#.#.#...#.....#.###.....#.#...#.....#...#.#.#...#.#.#.#.#...#...#...#.#...#.#...#...#.....#...#...###.#...#.#.#.#.#.#...#...#.#.....#.#...#\\n#.#.#.#.#.#.###.#.#######.#.#.#.#.#######.#.#.###.#.#.#.#.#.#.#######.#.###.#.###.#.#.#.###.#.#####.###.#.###.#.#.#.#.###.#.#.#.#.#####.###.#\\n#...#...#.#.#...#...#...#.#.#.#.#.......#.#.#...#.#...#.#...#...#.....#...#...#...#.#.#...#...#.....#...#...#.#...#...#...#.#.#.#.#...#...#.#\\n#########.#.#.#####.#.#.#.#.#.#.#######.#.#.###.#.#####.#######.#.#######.#####.###.#.###.#####.#####.#####.#.#########.###.#.#.#.#.#.###.#.#\\n#.........#.#.....#...#...#.#.#...#...#.#.#...#.#.....#.......#.#...#.....#.....#...#...#.....#.#...#.#.....#.#...#.....#...#...#...#.....#.#\\n#.#########.#####.#########.#.###.#.#.#.#.###.#.#####.#######.#.###.#.#####.#####.#####.#####.#.#.#.#.#.#####.#.#.#.#####.#################.#\\n#...#.......#...#.#.......#...#...#.#.#.#.#...#.#...#.......#.#.#...#...#...#...#.....#.#...#.#.#.#...#.#...#.#.#.#.....#...#...........#...#\\n###.#.#######.#.#.#.#####.#####.###.#.#.#.#.###.#.#.#######.#.#.#.#####.#.###.#.#####.#.#.#.#.#.#.#####.#.#.#.#.#.#####.###.#.#########.#.###\\n#...#.#.......#.#...#...#.....#...#.#.#.#.#...#...#.#...#...#...#.#...#.#.###.#.#.....#.#.#...#.#.#.....#.#.#.#.#...#...#...#.........#.#.###\\n#.###.#.#######.#####.#.#####.###.#.#.#.#.###.#####.#.#.#.#######.#.#.#.#.###.#.#.#####.#.#####.#.#.#####.#.#.#.###.#.###.###########.#.#.###\\n#.....#.......#.....#.#.#...#...#...#...#...#.#...#...#.#...#.....#.#.#.#.#...#.#.....#.#.#.....#.#.###...#...#...#...###.#...#.......#.#...#\\n#############.#####.#.#.#.#.###.###########.#.#.#.#####.###.#.#####.#.#.#.#.###.#####.#.#.#.#####.#.###.#########.#######.#.#.#.#######.###.#\\n#...#...#...#.....#.#.#...#.....#.......#...#...#...#...#...#.#...#.#.#.#.#.#...#...#.#...#...#...#...#...#.......#...#...#.#...###...#.....#\\n#.#.#.#.#.#.#####.#.#.###########.#####.#.#########.#.###.###.#.#.#.#.#.#.#.#.###.#.#.#######.#.#####.###.#.#######.#.#.###.#######.#.#######\\n#.#...#...#.....#.#.#.............#...#.#.#...#...#.#.###...#.#.#.#.#.#.#.#.#.###.#.#.....#...#...#...#...#.......#.#.#.#...###...#.#.......#\\n#.#############.#.#.###############.#.#.#.#.#.#.#.#.#.#####.#.#.#.#.#.#.#.#.#.###.#.#####.#.#####.#.###.#########.#.#.#.#.#####.#.#.#######.#\\n#.............#...#.#...#...#...#...#...#.#.#.#.#.#.#.....#.#.#.#.#.#.#.#...#...#.#.#...#.#...#...#.#...#.......#.#.#...#.......#...#.......#\\n#############.#####.#.#.#.#.#.#.#.#######.#.#.#.#.#.#####.#.#.#.#.#.#.#.#######.#.#.#.#.#.###.#.###.#.###.#####.#.#.#################.#######\\n#.......#...#.....#...#...#...#.#.......#.#.#.#.#.#...#...#.#.#.#.#.#.#.....###.#.#.#.#.#...#.#...#...###.....#...#...#.........#...#...#...#\\n#.#####.#.#.#####.#############.#######.#.#.#.#.#.###.#.###.#.#.#.#.#.#####.###.#.#.#.#.###.#.###.###########.#######.#.#######.#.#.###.#.#.#\\n#.....#.#.#.......#.....#.....#.#.......#.#.#.#.#...#.#.#...#.#.#.#.#.#...#...#.#.#.#.#.#...#...#.#.........#.#...###.#.......#.#.#.....#.#.#\\n#####.#.#.#########.###.#.###.#.#.#######.#.#.#.###.#.#.#.###.#.#.#.#.#.#.###.#.#.#.#.#.#.#####.#.#.#######.#.#.#.###.#######.#.#.#######.#.#\\n#...#.#.#...........#...#.#...#.#.......#.#.#.#.#...#.#...###.#.#...#.#.#.#...#.#.#.#.#.#.....#...#.......#.#...#.....#.......#...###.....#.#\\n#.#.#.#.#############.###.#.###.#######.#.#.#.#.#.###.#######.#.#####.#.#.#.###.#.#.#.#.#####.###########.#.###########.#############.#####.#\\n#.#...#...........###...#.#...#.........#.#.#...#...#.#.......#.....#.#.#.#.#...#.#.#.#.....#...#.........#...........#.....#...#...#.#.....#\\n#.###############.#####.#.###.###########.#.#######.#.#.###########.#.#.#.#.#.###.#.#.#####.###.#.###################.#####.#.#.#.#.#.#.#####\\n#.#...#.........#.#...#...###...........#.#...#...#.#.#.#.....#.....#...#.#.#.#...#.#.#.....#...#.#.......#.........#.#...#...#...#...#.....#\\n#.#.#.#.#######.#.#.#.#################.#.###.#.#.#.#.#.#.###.#.#########.#.#.#.###.#.#.#####.###.#.#####.#.#######.#.#.#.#################.#\\n#...#...#...#...#...#...###...#.........#.....#.#...#.#.#.#...#.........#...#.#...#.#.#.#...#...#.#.#.....#.#.......#...#.#...#...#.........#\\n#########.#.#.#########.###.#.#.###############.#####.#.#.#.###########.#####.###.#.#.#.#.#.###.#.#.#.#####.#.###########.#.#.#.#.#.#########\\n###.......#...#...#...#.....#.#...........###...#...#.#.#.#.#.....#...#...###.....#.#.#.#.#.....#...#.#...#.#...........#.#.#.#.#.#.........#\\n###.###########.#.#.#.#######.###########.###.###.#.#.#.#.#.#.###.#.#.###.#########.#.#.#.###########.#.#.#.###########.#.#.#.#.#.#########.#\\n#...#...........#...#...#...#.....#.....#...#.....#.#.#.#.#.#.###.#.#.#...#...#...#...#.#...#...#...#...#...#...........#.#.#.#.#.....#.....#\\n#.###.#################.#.#.#####.#.###.###.#######.#.#.#.#.#.###.#.#.#.###.#.#.#.#####.###.#.#.#.#.#########.###########.#.#.#.#####.#.#####\\n#.....#...............#...#.#...#...#...#...#...###.#.#.#.#.#.#...#.#.#.....#...#.###...#...#.#...#...###...#...........#...#...###...#.....#\\n#######.#############.#####.#.#.#####.###.###.#.###.#.#.#.#.#.#.###.#.###########.###.###.###.#######.###.#.###########.###########.#######.#\\n#.....#.......#.....#.#...#.#.#.#...#...#.#...#...#...#...#...#...#.#...#.....#...#...#...###.......#.#...#...........#...###.......#...#...#\\n#.###.#######.#.###.#.#.#.#.#.#.#.#.###.#.#.#####.###############.#.###.#.###.#.###.###.###########.#.#.#############.###.###.#######.#.#.###\\n#.#...###...#...#...#.#.#.#.#.#...#...#...#.#.....###.....###.....#.#...#...#...###...#...#...#...#.#.#.............#...#...#...#...#.#.#...#\\n#.#.#####.#.#####.###.#.#.#.#.#######.#####.#.#######.###.###.#####.#.#####.#########.###.#.#.#.#.#.#.#############.###.###.###.#.#.#.#.###.#\\n#.#...#...#...###...#.#.#.#...#.......#...#.#.###...#.#...#...#...#.#.#...#.........#.#...#.#...#...#...............###.....###...#.#.#.#...#\\n#.###.#.#####.#####.#.#.#.#####.#######.#.#.#.###.#.#.#.###.###.#.#.#.#.#.#########.#.#.###.#######################################.#.#.#.###\\n#...#.#.....#...#...#...#.......#.......#...#.....#...#...#...#.#...#.#.#.#...#...#.#.#.#...#...#.............................###...#.#.#...#\\n###.#.#####.###.#.###############.#######################.###.#.#####.#.#.#.#.#.#.#.#.#.#.###.#.#.###########################.###.###.#.###.#\\n###.#.###...#...#.....#...#.......#...............#...#...#...#.#.....#.#...#...#.#.#.#.#.#...#.#.#.............#...#...#...#...#.....#...#.#\\n###.#.###.###.#######.#.#.#.#######.#############.#.#.#.###.###.#.#####.#########.#.#.#.#.#.###.#.#.###########.#.#.#.#.#.#.###.#########.#.#\\n#...#.....#...#...#...#.#.#.#.....#.............#...#...###.#...#.....#.....#.....#.#...#...###...#...........#.#.#...#.#.#.....###.....#...#\\n#.#########.###.#.#.###.#.#.#.###.#############.###########.#.#######.#####.#.#####.#########################.#.#.#####.#.#########.###.#####\\n#.#...#...#.#...#...#...#.#.#...#.....#...#...#...........#.#.#.......#.....#.......#...#...###...###...#.....#...#...#...#.......#...#.....#\\n#.#.#.#.#.#.#.#######.###.#.###.#####.#.#.#.#.###########.#.#.#.#######.#############.#.#.#.###.#.###.#.#.#########.#.#####.#####.###.#####.#\\n#...#...#.#...#...#...#...#.#...#...#...#.#.#.#...........#...#.......#.........#.....#.#.#.#...#.....#...#.........#.....#.....#.###.#.....#\\n#########.#####.#.#.###.###.#.###.#.#####.#.#.#.#####################.#########.#.#####.#.#.#.#############.#############.#####.#.###.#.#####\\n#.........#...#.#.#.###.#...#.....#.#...#...#...#...#...#...#.........#.....#...#.....#.#.#.#...#.........#...#...........#...#.#...#.#.....#\\n#.#########.#.#.#.#.###.#.#########.#.#.#########.#.#.#.#.#.#.#########.###.#.#######.#.#.#.###.#.#######.###.#.###########.#.#.###.#.#####.#\\n#.#.....#...#.#.#.#...#...#.........#.#.#.........#...#...#.#.......#...###...#...#...#...#.....#.###...#...#.#.............#.#...#...#...#.#\\n#.#.###.#.###.#.#.###.#####.#########.#.#.#################.#######.#.#########.#.#.#############.###.#.###.#.###############.###.#####.#.#.#\\n#.#...#...###...#.....###...#...#.....#...#################......S#...#...#...#.#.#.........#.....#...#.....#.#...............#...#.....#.#.#\\n#.###.###################.###.#.#.#####################################.#.#.#.#.#.#########.#.#####.#########.#.###############.###.#####.#.#\\n#...#...###...#...###.....#...#...#...#############################...#.#...#.#.#.#.....###...#...#...........#...#...###...###.#...#...#...#\\n###.###.###.#.#.#.###.#####.#######.#.#############################.#.#.#####.#.#.#.###.#######.#.###############.#.#.###.#.###.#.###.#.#####\\n#...#...#...#...#.....#...#.#.......#.#######################.......#.#.....#.#.#.#...#.#...###.#.#.............#...#.....#.....#.....#.#...#\\n#.###.###.#############.#.#.#.#######.#######################.#######.#####.#.#.#.###.#.#.#.###.#.#.###########.#######################.#.#.#\\n#.....###.......#...#...#...#.......#.#.....#################...#...#.....#.#...#.....#...#.....#.#.#.........#.........................#.#.#\\n###############.#.#.#.#############.#.#.###.###################.#.#.#####.#.#####################.#.#.#######.###########################.#.#\\n###...#...#...#...#...#.............#...#...#E###...#####...###...#.#.....#.............#.......#.#...#.......###...#...#...#...#...#...#.#.#\\n###.#.#.#.#.#.#########.#################.###.###.#.#####.#.#######.#.#################.#.#####.#.#####.#########.#.#.#.#.#.#.#.#.#.#.#.#.#.#\\n#...#...#...#.#.......#.................#.....#...#...#...#...###...#.###...#...#...###...###...#...###.....#...#.#...#.#.#...#...#...#...#.#\\n#.###########.#.#####.#################.#######.#####.#.#####.###.###.###.#.#.#.#.#.#########.#####.#######.#.#.#.#####.#.#################.#\\n#.#...#.....#...#...#...#.........#.....#.....#.#...#.#.....#.#...#...#...#.#.#.#.#.......#...#...#.........#.#.#.#.....#...#.......#...#...#\\n#.#.#.#.###.#####.#.###.#.#######.#.#####.###.#.#.#.#.#####.#.#.###.###.###.#.#.#.#######.#.###.#.###########.#.#.#.#######.#.#####.#.#.#.###\\n#.#.#.#...#.......#...#...#.....#...#...#.#...#.#.#...#...#.#.#...#...#...#.#.#...#...#...#.....#.........#...#...#.#.......#.....#.#.#.#...#\\n#.#.#.###.###########.#####.###.#####.#.#.#.###.#.#####.#.#.#.###.###.###.#.#.#####.#.#.#################.#.#######.#.###########.#.#.#.###.#\\n#.#.#.....###...###...#.....###.......#...#.....#...#...#...#...#.#...#...#.#...#...#...#.......###.......#.#.....#.#.#...#...#...#...#.....#\\n#.#.#########.#.###.###.###########################.#.#########.#.#.###.###.###.#.#######.#####.###.#######.#.###.#.#.#.#.#.#.#.#############\\n#...#...###...#.....#...###.............#.......#...#.......#...#.#...#...#.#...#.......#.....#...#...#.....#...#.#...#.#...#.#.....#...#...#\\n#####.#.###.#########.#####.###########.#.#####.#.#########.#.###.###.###.#.#.#########.#####.###.###.#.#######.#.#####.#####.#####.#.#.#.#.#\\n#.....#.....#.....#...#...#.........###.#.#...#...#.....#...#...#...#.....#...#.........#.....#...#...#.#.......#.....#.....#.#...#.#.#.#.#.#\\n#.###########.###.#.###.#.#########.###.#.#.#.#####.###.#.#####.###.###########.#########.#####.###.###.#.###########.#####.#.#.#.#.#.#.#.#.#\\n#...........#.###.#.#...#.........#...#...#.#...###...#...#.....###...........#.......#...#...#...#.....#.........###.......#...#...#.#.#.#.#\\n###########.#.###.#.#.###########.###.#####.###.#####.#####.#################.#######.#.###.#.###.###############.###################.#.#.#.#\\n###.........#.#...#.#...#...#...#.#...#...#.#...#...#.....#...#...###...#...#.#.......#.....#.#...#...#.........#.........###...###...#.#.#.#\\n###.#########.#.###.###.#.#.#.#.#.#.###.#.#.#.###.#.#####.###.#.#.###.#.#.#.#.#.#############.#.###.#.#.#######.#########.###.#.###.###.#.#.#\\n#...#...#...#.#.....###...#...#.#.#...#.#.#.#...#.#.....#.#...#.#.#...#.#.#...#.....#...#.....#...#.#.#.......#.#...#...#...#.#...#...#...#.#\\n#.###.#.#.#.#.#################.#.###.#.#.#.###.#.#####.#.#.###.#.#.###.#.#########.#.#.#.#######.#.#.#######.#.#.#.#.#.###.#.###.###.#####.#\\n#.....#...#...#...#######...#...#.....#.#.#.#...#...#...#.#.###.#.#...#.#.....#.....#.#.#.....#...#.#.###...#.#.#.#.#.#.....#.#...#...#...#.#\\n###############.#.#######.#.#.#########.#.#.#.#####.#.###.#.###.#.###.#.#####.#.#####.#.#####.#.###.#.###.#.#.#.#.#.#.#######.#.###.###.#.#.#\\n#...#...#.......#...###...#...#...#...#.#...#.#.....#.#...#...#.#...#.#.#...#.#...#...#.#...#.#...#.#.#...#...#...#.#.........#.....#...#.#.#\\n#.#.#.#.#.#########.###.#######.#.#.#.#.#####.#.#####.#.#####.#.###.#.#.#.#.#.###.#.###.#.#.#.###.#.#.#.###########.#################.###.#.#\\n#.#...#.#.....#...#...#.........#...#.#...#...#...#...#...#...#.#...#.#.#.#...#...#.#...#.#.#...#.#.#.#...........#...#...#...#...#...###...#\\n#.#####.#####.#.#.###.###############.###.#.#####.#.#####.#.###.#.###.#.#.#####.###.#.###.#.###.#.#.#.###########.###.#.#.#.#.#.#.#.#########\\n#.#...#.......#.#...#...#...###.......#...#...#...#...#...#...#.#.....#.#.....#.#...#.....#.#...#...#...#.....#...#...#.#.#.#...#.#.........#\\n#.#.#.#########.###.###.#.#.###.#######.#####.#.#####.#.#####.#.#######.#####.#.#.#########.#.#########.#.###.#.###.###.#.#.#####.#########.#\\n#.#.#...#...#...###...#...#.....#.....#.....#.#.#...#.#.....#.#.###.....#...#.#...#.........#.......#...#.###...###.....#.#.....#...#.....#.#\\n#.#.###.#.#.#.#######.###########.###.#####.#.#.#.#.#.#####.#.#.###.#####.#.#.#####.###############.#.###.###############.#####.###.#.###.#.#\\n#.#.#...#.#.#...#.....#...#.....#.###...#...#.#...#.#.#.....#...#...#...#.#.#.....#...#.......#...#.#...#.....#.........#.#...#...#...###...#\\n#.#.#.###.#.###.#.#####.#.#.###.#.#####.#.###.#####.#.#.#########.###.#.#.#.#####.###.#.#####.#.#.#.###.#####.#.#######.#.#.#.###.###########\\n#...#...#.#.....#.....#.#...###.#.....#.#...#...#...#.#.###.......#...#.#.#.#...#.#...#.#.....#.#...###.#...#...#...#...#.#.#...#...........#\\n#######.#.###########.#.#######.#####.#.###.###.#.###.#.###.#######.###.#.#.#.#.#.#.###.#.#####.#######.#.#.#####.#.#.###.#.###.###########.#\\n#.......#.#...#.......#.###.....#.....#.#...#...#.#...#...#.......#.###...#.#.#...#.....#.....#.......#.#.#.#...#.#...###.#...#.#...........#\\n#.#######.#.#.#.#######.###.#####.#####.#.###.###.#.#####.#######.#.#######.#.###############.#######.#.#.#.#.#.#.#######.###.#.#.###########\\n#.#.......#.#.#.......#.#...#...#...#...#.#...#...#...#...#.......#...#.....#...........#.....#...#...#...#.#.#.#.#...#...#...#.#...........#\\n#.#.#######.#.#######.#.#.###.#.###.#.###.#.###.#####.#.###.#########.#.###############.#.#####.#.#.#######.#.#.#.#.#.#.###.###.###########.#\\n#...#.......#.........#.#...#.#...#.#.#...#.#...#...#.#...#.#...#...#.#...#...#...#...#.#.#...#.#...#...#...#.#.#...#.#.....###.....#.....#.#\\n#####.#################.###.#.###.#.#.#.###.#.###.#.#.###.#.#.#.#.#.#.###.#.#.#.#.#.#.#.#.#.#.#.#####.#.#.###.#.#####.#############.#.###.#.#\\n#.....#...#...........#...#...#...#.#.#.#...#...#.#...#...#.#.#.#.#.#...#.#.#...#.#.#...#...#.#.....#.#.#.#...#.#...#...........###...#...#.#\\n#.#####.#.#.#########.###.#####.###.#.#.#.#####.#.#####.###.#.#.#.#.###.#.#.#####.#.#########.#####.#.#.#.#.###.#.#.###########.#######.###.#\\n#.#...#.#.#.#.........#...###...#...#.#.#.#...#.#...#...###...#.#.#.#...#.#...#...#.#.........#.....#.#.#...#...#.#...#...#...#.......#.....#\\n#.#.#.#.#.#.#.#########.#####.###.###.#.#.#.#.#.###.#.#########.#.#.#.###.###.#.###.#.#########.#####.#.#####.###.###.#.#.#.#.#######.#######\\n#...#...#...#.........#.#.....#...#...#.#...#...###.#.....###...#.#.#...#...#.#...#.#.....#...#.......#.....#.#...#...#.#.#.#...#...#.......#\\n#####################.#.#.#####.###.###.###########.#####.###.###.#.###.###.#.###.#.#####.#.#.#############.#.#.###.###.#.#.###.#.#.#######.#\\n#.....................#.#...#...###...#.#...#.......#...#...#.#...#...#.#...#...#.#...###...#...#...#...#...#.#...#...#.#.#...#.#.#.#.....#.#\\n#.#####################.###.#.#######.#.#.#.#.#######.#.###.#.#.#####.#.#.#####.#.###.#########.#.#.#.#.#.###.###.###.#.#.###.#.#.#.#.###.#.#\\n#.........#...#...#...#.###.#...#.....#...#.#.....#...#.#...#.#.....#.#.#...#...#.#...#.........#.#...#.#...#.#...#...#.#.#...#.#.#...###.#.#\\n#########.#.#.#.#.#.#.#.###.###.#.#########.#####.#.###.#.###.#####.#.#.###.#.###.#.###.#########.#####.###.#.#.###.###.#.#.###.#.#######.#.#\\n#.........#.#...#...#.#.#...#...#.......#...#.....#...#.#...#.#.....#.#.#...#...#.#...#.#.......#.....#.#...#...###...#.#.#.#...#.......#.#.#\\n#.#########.#########.#.#.###.#########.#.###.#######.#.###.#.#.#####.#.#.#####.#.###.#.#.#####.#####.#.#.###########.#.#.#.#.#########.#.#.#\\n#.....#.....#.........#.#.#...#.........#.#...#...#...#.#...#.#.....#.#.#.......#.#...#...#.....#.....#.#.....#...#...#.#.#.#...#.......#.#.#\\n#####.#.#####.#########.#.#.###.#########.#.###.#.#.###.#.###.#####.#.#.#########.#.#######.#####.#####.#####.#.#.#.###.#.#.###.#.#######.#.#\\n#.....#.#.....#...#...#.#.#...#.#...#...#.#.#...#.#.#...#.#...#...#.#.#.....#.....#.....#...#...#.....#.#...#...#.#...#.#.#.#...#.......#.#.#\\n#.#####.#.#####.#.#.#.#.#.###.#.#.#.#.#.#.#.#.###.#.#.###.#.###.#.#.#.#####.#.#########.#.###.#.#####.#.#.#.#####.###.#.#.#.#.#########.#.#.#\\n#.......#.......#...#...#.....#...#...#...#...###...#.....#.....#...#.......#...........#.....#.......#...#.......###...#...#...........#...#\\n#############################################################################################################################################\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export default \"\"","export const solutionMods = import.meta.glob('../advent/day*/solution.ts', {\n  eager: true,\n})\n\nexport const inputMods = import.meta.glob('../advent/day*/input*.md', {\n  eager: true,\n  query: '?raw',\n  import: 'default',\n})\n","import { createEffect, createSignal } from 'solid-js'\n\n/**\n *\n *\n *    Import parsers\n */\n\nconst pathToDay = (path: string) => {\n  return parseInt(path.split('day')[1] || '1')\n}\n\nconst parseOneInputModule = (path: string, raw: string) => {\n  const name = (path.match(/input-?(.+)\\.md$/) || [])[1] || 'Real'\n  const day = pathToDay(path)\n  return { day, name, raw }\n}\n\ntype Solution = (input: string) => string\ninterface SolutionMod {\n  part1?: Solution\n  part2?: Solution\n  answers?: [string, string][]\n}\nconst parseOneSolutionModule = (path: string, mod: SolutionMod) => {\n  const hasSolution = !!(mod.part1 || mod.part2)\n  const part1 = mod['part1'] || (() => '-')\n  const part2 = mod['part2'] || (() => '-')\n  const answers = mod['answers'] || [['', '']]\n  const day = pathToDay(path)\n  return { day, part1, part2, answers, hasSolution }\n}\n\n/**\n *\n *\n *    App state\n */\n\ntype inputData = ReturnType<typeof parseOneInputModule>\nexport type solutionData = ReturnType<typeof parseOneSolutionModule>\n\nexport const [inputs, setInputs] = createSignal<inputData[]>([])\nexport const [solutions, setSolutions] = createSignal<solutionData[]>([])\n\nexport const [day, setDay] = createSignal(1)\nexport const [inputNum, setInputNum] = createSignal(0)\n\nexport const [inputStr, setInputStr] = createSignal('')\n\nexport const [output1, setOutput1] = createSignal({ value: '', time: 0, knownGood: false })\nexport const [output2, setOutput2] = createSignal({ value: '', time: 0, knownGood: false })\n\nexport const [busy, setBusy] = createSignal(false)\nexport const [catchErrors, setCatchErrors] = createSignal(true)\n\n// derived for today\nexport const todaysInputs = () => inputs().filter((input) => input.day === day())\nexport const todaysSolution = () => solutions().find((soln) => soln.day === day())\n\n// helpers\nexport const setOutput = (part: 1 | 2, value = '', time = 0, knownGood = false) => {\n  if (part === 1) setOutput1({ value, time, knownGood })\n  if (part === 2) setOutput2({ value, time, knownGood })\n}\nexport const clearOutputs = () => [setOutput(1), setOutput(2)]\n\n/**\n *\n *\n *    Reactivity - recalc input text when day or inputNum changes\n */\n\nexport const createAllEffects = () => {\n  // input text update from manual input or day/inputNum changes\n  createEffect(() => {\n    if (inputNum() >= todaysInputs().length) return setInputNum(todaysInputs().length - 1)\n    const input = todaysInputs()[inputNum()]\n    const soln = todaysSolution()\n    if (!input || !soln) return clearOutputs()\n    setInputStr(input.raw)\n  })\n}\n\n/**\n *\n *\n *    solution running (manually triggered, not reactive)\n */\n\nexport const runCurrentSolution = async () => {\n  const soln = todaysSolution()\n  const input = inputStr()\n  if (!soln || !input) return clearOutputs()\n  const answers = soln.answers[inputNum()] || ['', '']\n\n  // run solutions in timeout so that UI library doesn't catch errors\n  setTimeout(runSolution, 0, 1, soln.part1, input, answers[0])\n  setTimeout(runSolution, 5, 2, soln.part2, input, answers[1])\n}\n\nconst runSolution = async (part: 1 | 2, sol: Solution, input: string, answer: string) => {\n  if (busy()) return\n  setBusy(true)\n  const { output, dt } = await runOneSolution(sol, input, catchErrors())\n  setOutput(part, output, dt, output === answer)\n  setBusy(false)\n}\n\nconst runOneSolution = async (solFn: Solution, input: string, shouldCatch: boolean) => {\n  const t = performance.now()\n  const output = (() => {\n    if (!shouldCatch) return String(solFn(input))\n    try {\n      return String(solFn(input))\n    } catch (err) {\n      return `Error: ${err}`\n    }\n  })()\n  return { output, dt: performance.now() - t }\n}\n\nexport const runAllSolutions = async () => {\n  if (busy()) return\n  setBusy(true)\n  clearOutputs()\n\n  const outs = ['', '']\n  const dts = [0, 0]\n  const oks = [true, true]\n  for (let i = 0; i < solutions().length; i++) {\n    const sol = solutions()[i]\n    const input = inputs().filter((input) => input.day === i + 1)[0].raw\n\n    for (let part = 0; part < 2; part++) {\n      const { output, dt } = await runOneSolution(part === 0 ? sol.part1 : sol.part2, input, true)\n      dts[part] += dt\n      const ok = output === sol.answers[0][part]\n      oks[part] &&= ok\n      outs[part] += ok ? '★' : '-'\n      setOutput((part + 1) as 1 | 2, outs[part], dts[part], oks[part])\n      await new Promise((r) => setTimeout(r, 0))\n    }\n  }\n\n  setBusy(false)\n}\n\n/**\n *\n *\n *    HMR for solution/input modules\n */\n\nimport * as imported from './importer'\n\nconst onModuleImport = (mods: typeof imported) => {\n  setInputs(\n    Object.keys(mods.inputMods)\n      .map((path) => parseOneInputModule(path, mods.inputMods[path] as string))\n      .sort((a, b) => a.name.localeCompare(b.name))\n  )\n  setSolutions(\n    Object.keys(mods.solutionMods)\n      .map((path) => parseOneSolutionModule(path, mods.solutionMods[path] as SolutionMod))\n      .filter((soln) => soln.hasSolution)\n      .sort((a, b) => a.day - b.day)\n  )\n  runCurrentSolution()\n}\n\nif (import.meta.hot) {\n  import.meta.hot.accept('./importer', (mod) => onModuleImport(mod as unknown as typeof imported))\n}\n\n// app init\nonModuleImport(imported)\nsetDay(solutions().at(-1)?.day || 1)\nsetTimeout(runCurrentSolution, 0)\n\n","import { output1, output2 } from '../state'\n\n//\n\nconst getOutputRows = (str = '') => {\n  const lines = str.split('\\n').length\n  return Math.min(lines, Math.max(lines, 1, 10))\n}\n\nexport const PartOutput = ({ part = 1 }) => {\n  const output = part === 1 ? output1 : output2\n  return (\n    <>\n      <div class=\"label\">\n        <h4>Part {part}:</h4>\n        <div class=\"time\">({output().time.toFixed(0)}ms)</div>\n      </div>\n\n      <textarea\n        class=\"output\"\n        disabled\n        value={output().value}\n        classList={{ 'correct-answer': output().knownGood }}\n        rows={getOutputRows(output().value)}\n      />\n    </>\n  )\n}\n","interface Props {\n  label: string\n  onClick: () => void\n  isToggled: boolean\n  classes?: Record<string, boolean>\n}\n\nexport const ToggleButton = (props: Props) => {\n  const classList = () => ({\n    ...props.classes,\n    button: true,\n    toggled: props.isToggled,\n  })\n  return (\n    <button classList={classList()} onClick={props.onClick}>\n      {props.label}\n    </button>\n  )\n}\n","import { day, inputNum, inputs, runCurrentSolution, setInputNum } from '../state'\nimport { ToggleButton } from './ToggleButton'\n\n//\n\nexport const InputsNav = () => {\n  const buts = () =>\n    inputs()\n      .filter((input) => input.day === day())\n      .map((input, i) => ({\n        label: input.name,\n        isToggled: i === inputNum(),\n        onClick: () => {\n          setInputNum(i)\n          runCurrentSolution()\n        },\n        classes: { 'input-toggle': true },\n      }))\n\n  return (\n    <div class=\"label\" style=\"align-self: flex-start;\">\n      <h4>Input:</h4>\n      <br />\n      {buts().map((but) => (\n        <ToggleButton {...but} />\n      ))}\n    </div>\n  )\n}\n","import { day, runCurrentSolution, setDay, solutions } from '../state'\nimport { ToggleButton } from './ToggleButton'\n\n//\n\nexport const DayButtons = () => {\n  return solutions().map((solution) => (\n    <ToggleButton\n      label={solution.day.toString().padStart(2, '0')}\n      isToggled={solution.day === day()}\n      onClick={() => {\n        setDay(solution.day)\n        runCurrentSolution()\n      }}\n    />\n  ))\n}\n","import { inputStr, runCurrentSolution, setInputStr } from '../state'\n\n//\n\nconst TextArea = (props: { value: string; onUpdate: (s: string) => void }) => {\n  return (\n    <textarea\n      rows=\"14\"\n      value={props.value}\n      onInput={(e) => {\n        props.onUpdate(e.target.value)\n        runCurrentSolution()\n      }}\n    />\n  )\n}\n\nexport const InputArea = () => {\n  return <TextArea value={inputStr()} onUpdate={setInputStr} />\n}\n","import { catchErrors, setCatchErrors } from '../state'\nimport { ToggleButton } from './ToggleButton'\n\n//\n\nexport const CatchButton = () => {\n  return (\n    <div class=\"catch-area\">\n      Catch errors\n      <ToggleButton\n        label=\"x\"\n        classes={{ 'input-toggle': true, 'catch-button': true }}\n        isToggled={catchErrors()}\n        onClick={() => setCatchErrors((v) => !v)}\n      />\n    </div>\n  )\n}\n","import { runAllSolutions } from '../state'\nimport { ToggleButton } from './ToggleButton'\n\n//\n\nexport const RunAllButton = () => {\n  return (\n    <ToggleButton\n      label=\"Run all\"\n      classes={{ 'input-toggle': false, 'run-all-button': true }}\n      isToggled={false}\n      onClick={() => runAllSolutions()}\n    />\n  )\n}\n","/* @refresh reload */\n\nimport { PartOutput } from './components/PartOutput'\nimport { InputsNav } from './components/InputsNav'\nimport { DayButtons } from './components/DayButtons'\nimport { InputArea } from './components/InputArea'\nimport { createAllEffects } from './state'\nimport { CatchButton } from './components/CatchButton'\nimport { RunAllButton } from './components/RunAllButton'\n\n//\n\nexport const App = () => {\n  createAllEffects()\n\n  return (\n    <main>\n      <header>\n        <h2>Advent 2024</h2>\n      </header>\n      <article class=\"layout\">\n        {/* Day buttons */}\n        <div class=\"label\">\n          <h4>Days:</h4>\n        </div>\n        <div>\n          <DayButtons />\n          <br />\n          <RunAllButton />\n        </div>\n\n        {/* Part outputs */}\n        <PartOutput part={1} />\n        <PartOutput part={2} />\n\n        {/* Inputs */}\n        <InputsNav />\n        <InputArea />\n\n        {/* catch button */}\n        <div />\n        <CatchButton />\n      </article>\n    </main>\n  )\n}\n","import { render } from 'solid-js/web'\nimport './base.css'\nimport { App } from './App/App'\n\nconst root = document.getElementById('root')\n\nif (import.meta.env.DEV && !(root instanceof HTMLElement)) {\n  throw new Error('Missing root element')\n}\n\nrender(App, root as HTMLElement)\n"],"names":["equalFn","a","b","signalOptions","runEffects","runQueue","STALE","PENDING","UNOWNED","Owner","Transition","ExternalSourceConfig","Listener","Updates","Effects","ExecCount","createRoot","fn","detachedOwner","listener","owner","unowned","current","root","updateFn","untrack","cleanNode","runUpdates","createSignal","value","options","s","setter","writeSignal","readSignal","createRenderEffect","c","createComputation","updateComputation","createEffect","runUserEffects","updates","lookUpstream","sSlot","node","isComp","i","o","TransitionRunning","markDownstream","time","runComputation","nextValue","err","handleError","init","pure","state","runTop","ancestors","wait","res","completeUpdates","e","queue","userLength","ignore","source","index","obs","n","castError","createComponent","Comp","props","reconcileArrays","parentNode","bLength","aEnd","bEnd","aStart","bStart","after","map","sequence","t","$$EVENTS","render","code","element","disposer","dispose","insert","template","html","isImportNode","isSVG","create","delegateEvents","eventNames","document","l","name","eventHandler","setAttribute","addEventListener","handler","delegate","classList","prev","classKeys","prevKeys","len","key","toggleClassKey","classValue","parent","accessor","marker","initial","insertExpression","classNames","nameLen","oriTarget","oriCurrentTarget","retarget","handleNode","data","walkUpTree","path","unwrapArray","multi","cleanChildren","v","array","currentArray","normalizeIncomingArray","appendNodes","normalized","unwrap","dynamic","item","replacement","inserted","el","isParent","answers","part1","input","pairs","line","acc","part2","cts","total","nums","sign","ok","num","arr","check","copy","part","doPart","lines","get","j","dirs","row","char","di","dj","k","word","dx","dy","part1_impl","rulePairs","follows","wrongSets","ng","sum","start","seen","visited","dir","x","next","barriersByAxis","addBarrier","removeBarrier","getDistToBarrier","axis","y","barriers","barrierY","by","checkForLoop","seens","dist","ix","sacc","snum","parse","nodes","si","sj","antinodes","maybeAdd","i1","j1","i2","j2","pi","pj","locs","mult","gaps","checkSum","currNum","lastIx","lastNum","pos","gap","numVals","_","numVal","gapIx","nines","loc","curr","lower","ct","lowerct","impl","iter","xform","xform_cache","xform_memo","numStr","count","marked","search","onHit","findPerimeter","hits","perim","countWalls","walls","n1","n2","add","ax","ay","bx","cx","cy","ma","ba","mb","bb","na","nb","sx","sy","dt","quads","mod","vx","vy","x2","y2","iy","bots","vel","moves","spos","set","move","ch","cell","mapTransform","vert","toMove","mi","mj","deduped","parseAndFlood","sposIx","eposIx","epos","costs","setCosts","cost","vals","ndir","nvals","isCostBetter","frontier","costHere","ni","nj","ncost","ecosts","ecost","chere","nc","cdiff","evalProg","prog","aval","literal","op","combo","div","impls","output","inst","as","progstr","answer","tgt","BinaryHeapStrategy_1","BinaryHeapStrategy$1","ret","last","left","right","minIndex","BinaryHeapStrategy","PriorityQueue_1","require$$0","PriorityQueue$1","PriorityQueue","tsPriorityQueue","ts_priority_queue_1","wrapNode","previous","f","g","open","Pathfinder","params","goal","startKey","goalKey","startNode","neighbor","moveCost","neighborKey","nnode","newnode","end","p","prepare","finder","getCounts","pstr","dstr","patterns","designs","known","des","pat","countSkips","skipTime","cutoff","times","offsets","skips","__vite_glob_1_0","__vite_glob_1_1","__vite_glob_1_2","__vite_glob_1_3","__vite_glob_1_4","__vite_glob_1_5","__vite_glob_1_6","__vite_glob_1_7","__vite_glob_1_8","__vite_glob_1_9","__vite_glob_1_10","__vite_glob_1_11","__vite_glob_1_12","__vite_glob_1_13","__vite_glob_1_14","__vite_glob_1_15","__vite_glob_1_16","__vite_glob_1_17","__vite_glob_1_18","__vite_glob_1_19","__vite_glob_1_20","__vite_glob_1_21","__vite_glob_1_22","__vite_glob_1_23","__vite_glob_1_24","__vite_glob_1_25","__vite_glob_1_26","__vite_glob_1_27","__vite_glob_1_28","__vite_glob_1_29","__vite_glob_1_30","__vite_glob_1_31","__vite_glob_1_32","__vite_glob_1_33","__vite_glob_1_34","__vite_glob_1_35","__vite_glob_1_36","__vite_glob_1_37","__vite_glob_1_38","__vite_glob_1_39","__vite_glob_1_40","__vite_glob_1_41","__vite_glob_1_42","__vite_glob_1_43","__vite_glob_1_44","__vite_glob_1_45","__vite_glob_1_46","__vite_glob_1_47","__vite_glob_1_48","__vite_glob_1_49","__vite_glob_1_50","__vite_glob_1_51","solutionMods","__vite_glob_0_0","__vite_glob_0_1","__vite_glob_0_2","__vite_glob_0_3","__vite_glob_0_4","__vite_glob_0_5","__vite_glob_0_6","__vite_glob_0_7","__vite_glob_0_8","__vite_glob_0_9","__vite_glob_0_10","__vite_glob_0_11","__vite_glob_0_12","__vite_glob_0_13","__vite_glob_0_14","__vite_glob_0_15","__vite_glob_0_16","__vite_glob_0_17","__vite_glob_0_18","__vite_glob_0_19","__vite_glob_0_20","__vite_glob_0_21","__vite_glob_0_22","__vite_glob_0_23","__vite_glob_0_24","inputMods","pathToDay","parseOneInputModule","raw","parseOneSolutionModule","hasSolution","inputs","setInputs","solutions","setSolutions","day","setDay","inputNum","setInputNum","inputStr","setInputStr","output1","setOutput1","output2","setOutput2","busy","setBusy","catchErrors","setCatchErrors","todaysInputs","todaysSolution","soln","setOutput","knownGood","clearOutputs","createAllEffects","runCurrentSolution","runSolution","sol","runOneSolution","solFn","shouldCatch","runAllSolutions","outs","dts","oks","r","onModuleImport","mods","imported","getOutputRows","str","split","length","Math","min","max","PartOutput","_el$","_tmpl$","_el$2","firstChild","_el$3","_el$5","nextSibling","_el$6","_el$7","_el$9","toFixed","_el$10","_tmpl$2","_$effect","_p$","_v$","_v$2","toggle","_$setAttribute","undefined","ToggleButton","classes","button","toggled","isToggled","_$addEventListener","onClick","label","_$classList","_$p","_$delegateEvents","InputsNav","buts","filter","_$createComponent","but","DayButtons","solution","toString","padStart","TextArea","$$input","onUpdate","target","InputArea","CatchButton","RunAllButton","App","_el$4","_$insert"],"mappings":"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AC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WCAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBCAAC,GAAA,0ECAAC,GAAA,4ECAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA,whGCAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YCAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8ICAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBCAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,goICAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iuBCAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cCAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDCAAC,GAAA,sBCAAC,GAAA,kinBCAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UCAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CCAAC,GAAA,SCAAC,GAAA,uyuBCAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eiBCAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wECAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0+BCAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,msBCAAC,GAAA;AAAA;AAAA;AAAA;AAAA,soDCAAC,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;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","x_google_ignoreList":[0,1,19,20,21,22]}